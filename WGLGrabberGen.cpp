#include "WGLGrabberGen.h"
void (*glDrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
void (*glTexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
void (*glTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void (*glCopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glActiveTexture)(GLenum texture);
void (*glSampleCoverage)(GLfloat value, GLboolean invert);
void (*glCompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
void (*glCompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
void (*glCompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
void (*glCompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
void (*glCompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
void (*glCompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
void (*glGetCompressedTexImage)(GLenum target, GLint level, void *img);
void (*glClientActiveTexture)(GLenum texture);
void (*glMultiTexCoord1d)(GLenum target, GLdouble s);
void (*glMultiTexCoord1dv)(GLenum target, const GLdouble *v);
void (*glMultiTexCoord1f)(GLenum target, GLfloat s);
void (*glMultiTexCoord1fv)(GLenum target, const GLfloat *v);
void (*glMultiTexCoord1i)(GLenum target, GLint s);
void (*glMultiTexCoord1iv)(GLenum target, const GLint *v);
void (*glMultiTexCoord1s)(GLenum target, GLshort s);
void (*glMultiTexCoord1sv)(GLenum target, const GLshort *v);
void (*glMultiTexCoord2d)(GLenum target, GLdouble s, GLdouble t);
void (*glMultiTexCoord2dv)(GLenum target, const GLdouble *v);
void (*glMultiTexCoord2f)(GLenum target, GLfloat s, GLfloat t);
void (*glMultiTexCoord2fv)(GLenum target, const GLfloat *v);
void (*glMultiTexCoord2i)(GLenum target, GLint s, GLint t);
void (*glMultiTexCoord2iv)(GLenum target, const GLint *v);
void (*glMultiTexCoord2s)(GLenum target, GLshort s, GLshort t);
void (*glMultiTexCoord2sv)(GLenum target, const GLshort *v);
void (*glMultiTexCoord3d)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
void (*glMultiTexCoord3dv)(GLenum target, const GLdouble *v);
void (*glMultiTexCoord3f)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
void (*glMultiTexCoord3fv)(GLenum target, const GLfloat *v);
void (*glMultiTexCoord3i)(GLenum target, GLint s, GLint t, GLint r);
void (*glMultiTexCoord3iv)(GLenum target, const GLint *v);
void (*glMultiTexCoord3s)(GLenum target, GLshort s, GLshort t, GLshort r);
void (*glMultiTexCoord3sv)(GLenum target, const GLshort *v);
void (*glMultiTexCoord4d)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void (*glMultiTexCoord4dv)(GLenum target, const GLdouble *v);
void (*glMultiTexCoord4f)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void (*glMultiTexCoord4fv)(GLenum target, const GLfloat *v);
void (*glMultiTexCoord4i)(GLenum target, GLint s, GLint t, GLint r, GLint q);
void (*glMultiTexCoord4iv)(GLenum target, const GLint *v);
void (*glMultiTexCoord4s)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void (*glMultiTexCoord4sv)(GLenum target, const GLshort *v);
void (*glLoadTransposeMatrixf)(const GLfloat *m);
void (*glLoadTransposeMatrixd)(const GLdouble *m);
void (*glMultTransposeMatrixf)(const GLfloat *m);
void (*glMultTransposeMatrixd)(const GLdouble *m);
void (*glBlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void (*glMultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
void (*glMultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
void (*glPointParameterf)(GLenum pname, GLfloat param);
void (*glPointParameterfv)(GLenum pname, const GLfloat *params);
void (*glPointParameteri)(GLenum pname, GLint param);
void (*glPointParameteriv)(GLenum pname, const GLint *params);
void (*glFogCoordf)(GLfloat coord);
void (*glFogCoordfv)(const GLfloat *coord);
void (*glFogCoordd)(GLdouble coord);
void (*glFogCoorddv)(const GLdouble *coord);
void (*glFogCoordPointer)(GLenum type, GLsizei stride, const void *pointer);
void (*glSecondaryColor3b)(GLbyte red, GLbyte green, GLbyte blue);
void (*glSecondaryColor3bv)(const GLbyte *v);
void (*glSecondaryColor3d)(GLdouble red, GLdouble green, GLdouble blue);
void (*glSecondaryColor3dv)(const GLdouble *v);
void (*glSecondaryColor3f)(GLfloat red, GLfloat green, GLfloat blue);
void (*glSecondaryColor3fv)(const GLfloat *v);
void (*glSecondaryColor3i)(GLint red, GLint green, GLint blue);
void (*glSecondaryColor3iv)(const GLint *v);
void (*glSecondaryColor3s)(GLshort red, GLshort green, GLshort blue);
void (*glSecondaryColor3sv)(const GLshort *v);
void (*glSecondaryColor3ub)(GLubyte red, GLubyte green, GLubyte blue);
void (*glSecondaryColor3ubv)(const GLubyte *v);
void (*glSecondaryColor3ui)(GLuint red, GLuint green, GLuint blue);
void (*glSecondaryColor3uiv)(const GLuint *v);
void (*glSecondaryColor3us)(GLushort red, GLushort green, GLushort blue);
void (*glSecondaryColor3usv)(const GLushort *v);
void (*glSecondaryColorPointer)(GLint size, GLenum type, GLsizei stride, const void *pointer);
void (*glWindowPos2d)(GLdouble x, GLdouble y);
void (*glWindowPos2dv)(const GLdouble *v);
void (*glWindowPos2f)(GLfloat x, GLfloat y);
void (*glWindowPos2fv)(const GLfloat *v);
void (*glWindowPos2i)(GLint x, GLint y);
void (*glWindowPos2iv)(const GLint *v);
void (*glWindowPos2s)(GLshort x, GLshort y);
void (*glWindowPos2sv)(const GLshort *v);
void (*glWindowPos3d)(GLdouble x, GLdouble y, GLdouble z);
void (*glWindowPos3dv)(const GLdouble *v);
void (*glWindowPos3f)(GLfloat x, GLfloat y, GLfloat z);
void (*glWindowPos3fv)(const GLfloat *v);
void (*glWindowPos3i)(GLint x, GLint y, GLint z);
void (*glWindowPos3iv)(const GLint *v);
void (*glWindowPos3s)(GLshort x, GLshort y, GLshort z);
void (*glWindowPos3sv)(const GLshort *v);
void (*glBlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void (*glBlendEquation)(GLenum mode);
void (*glGenQueries)(GLsizei n, GLuint *ids);
void (*glDeleteQueries)(GLsizei n, const GLuint *ids);
GLboolean (*glIsQuery)(GLuint id);
void (*glBeginQuery)(GLenum target, GLuint id);
void (*glEndQuery)(GLenum target);
void (*glGetQueryiv)(GLenum target, GLenum pname, GLint *params);
void (*glGetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
void (*glGetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
void (*glBindBuffer)(GLenum target, GLuint buffer);
void (*glDeleteBuffers)(GLsizei n, const GLuint *buffers);
void (*glGenBuffers)(GLsizei n, GLuint *buffers);
GLboolean (*glIsBuffer)(GLuint buffer);
void (*glBufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
void (*glBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
void (*glGetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
GLboolean (*glUnmapBuffer)(GLenum target);
void (*glGetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
void (*glGetBufferPointerv)(GLenum target, GLenum pname, void **params);
void (*glBlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
void (*glDrawBuffers)(GLsizei n, const GLenum *bufs);
void (*glStencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void (*glStencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
void (*glStencilMaskSeparate)(GLenum face, GLuint mask);
void (*glAttachShader)(GLuint program, GLuint shader);
void (*glBindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
void (*glCompileShader)(GLuint shader);
GLuint (*glCreateProgram)(void);
GLuint (*glCreateShader)(GLenum type);
void (*glDeleteProgram)(GLuint program);
void (*glDeleteShader)(GLuint shader);
void (*glDetachShader)(GLuint program, GLuint shader);
void (*glDisableVertexAttribArray)(GLuint index);
void (*glEnableVertexAttribArray)(GLuint index);
void (*glGetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void (*glGetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void (*glGetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
GLint (*glGetAttribLocation)(GLuint program, const GLchar *name);
void (*glGetProgramiv)(GLuint program, GLenum pname, GLint *params);
void (*glGetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void (*glGetShaderiv)(GLuint shader, GLenum pname, GLint *params);
void (*glGetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void (*glGetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
GLint (*glGetUniformLocation)(GLuint program, const GLchar *name);
void (*glGetUniformfv)(GLuint program, GLint location, GLfloat *params);
void (*glGetUniformiv)(GLuint program, GLint location, GLint *params);
void (*glGetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
void (*glGetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
void (*glGetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
void (*glGetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
GLboolean (*glIsProgram)(GLuint program);
GLboolean (*glIsShader)(GLuint shader);
void (*glLinkProgram)(GLuint program);
void (*glShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
void (*glUseProgram)(GLuint program);
void (*glUniform1f)(GLint location, GLfloat v0);
void (*glUniform2f)(GLint location, GLfloat v0, GLfloat v1);
void (*glUniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void (*glUniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void (*glUniform1i)(GLint location, GLint v0);
void (*glUniform2i)(GLint location, GLint v0, GLint v1);
void (*glUniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
void (*glUniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void (*glUniform1fv)(GLint location, GLsizei count, const GLfloat *value);
void (*glUniform2fv)(GLint location, GLsizei count, const GLfloat *value);
void (*glUniform3fv)(GLint location, GLsizei count, const GLfloat *value);
void (*glUniform4fv)(GLint location, GLsizei count, const GLfloat *value);
void (*glUniform1iv)(GLint location, GLsizei count, const GLint *value);
void (*glUniform2iv)(GLint location, GLsizei count, const GLint *value);
void (*glUniform3iv)(GLint location, GLsizei count, const GLint *value);
void (*glUniform4iv)(GLint location, GLsizei count, const GLint *value);
void (*glUniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glUniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glUniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glValidateProgram)(GLuint program);
void (*glVertexAttrib1d)(GLuint index, GLdouble x);
void (*glVertexAttrib1dv)(GLuint index, const GLdouble *v);
void (*glVertexAttrib1f)(GLuint index, GLfloat x);
void (*glVertexAttrib1fv)(GLuint index, const GLfloat *v);
void (*glVertexAttrib1s)(GLuint index, GLshort x);
void (*glVertexAttrib1sv)(GLuint index, const GLshort *v);
void (*glVertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
void (*glVertexAttrib2dv)(GLuint index, const GLdouble *v);
void (*glVertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
void (*glVertexAttrib2fv)(GLuint index, const GLfloat *v);
void (*glVertexAttrib2s)(GLuint index, GLshort x, GLshort y);
void (*glVertexAttrib2sv)(GLuint index, const GLshort *v);
void (*glVertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void (*glVertexAttrib3dv)(GLuint index, const GLdouble *v);
void (*glVertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void (*glVertexAttrib3fv)(GLuint index, const GLfloat *v);
void (*glVertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
void (*glVertexAttrib3sv)(GLuint index, const GLshort *v);
void (*glVertexAttrib4Nbv)(GLuint index, const GLbyte *v);
void (*glVertexAttrib4Niv)(GLuint index, const GLint *v);
void (*glVertexAttrib4Nsv)(GLuint index, const GLshort *v);
void (*glVertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void (*glVertexAttrib4Nubv)(GLuint index, const GLubyte *v);
void (*glVertexAttrib4Nuiv)(GLuint index, const GLuint *v);
void (*glVertexAttrib4Nusv)(GLuint index, const GLushort *v);
void (*glVertexAttrib4bv)(GLuint index, const GLbyte *v);
void (*glVertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glVertexAttrib4dv)(GLuint index, const GLdouble *v);
void (*glVertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glVertexAttrib4fv)(GLuint index, const GLfloat *v);
void (*glVertexAttrib4iv)(GLuint index, const GLint *v);
void (*glVertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void (*glVertexAttrib4sv)(GLuint index, const GLshort *v);
void (*glVertexAttrib4ubv)(GLuint index, const GLubyte *v);
void (*glVertexAttrib4uiv)(GLuint index, const GLuint *v);
void (*glVertexAttrib4usv)(GLuint index, const GLushort *v);
void (*glVertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
void (*glUniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glUniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glUniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glUniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glUniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glUniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void (*glGetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
void (*glGetIntegeri_v)(GLenum target, GLuint index, GLint *data);
void (*glEnablei)(GLenum target, GLuint index);
void (*glDisablei)(GLenum target, GLuint index);
GLboolean (*glIsEnabledi)(GLenum target, GLuint index);
void (*glBeginTransformFeedback)(GLenum primitiveMode);
void (*glEndTransformFeedback)(void);
void (*glBindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void (*glBindBufferBase)(GLenum target, GLuint index, GLuint buffer);
void (*glTransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
void (*glGetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
void (*glClampColor)(GLenum target, GLenum clamp);
void (*glBeginConditionalRender)(GLuint id, GLenum mode);
void (*glEndConditionalRender)(void);
void (*glVertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
void (*glGetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
void (*glGetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
void (*glVertexAttribI1i)(GLuint index, GLint x);
void (*glVertexAttribI2i)(GLuint index, GLint x, GLint y);
void (*glVertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
void (*glVertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
void (*glVertexAttribI1ui)(GLuint index, GLuint x);
void (*glVertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
void (*glVertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
void (*glVertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void (*glVertexAttribI1iv)(GLuint index, const GLint *v);
void (*glVertexAttribI2iv)(GLuint index, const GLint *v);
void (*glVertexAttribI3iv)(GLuint index, const GLint *v);
void (*glVertexAttribI4iv)(GLuint index, const GLint *v);
void (*glVertexAttribI1uiv)(GLuint index, const GLuint *v);
void (*glVertexAttribI2uiv)(GLuint index, const GLuint *v);
void (*glVertexAttribI3uiv)(GLuint index, const GLuint *v);
void (*glVertexAttribI4uiv)(GLuint index, const GLuint *v);
void (*glVertexAttribI4bv)(GLuint index, const GLbyte *v);
void (*glVertexAttribI4sv)(GLuint index, const GLshort *v);
void (*glVertexAttribI4ubv)(GLuint index, const GLubyte *v);
void (*glVertexAttribI4usv)(GLuint index, const GLushort *v);
void (*glGetUniformuiv)(GLuint program, GLint location, GLuint *params);
void (*glBindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
GLint (*glGetFragDataLocation)(GLuint program, const GLchar *name);
void (*glUniform1ui)(GLint location, GLuint v0);
void (*glUniform2ui)(GLint location, GLuint v0, GLuint v1);
void (*glUniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
void (*glUniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void (*glUniform1uiv)(GLint location, GLsizei count, const GLuint *value);
void (*glUniform2uiv)(GLint location, GLsizei count, const GLuint *value);
void (*glUniform3uiv)(GLint location, GLsizei count, const GLuint *value);
void (*glUniform4uiv)(GLint location, GLsizei count, const GLuint *value);
void (*glTexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
void (*glTexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
void (*glGetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
void (*glGetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
void (*glClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
void (*glClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
void (*glClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
void (*glClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLboolean (*glIsRenderbuffer)(GLuint renderbuffer);
void (*glBindRenderbuffer)(GLenum target, GLuint renderbuffer);
void (*glDeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
void (*glGenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
void (*glRenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void (*glGetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
GLboolean (*glIsFramebuffer)(GLuint framebuffer);
void (*glBindFramebuffer)(GLenum target, GLuint framebuffer);
void (*glDeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
void (*glGenFramebuffers)(GLsizei n, GLuint *framebuffers);
GLenum (*glCheckFramebufferStatus)(GLenum target);
void (*glFramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void (*glFramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void (*glFramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void (*glFramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void (*glGetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
void (*glGenerateMipmap)(GLenum target);
void (*glBlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void (*glRenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void (*glFramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void (*glFlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
void (*glBindVertexArray)(GLuint array);
void (*glDeleteVertexArrays)(GLsizei n, const GLuint *arrays);
void (*glGenVertexArrays)(GLsizei n, GLuint *arrays);
GLboolean (*glIsVertexArray)(GLuint array);
void (*glDrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
void (*glDrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
void (*glTexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
void (*glPrimitiveRestartIndex)(GLuint index);
void (*glCopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void (*glGetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
void (*glGetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
void (*glGetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
GLuint (*glGetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
void (*glGetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
void (*glGetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
void (*glUniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
void (*glDrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
void (*glDrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
void (*glDrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
void (*glMultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
void (*glProvokingVertex)(GLenum mode);
GLsync (*glFenceSync)(GLenum condition, GLbitfield flags);
GLboolean (*glIsSync)(GLsync sync);
void (*glDeleteSync)(GLsync sync);
GLenum (*glClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
void (*glWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
void (*glGetInteger64v)(GLenum pname, GLint64 *data);
void (*glGetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void (*glGetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
void (*glGetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
void (*glFramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
void (*glTexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void (*glTexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void (*glGetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
void (*glSampleMaski)(GLuint maskNumber, GLbitfield mask);
void (*glBindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
GLint (*glGetFragDataIndex)(GLuint program, const GLchar *name);
void (*glGenSamplers)(GLsizei count, GLuint *samplers);
void (*glDeleteSamplers)(GLsizei count, const GLuint *samplers);
GLboolean (*glIsSampler)(GLuint sampler);
void (*glBindSampler)(GLuint unit, GLuint sampler);
void (*glSamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
void (*glSamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
void (*glSamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
void (*glSamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
void (*glSamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
void (*glSamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
void (*glGetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
void (*glGetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
void (*glGetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
void (*glGetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
void (*glQueryCounter)(GLuint id, GLenum target);
void (*glGetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
void (*glGetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
void (*glVertexAttribDivisor)(GLuint index, GLuint divisor);
void (*glVertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void (*glVertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void (*glVertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void (*glVertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void (*glVertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void (*glVertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void (*glVertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void (*glVertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void (*glVertexP2ui)(GLenum type, GLuint value);
void (*glVertexP2uiv)(GLenum type, const GLuint *value);
void (*glVertexP3ui)(GLenum type, GLuint value);
void (*glVertexP3uiv)(GLenum type, const GLuint *value);
void (*glVertexP4ui)(GLenum type, GLuint value);
void (*glVertexP4uiv)(GLenum type, const GLuint *value);
void (*glTexCoordP1ui)(GLenum type, GLuint coords);
void (*glTexCoordP1uiv)(GLenum type, const GLuint *coords);
void (*glTexCoordP2ui)(GLenum type, GLuint coords);
void (*glTexCoordP2uiv)(GLenum type, const GLuint *coords);
void (*glTexCoordP3ui)(GLenum type, GLuint coords);
void (*glTexCoordP3uiv)(GLenum type, const GLuint *coords);
void (*glTexCoordP4ui)(GLenum type, GLuint coords);
void (*glTexCoordP4uiv)(GLenum type, const GLuint *coords);
void (*glMultiTexCoordP1ui)(GLenum texture, GLenum type, GLuint coords);
void (*glMultiTexCoordP1uiv)(GLenum texture, GLenum type, const GLuint *coords);
void (*glMultiTexCoordP2ui)(GLenum texture, GLenum type, GLuint coords);
void (*glMultiTexCoordP2uiv)(GLenum texture, GLenum type, const GLuint *coords);
void (*glMultiTexCoordP3ui)(GLenum texture, GLenum type, GLuint coords);
void (*glMultiTexCoordP3uiv)(GLenum texture, GLenum type, const GLuint *coords);
void (*glMultiTexCoordP4ui)(GLenum texture, GLenum type, GLuint coords);
void (*glMultiTexCoordP4uiv)(GLenum texture, GLenum type, const GLuint *coords);
void (*glNormalP3ui)(GLenum type, GLuint coords);
void (*glNormalP3uiv)(GLenum type, const GLuint *coords);
void (*glColorP3ui)(GLenum type, GLuint color);
void (*glColorP3uiv)(GLenum type, const GLuint *color);
void (*glColorP4ui)(GLenum type, GLuint color);
void (*glColorP4uiv)(GLenum type, const GLuint *color);
void (*glSecondaryColorP3ui)(GLenum type, GLuint color);
void (*glSecondaryColorP3uiv)(GLenum type, const GLuint *color);
void (*glMinSampleShading)(GLfloat value);
void (*glBlendEquationi)(GLuint buf, GLenum mode);
void (*glBlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void (*glBlendFunci)(GLuint buf, GLenum src, GLenum dst);
void (*glBlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void (*glDrawArraysIndirect)(GLenum mode, const void *indirect);
void (*glDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
void (*glUniform1d)(GLint location, GLdouble x);
void (*glUniform2d)(GLint location, GLdouble x, GLdouble y);
void (*glUniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
void (*glUniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glUniform1dv)(GLint location, GLsizei count, const GLdouble *value);
void (*glUniform2dv)(GLint location, GLsizei count, const GLdouble *value);
void (*glUniform3dv)(GLint location, GLsizei count, const GLdouble *value);
void (*glUniform4dv)(GLint location, GLsizei count, const GLdouble *value);
void (*glUniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glUniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glUniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glUniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glUniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glUniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glUniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glUniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glUniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glGetUniformdv)(GLuint program, GLint location, GLdouble *params);
GLint (*glGetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
GLuint (*glGetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
void (*glGetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
void (*glGetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
void (*glGetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
void (*glUniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
void (*glGetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
void (*glGetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
void (*glPatchParameteri)(GLenum pname, GLint value);
void (*glPatchParameterfv)(GLenum pname, const GLfloat *values);
void (*glBindTransformFeedback)(GLenum target, GLuint id);
void (*glDeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
void (*glGenTransformFeedbacks)(GLsizei n, GLuint *ids);
GLboolean (*glIsTransformFeedback)(GLuint id);
void (*glPauseTransformFeedback)(void);
void (*glResumeTransformFeedback)(void);
void (*glDrawTransformFeedback)(GLenum mode, GLuint id);
void (*glDrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
void (*glBeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
void (*glEndQueryIndexed)(GLenum target, GLuint index);
void (*glGetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
void (*glReleaseShaderCompiler)(void);
void (*glShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
void (*glGetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
void (*glDepthRangef)(GLfloat n, GLfloat f);
void (*glClearDepthf)(GLfloat d);
void (*glGetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
void (*glProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
void (*glProgramParameteri)(GLuint program, GLenum pname, GLint value);
void (*glUseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
void (*glActiveShaderProgram)(GLuint pipeline, GLuint program);
GLuint (*glCreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const*strings);
void (*glBindProgramPipeline)(GLuint pipeline);
void (*glDeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
void (*glGenProgramPipelines)(GLsizei n, GLuint *pipelines);
GLboolean (*glIsProgramPipeline)(GLuint pipeline);
void (*glGetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
void (*glProgramUniform1i)(GLuint program, GLint location, GLint v0);
void (*glProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
void (*glProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
void (*glProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void (*glProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
void (*glProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void (*glProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
void (*glProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
void (*glProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
void (*glProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
void (*glProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
void (*glProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void (*glProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
void (*glProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void (*glProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
void (*glProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
void (*glProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
void (*glProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
void (*glProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void (*glProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void (*glProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
void (*glProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void (*glProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
void (*glProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
void (*glProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void (*glProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
void (*glProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void (*glProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void (*glProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
void (*glProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void (*glProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void (*glProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
void (*glProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glValidateProgramPipeline)(GLuint pipeline);
void (*glGetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void (*glVertexAttribL1d)(GLuint index, GLdouble x);
void (*glVertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
void (*glVertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void (*glVertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glVertexAttribL1dv)(GLuint index, const GLdouble *v);
void (*glVertexAttribL2dv)(GLuint index, const GLdouble *v);
void (*glVertexAttribL3dv)(GLuint index, const GLdouble *v);
void (*glVertexAttribL4dv)(GLuint index, const GLdouble *v);
void (*glVertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
void (*glGetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
void (*glViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
void (*glViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void (*glViewportIndexedfv)(GLuint index, const GLfloat *v);
void (*glScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
void (*glScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void (*glScissorIndexedv)(GLuint index, const GLint *v);
void (*glDepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
void (*glDepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
void (*glGetFloati_v)(GLenum target, GLuint index, GLfloat *data);
void (*glGetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
void (*glDrawArraysInstancedBaseInstance)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
void (*glDrawElementsInstancedBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
void (*glDrawElementsInstancedBaseVertexBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
void (*glGetInternalformativ)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
void (*glGetActiveAtomicCounterBufferiv)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
void (*glBindImageTexture)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
void (*glMemoryBarrier)(GLbitfield barriers);
void (*glTexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void (*glTexStorage2D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void (*glTexStorage3D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void (*glDrawTransformFeedbackInstanced)(GLenum mode, GLuint id, GLsizei instancecount);
void (*glDrawTransformFeedbackStreamInstanced)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
void (*glClearBufferData)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
void (*glClearBufferSubData)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
void (*glDispatchCompute)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
void (*glDispatchComputeIndirect)(GLintptr indirect);
void (*glCopyImageSubData)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void (*glFramebufferParameteri)(GLenum target, GLenum pname, GLint param);
void (*glGetFramebufferParameteriv)(GLenum target, GLenum pname, GLint *params);
void (*glGetInternalformati64v)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
void (*glInvalidateTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
void (*glInvalidateTexImage)(GLuint texture, GLint level);
void (*glInvalidateBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr length);
void (*glInvalidateBufferData)(GLuint buffer);
void (*glInvalidateFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void (*glInvalidateSubFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glMultiDrawArraysIndirect)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
void (*glMultiDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
void (*glGetProgramInterfaceiv)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
GLuint (*glGetProgramResourceIndex)(GLuint program, GLenum programInterface, const GLchar *name);
void (*glGetProgramResourceName)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
void (*glGetProgramResourceiv)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
GLint (*glGetProgramResourceLocation)(GLuint program, GLenum programInterface, const GLchar *name);
GLint (*glGetProgramResourceLocationIndex)(GLuint program, GLenum programInterface, const GLchar *name);
void (*glShaderStorageBlockBinding)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
void (*glTexBufferRange)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void (*glTexStorage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void (*glTexStorage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void (*glTextureView)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
void (*glBindVertexBuffer)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void (*glVertexAttribFormat)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void (*glVertexAttribIFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void (*glVertexAttribLFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void (*glVertexAttribBinding)(GLuint attribindex, GLuint bindingindex);
void (*glVertexBindingDivisor)(GLuint bindingindex, GLuint divisor);
void (*glDebugMessageControl)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void (*glDebugMessageInsert)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
void (*glDebugMessageCallback)(GLDEBUGPROC callback, const void *userParam);
GLuint (*glGetDebugMessageLog)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void (*glPushDebugGroup)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
void (*glPopDebugGroup)(void);
void (*glObjectLabel)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
void (*glGetObjectLabel)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
void (*glObjectPtrLabel)(const void *ptr, GLsizei length, const GLchar *label);
void (*glGetObjectPtrLabel)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
void (*glBufferStorage)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
void (*glClearTexImage)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
void (*glClearTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
void (*glBindBuffersBase)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
void (*glBindBuffersRange)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
void (*glBindTextures)(GLuint first, GLsizei count, const GLuint *textures);
void (*glBindSamplers)(GLuint first, GLsizei count, const GLuint *samplers);
void (*glBindImageTextures)(GLuint first, GLsizei count, const GLuint *textures);
void (*glBindVertexBuffers)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
void (*glClipControl)(GLenum origin, GLenum depth);
void (*glCreateTransformFeedbacks)(GLsizei n, GLuint *ids);
void (*glTransformFeedbackBufferBase)(GLuint xfb, GLuint index, GLuint buffer);
void (*glTransformFeedbackBufferRange)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizei size);
void (*glGetTransformFeedbackiv)(GLuint xfb, GLenum pname, GLint *param);
void (*glGetTransformFeedbacki_v)(GLuint xfb, GLenum pname, GLuint index, GLint *param);
void (*glGetTransformFeedbacki64_v)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
void (*glCreateBuffers)(GLsizei n, GLuint *buffers);
void (*glNamedBufferStorage)(GLuint buffer, GLsizei size, const void *data, GLbitfield flags);
void (*glNamedBufferData)(GLuint buffer, GLsizei size, const void *data, GLenum usage);
void (*glNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizei size, const void *data);
void (*glCopyNamedBufferSubData)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizei size);
void (*glClearNamedBufferData)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
void (*glClearNamedBufferSubData)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizei size, GLenum format, GLenum type, const void *data);
GLboolean (*glUnmapNamedBuffer)(GLuint buffer);
void (*glFlushMappedNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizei length);
void (*glGetNamedBufferParameteriv)(GLuint buffer, GLenum pname, GLint *params);
void (*glGetNamedBufferParameteri64v)(GLuint buffer, GLenum pname, GLint64 *params);
void (*glGetNamedBufferPointerv)(GLuint buffer, GLenum pname, void **params);
void (*glGetNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizei size, void *data);
void (*glCreateFramebuffers)(GLsizei n, GLuint *framebuffers);
void (*glNamedFramebufferRenderbuffer)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void (*glNamedFramebufferParameteri)(GLuint framebuffer, GLenum pname, GLint param);
void (*glNamedFramebufferTexture)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
void (*glNamedFramebufferTextureLayer)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
void (*glNamedFramebufferDrawBuffer)(GLuint framebuffer, GLenum buf);
void (*glNamedFramebufferDrawBuffers)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
void (*glNamedFramebufferReadBuffer)(GLuint framebuffer, GLenum src);
void (*glInvalidateNamedFramebufferData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
void (*glInvalidateNamedFramebufferSubData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glClearNamedFramebufferiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
void (*glClearNamedFramebufferuiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
void (*glClearNamedFramebufferfv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
void (*glClearNamedFramebufferfi)(GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil);
void (*glBlitNamedFramebuffer)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLenum (*glCheckNamedFramebufferStatus)(GLuint framebuffer, GLenum target);
void (*glGetNamedFramebufferParameteriv)(GLuint framebuffer, GLenum pname, GLint *param);
void (*glGetNamedFramebufferAttachmentParameteriv)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
void (*glCreateRenderbuffers)(GLsizei n, GLuint *renderbuffers);
void (*glNamedRenderbufferStorage)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
void (*glNamedRenderbufferStorageMultisample)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void (*glGetNamedRenderbufferParameteriv)(GLuint renderbuffer, GLenum pname, GLint *params);
void (*glCreateTextures)(GLenum target, GLsizei n, GLuint *textures);
void (*glTextureBuffer)(GLuint texture, GLenum internalformat, GLuint buffer);
void (*glTextureBufferRange)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizei size);
void (*glTextureStorage1D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
void (*glTextureStorage2D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void (*glTextureStorage3D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void (*glTextureStorage2DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void (*glTextureStorage3DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void (*glTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
void (*glTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void (*glTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void (*glCompressedTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
void (*glCompressedTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
void (*glCompressedTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
void (*glCopyTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void (*glCopyTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glCopyTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glTextureParameterf)(GLuint texture, GLenum pname, GLfloat param);
void (*glTextureParameterfv)(GLuint texture, GLenum pname, const GLfloat *param);
void (*glTextureParameteri)(GLuint texture, GLenum pname, GLint param);
void (*glTextureParameterIiv)(GLuint texture, GLenum pname, const GLint *params);
void (*glTextureParameterIuiv)(GLuint texture, GLenum pname, const GLuint *params);
void (*glTextureParameteriv)(GLuint texture, GLenum pname, const GLint *param);
void (*glGenerateTextureMipmap)(GLuint texture);
void (*glBindTextureUnit)(GLuint unit, GLuint texture);
void (*glGetTextureImage)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
void (*glGetCompressedTextureImage)(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
void (*glGetTextureLevelParameterfv)(GLuint texture, GLint level, GLenum pname, GLfloat *params);
void (*glGetTextureLevelParameteriv)(GLuint texture, GLint level, GLenum pname, GLint *params);
void (*glGetTextureParameterfv)(GLuint texture, GLenum pname, GLfloat *params);
void (*glGetTextureParameterIiv)(GLuint texture, GLenum pname, GLint *params);
void (*glGetTextureParameterIuiv)(GLuint texture, GLenum pname, GLuint *params);
void (*glGetTextureParameteriv)(GLuint texture, GLenum pname, GLint *params);
void (*glCreateVertexArrays)(GLsizei n, GLuint *arrays);
void (*glDisableVertexArrayAttrib)(GLuint vaobj, GLuint index);
void (*glEnableVertexArrayAttrib)(GLuint vaobj, GLuint index);
void (*glVertexArrayElementBuffer)(GLuint vaobj, GLuint buffer);
void (*glVertexArrayVertexBuffer)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void (*glVertexArrayVertexBuffers)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
void (*glVertexArrayAttribBinding)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
void (*glVertexArrayAttribFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void (*glVertexArrayAttribIFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void (*glVertexArrayAttribLFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void (*glVertexArrayBindingDivisor)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
void (*glGetVertexArrayiv)(GLuint vaobj, GLenum pname, GLint *param);
void (*glGetVertexArrayIndexediv)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
void (*glGetVertexArrayIndexed64iv)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
void (*glCreateSamplers)(GLsizei n, GLuint *samplers);
void (*glCreateProgramPipelines)(GLsizei n, GLuint *pipelines);
void (*glCreateQueries)(GLenum target, GLsizei n, GLuint *ids);
void (*glGetQueryBufferObjecti64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void (*glGetQueryBufferObjectiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void (*glGetQueryBufferObjectui64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void (*glGetQueryBufferObjectuiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void (*glMemoryBarrierByRegion)(GLbitfield barriers);
void (*glGetTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
void (*glGetCompressedTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
GLenum (*glGetGraphicsResetStatus)(void);
void (*glGetnCompressedTexImage)(GLenum target, GLint lod, GLsizei bufSize, void *pixels);
void (*glGetnTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
void (*glGetnUniformdv)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
void (*glGetnUniformfv)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void (*glGetnUniformiv)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
void (*glGetnUniformuiv)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
void (*glReadnPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
void (*glGetnMapdv)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
void (*glGetnMapfv)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
void (*glGetnMapiv)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
void (*glGetnPixelMapfv)(GLenum map, GLsizei bufSize, GLfloat *values);
void (*glGetnPixelMapuiv)(GLenum map, GLsizei bufSize, GLuint *values);
void (*glGetnPixelMapusv)(GLenum map, GLsizei bufSize, GLushort *values);
void (*glGetnPolygonStipple)(GLsizei bufSize, GLubyte *pattern);
void (*glGetnColorTable)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
void (*glGetnConvolutionFilter)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
void (*glGetnSeparableFilter)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
void (*glGetnHistogram)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
void (*glGetnMinmax)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
void (*glTextureBarrier)(void);
GLuint64 (*glGetTextureHandleARB)(GLuint texture);
GLuint64 (*glGetTextureSamplerHandleARB)(GLuint texture, GLuint sampler);
void (*glMakeTextureHandleResidentARB)(GLuint64 handle);
void (*glMakeTextureHandleNonResidentARB)(GLuint64 handle);
GLuint64 (*glGetImageHandleARB)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
void (*glMakeImageHandleResidentARB)(GLuint64 handle, GLenum access);
void (*glMakeImageHandleNonResidentARB)(GLuint64 handle);
void (*glUniformHandleui64ARB)(GLint location, GLuint64 value);
void (*glUniformHandleui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
void (*glProgramUniformHandleui64ARB)(GLuint program, GLint location, GLuint64 value);
void (*glProgramUniformHandleui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
GLboolean (*glIsTextureHandleResidentARB)(GLuint64 handle);
GLboolean (*glIsImageHandleResidentARB)(GLuint64 handle);
void (*glVertexAttribL1ui64ARB)(GLuint index, GLuint64EXT x);
void (*glVertexAttribL1ui64vARB)(GLuint index, const GLuint64EXT *v);
void (*glGetVertexAttribLui64vARB)(GLuint index, GLenum pname, GLuint64EXT *params);
GLsync (*glCreateSyncFromCLeventARB)(struct _cl_context *context, struct _cl_event *event, GLbitfield flags);
void (*glClampColorARB)(GLenum target, GLenum clamp);
void (*glDispatchComputeGroupSizeARB)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
void (*glDebugMessageControlARB)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void (*glDebugMessageInsertARB)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
void (*glDebugMessageCallbackARB)(GLDEBUGPROCARB callback, const void *userParam);
GLuint (*glGetDebugMessageLogARB)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void (*glDrawBuffersARB)(GLsizei n, const GLenum *bufs);
void (*glBlendEquationiARB)(GLuint buf, GLenum mode);
void (*glBlendEquationSeparateiARB)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void (*glBlendFunciARB)(GLuint buf, GLenum src, GLenum dst);
void (*glBlendFuncSeparateiARB)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void (*glDrawArraysInstancedARB)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void (*glDrawElementsInstancedARB)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
void (*glProgramStringARB)(GLenum target, GLenum format, GLsizei len, const void *string);
void (*glBindProgramARB)(GLenum target, GLuint program);
void (*glDeleteProgramsARB)(GLsizei n, const GLuint *programs);
void (*glGenProgramsARB)(GLsizei n, GLuint *programs);
void (*glProgramEnvParameter4dARB)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glProgramEnvParameter4dvARB)(GLenum target, GLuint index, const GLdouble *params);
void (*glProgramEnvParameter4fARB)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glProgramEnvParameter4fvARB)(GLenum target, GLuint index, const GLfloat *params);
void (*glProgramLocalParameter4dARB)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glProgramLocalParameter4dvARB)(GLenum target, GLuint index, const GLdouble *params);
void (*glProgramLocalParameter4fARB)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glProgramLocalParameter4fvARB)(GLenum target, GLuint index, const GLfloat *params);
void (*glGetProgramEnvParameterdvARB)(GLenum target, GLuint index, GLdouble *params);
void (*glGetProgramEnvParameterfvARB)(GLenum target, GLuint index, GLfloat *params);
void (*glGetProgramLocalParameterdvARB)(GLenum target, GLuint index, GLdouble *params);
void (*glGetProgramLocalParameterfvARB)(GLenum target, GLuint index, GLfloat *params);
void (*glGetProgramivARB)(GLenum target, GLenum pname, GLint *params);
void (*glGetProgramStringARB)(GLenum target, GLenum pname, void *string);
GLboolean (*glIsProgramARB)(GLuint program);
void (*glProgramParameteriARB)(GLuint program, GLenum pname, GLint value);
void (*glFramebufferTextureARB)(GLenum target, GLenum attachment, GLuint texture, GLint level);
void (*glFramebufferTextureLayerARB)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void (*glFramebufferTextureFaceARB)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
void (*glColorTable)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
void (*glColorTableParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
void (*glColorTableParameteriv)(GLenum target, GLenum pname, const GLint *params);
void (*glCopyColorTable)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void (*glGetColorTable)(GLenum target, GLenum format, GLenum type, void *table);
void (*glGetColorTableParameterfv)(GLenum target, GLenum pname, GLfloat *params);
void (*glGetColorTableParameteriv)(GLenum target, GLenum pname, GLint *params);
void (*glColorSubTable)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
void (*glCopyColorSubTable)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void (*glConvolutionFilter1D)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
void (*glConvolutionFilter2D)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
void (*glConvolutionParameterf)(GLenum target, GLenum pname, GLfloat params);
void (*glConvolutionParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
void (*glConvolutionParameteri)(GLenum target, GLenum pname, GLint params);
void (*glConvolutionParameteriv)(GLenum target, GLenum pname, const GLint *params);
void (*glCopyConvolutionFilter1D)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void (*glCopyConvolutionFilter2D)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glGetConvolutionFilter)(GLenum target, GLenum format, GLenum type, void *image);
void (*glGetConvolutionParameterfv)(GLenum target, GLenum pname, GLfloat *params);
void (*glGetConvolutionParameteriv)(GLenum target, GLenum pname, GLint *params);
void (*glGetSeparableFilter)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
void (*glSeparableFilter2D)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
void (*glGetHistogram)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
void (*glGetHistogramParameterfv)(GLenum target, GLenum pname, GLfloat *params);
void (*glGetHistogramParameteriv)(GLenum target, GLenum pname, GLint *params);
void (*glGetMinmax)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
void (*glGetMinmaxParameterfv)(GLenum target, GLenum pname, GLfloat *params);
void (*glGetMinmaxParameteriv)(GLenum target, GLenum pname, GLint *params);
void (*glHistogram)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void (*glMinmax)(GLenum target, GLenum internalformat, GLboolean sink);
void (*glResetHistogram)(GLenum target);
void (*glResetMinmax)(GLenum target);
void (*glMultiDrawArraysIndirectCountARB)(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void (*glMultiDrawElementsIndirectCountARB)(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void (*glVertexAttribDivisorARB)(GLuint index, GLuint divisor);
void (*glCurrentPaletteMatrixARB)(GLint index);
void (*glMatrixIndexubvARB)(GLint size, const GLubyte *indices);
void (*glMatrixIndexusvARB)(GLint size, const GLushort *indices);
void (*glMatrixIndexuivARB)(GLint size, const GLuint *indices);
void (*glMatrixIndexPointerARB)(GLint size, GLenum type, GLsizei stride, const void *pointer);
void (*glSampleCoverageARB)(GLfloat value, GLboolean invert);
void (*glActiveTextureARB)(GLenum texture);
void (*glClientActiveTextureARB)(GLenum texture);
void (*glMultiTexCoord1dARB)(GLenum target, GLdouble s);
void (*glMultiTexCoord1dvARB)(GLenum target, const GLdouble *v);
void (*glMultiTexCoord1fARB)(GLenum target, GLfloat s);
void (*glMultiTexCoord1fvARB)(GLenum target, const GLfloat *v);
void (*glMultiTexCoord1iARB)(GLenum target, GLint s);
void (*glMultiTexCoord1ivARB)(GLenum target, const GLint *v);
void (*glMultiTexCoord1sARB)(GLenum target, GLshort s);
void (*glMultiTexCoord1svARB)(GLenum target, const GLshort *v);
void (*glMultiTexCoord2dARB)(GLenum target, GLdouble s, GLdouble t);
void (*glMultiTexCoord2dvARB)(GLenum target, const GLdouble *v);
void (*glMultiTexCoord2fARB)(GLenum target, GLfloat s, GLfloat t);
void (*glMultiTexCoord2fvARB)(GLenum target, const GLfloat *v);
void (*glMultiTexCoord2iARB)(GLenum target, GLint s, GLint t);
void (*glMultiTexCoord2ivARB)(GLenum target, const GLint *v);
void (*glMultiTexCoord2sARB)(GLenum target, GLshort s, GLshort t);
void (*glMultiTexCoord2svARB)(GLenum target, const GLshort *v);
void (*glMultiTexCoord3dARB)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
void (*glMultiTexCoord3dvARB)(GLenum target, const GLdouble *v);
void (*glMultiTexCoord3fARB)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
void (*glMultiTexCoord3fvARB)(GLenum target, const GLfloat *v);
void (*glMultiTexCoord3iARB)(GLenum target, GLint s, GLint t, GLint r);
void (*glMultiTexCoord3ivARB)(GLenum target, const GLint *v);
void (*glMultiTexCoord3sARB)(GLenum target, GLshort s, GLshort t, GLshort r);
void (*glMultiTexCoord3svARB)(GLenum target, const GLshort *v);
void (*glMultiTexCoord4dARB)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void (*glMultiTexCoord4dvARB)(GLenum target, const GLdouble *v);
void (*glMultiTexCoord4fARB)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void (*glMultiTexCoord4fvARB)(GLenum target, const GLfloat *v);
void (*glMultiTexCoord4iARB)(GLenum target, GLint s, GLint t, GLint r, GLint q);
void (*glMultiTexCoord4ivARB)(GLenum target, const GLint *v);
void (*glMultiTexCoord4sARB)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void (*glMultiTexCoord4svARB)(GLenum target, const GLshort *v);
void (*glGenQueriesARB)(GLsizei n, GLuint *ids);
void (*glDeleteQueriesARB)(GLsizei n, const GLuint *ids);
GLboolean (*glIsQueryARB)(GLuint id);
void (*glBeginQueryARB)(GLenum target, GLuint id);
void (*glEndQueryARB)(GLenum target);
void (*glGetQueryivARB)(GLenum target, GLenum pname, GLint *params);
void (*glGetQueryObjectivARB)(GLuint id, GLenum pname, GLint *params);
void (*glGetQueryObjectuivARB)(GLuint id, GLenum pname, GLuint *params);
void (*glPointParameterfARB)(GLenum pname, GLfloat param);
void (*glPointParameterfvARB)(GLenum pname, const GLfloat *params);
GLenum (*glGetGraphicsResetStatusARB)(void);
void (*glGetnTexImageARB)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);
void (*glReadnPixelsARB)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
void (*glGetnCompressedTexImageARB)(GLenum target, GLint lod, GLsizei bufSize, void *img);
void (*glGetnUniformfvARB)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void (*glGetnUniformivARB)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
void (*glGetnUniformuivARB)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
void (*glGetnUniformdvARB)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
void (*glGetnMapdvARB)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
void (*glGetnMapfvARB)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
void (*glGetnMapivARB)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
void (*glGetnPixelMapfvARB)(GLenum map, GLsizei bufSize, GLfloat *values);
void (*glGetnPixelMapuivARB)(GLenum map, GLsizei bufSize, GLuint *values);
void (*glGetnPixelMapusvARB)(GLenum map, GLsizei bufSize, GLushort *values);
void (*glGetnPolygonStippleARB)(GLsizei bufSize, GLubyte *pattern);
void (*glGetnColorTableARB)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
void (*glGetnConvolutionFilterARB)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
void (*glGetnSeparableFilterARB)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
void (*glGetnHistogramARB)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
void (*glGetnMinmaxARB)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
void (*glMinSampleShadingARB)(GLfloat value);
void (*glDeleteObjectARB)(GLhandleARB obj);
GLhandleARB (*glGetHandleARB)(GLenum pname);
void (*glDetachObjectARB)(GLhandleARB containerObj, GLhandleARB attachedObj);
GLhandleARB (*glCreateShaderObjectARB)(GLenum shaderType);
void (*glShaderSourceARB)(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
void (*glCompileShaderARB)(GLhandleARB shaderObj);
GLhandleARB (*glCreateProgramObjectARB)(void);
void (*glAttachObjectARB)(GLhandleARB containerObj, GLhandleARB obj);
void (*glLinkProgramARB)(GLhandleARB programObj);
void (*glUseProgramObjectARB)(GLhandleARB programObj);
void (*glValidateProgramARB)(GLhandleARB programObj);
void (*glUniform1fARB)(GLint location, GLfloat v0);
void (*glUniform2fARB)(GLint location, GLfloat v0, GLfloat v1);
void (*glUniform3fARB)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void (*glUniform4fARB)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void (*glUniform1iARB)(GLint location, GLint v0);
void (*glUniform2iARB)(GLint location, GLint v0, GLint v1);
void (*glUniform3iARB)(GLint location, GLint v0, GLint v1, GLint v2);
void (*glUniform4iARB)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void (*glUniform1fvARB)(GLint location, GLsizei count, const GLfloat *value);
void (*glUniform2fvARB)(GLint location, GLsizei count, const GLfloat *value);
void (*glUniform3fvARB)(GLint location, GLsizei count, const GLfloat *value);
void (*glUniform4fvARB)(GLint location, GLsizei count, const GLfloat *value);
void (*glUniform1ivARB)(GLint location, GLsizei count, const GLint *value);
void (*glUniform2ivARB)(GLint location, GLsizei count, const GLint *value);
void (*glUniform3ivARB)(GLint location, GLsizei count, const GLint *value);
void (*glUniform4ivARB)(GLint location, GLsizei count, const GLint *value);
void (*glUniformMatrix2fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glUniformMatrix3fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glUniformMatrix4fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glGetObjectParameterfvARB)(GLhandleARB obj, GLenum pname, GLfloat *params);
void (*glGetObjectParameterivARB)(GLhandleARB obj, GLenum pname, GLint *params);
void (*glGetInfoLogARB)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
void (*glGetAttachedObjectsARB)(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
GLint (*glGetUniformLocationARB)(GLhandleARB programObj, const GLcharARB *name);
void (*glGetActiveUniformARB)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
void (*glGetUniformfvARB)(GLhandleARB programObj, GLint location, GLfloat *params);
void (*glGetUniformivARB)(GLhandleARB programObj, GLint location, GLint *params);
void (*glGetShaderSourceARB)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
void (*glNamedStringARB)(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
void (*glDeleteNamedStringARB)(GLint namelen, const GLchar *name);
void (*glCompileShaderIncludeARB)(GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);
GLboolean (*glIsNamedStringARB)(GLint namelen, const GLchar *name);
void (*glGetNamedStringARB)(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
void (*glGetNamedStringivARB)(GLint namelen, const GLchar *name, GLenum pname, GLint *params);
void (*glBufferPageCommitmentARB)(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
void (*glNamedBufferPageCommitmentEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
void (*glNamedBufferPageCommitmentARB)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
void (*glTexPageCommitmentARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident);
void (*glTexBufferARB)(GLenum target, GLenum internalformat, GLuint buffer);
void (*glCompressedTexImage3DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
void (*glCompressedTexImage2DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
void (*glCompressedTexImage1DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
void (*glCompressedTexSubImage3DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
void (*glCompressedTexSubImage2DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
void (*glCompressedTexSubImage1DARB)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
void (*glGetCompressedTexImageARB)(GLenum target, GLint level, void *img);
void (*glLoadTransposeMatrixfARB)(const GLfloat *m);
void (*glLoadTransposeMatrixdARB)(const GLdouble *m);
void (*glMultTransposeMatrixfARB)(const GLfloat *m);
void (*glMultTransposeMatrixdARB)(const GLdouble *m);
void (*glWeightbvARB)(GLint size, const GLbyte *weights);
void (*glWeightsvARB)(GLint size, const GLshort *weights);
void (*glWeightivARB)(GLint size, const GLint *weights);
void (*glWeightfvARB)(GLint size, const GLfloat *weights);
void (*glWeightdvARB)(GLint size, const GLdouble *weights);
void (*glWeightubvARB)(GLint size, const GLubyte *weights);
void (*glWeightusvARB)(GLint size, const GLushort *weights);
void (*glWeightuivARB)(GLint size, const GLuint *weights);
void (*glWeightPointerARB)(GLint size, GLenum type, GLsizei stride, const void *pointer);
void (*glVertexBlendARB)(GLint count);
void (*glBindBufferARB)(GLenum target, GLuint buffer);
void (*glDeleteBuffersARB)(GLsizei n, const GLuint *buffers);
void (*glGenBuffersARB)(GLsizei n, GLuint *buffers);
GLboolean (*glIsBufferARB)(GLuint buffer);
void (*glBufferDataARB)(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);
void (*glBufferSubDataARB)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);
void (*glGetBufferSubDataARB)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);
GLboolean (*glUnmapBufferARB)(GLenum target);
void (*glGetBufferParameterivARB)(GLenum target, GLenum pname, GLint *params);
void (*glGetBufferPointervARB)(GLenum target, GLenum pname, void **params);
void (*glVertexAttrib1dARB)(GLuint index, GLdouble x);
void (*glVertexAttrib1dvARB)(GLuint index, const GLdouble *v);
void (*glVertexAttrib1fARB)(GLuint index, GLfloat x);
void (*glVertexAttrib1fvARB)(GLuint index, const GLfloat *v);
void (*glVertexAttrib1sARB)(GLuint index, GLshort x);
void (*glVertexAttrib1svARB)(GLuint index, const GLshort *v);
void (*glVertexAttrib2dARB)(GLuint index, GLdouble x, GLdouble y);
void (*glVertexAttrib2dvARB)(GLuint index, const GLdouble *v);
void (*glVertexAttrib2fARB)(GLuint index, GLfloat x, GLfloat y);
void (*glVertexAttrib2fvARB)(GLuint index, const GLfloat *v);
void (*glVertexAttrib2sARB)(GLuint index, GLshort x, GLshort y);
void (*glVertexAttrib2svARB)(GLuint index, const GLshort *v);
void (*glVertexAttrib3dARB)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void (*glVertexAttrib3dvARB)(GLuint index, const GLdouble *v);
void (*glVertexAttrib3fARB)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void (*glVertexAttrib3fvARB)(GLuint index, const GLfloat *v);
void (*glVertexAttrib3sARB)(GLuint index, GLshort x, GLshort y, GLshort z);
void (*glVertexAttrib3svARB)(GLuint index, const GLshort *v);
void (*glVertexAttrib4NbvARB)(GLuint index, const GLbyte *v);
void (*glVertexAttrib4NivARB)(GLuint index, const GLint *v);
void (*glVertexAttrib4NsvARB)(GLuint index, const GLshort *v);
void (*glVertexAttrib4NubARB)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void (*glVertexAttrib4NubvARB)(GLuint index, const GLubyte *v);
void (*glVertexAttrib4NuivARB)(GLuint index, const GLuint *v);
void (*glVertexAttrib4NusvARB)(GLuint index, const GLushort *v);
void (*glVertexAttrib4bvARB)(GLuint index, const GLbyte *v);
void (*glVertexAttrib4dARB)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glVertexAttrib4dvARB)(GLuint index, const GLdouble *v);
void (*glVertexAttrib4fARB)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glVertexAttrib4fvARB)(GLuint index, const GLfloat *v);
void (*glVertexAttrib4ivARB)(GLuint index, const GLint *v);
void (*glVertexAttrib4sARB)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void (*glVertexAttrib4svARB)(GLuint index, const GLshort *v);
void (*glVertexAttrib4ubvARB)(GLuint index, const GLubyte *v);
void (*glVertexAttrib4uivARB)(GLuint index, const GLuint *v);
void (*glVertexAttrib4usvARB)(GLuint index, const GLushort *v);
void (*glVertexAttribPointerARB)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
void (*glEnableVertexAttribArrayARB)(GLuint index);
void (*glDisableVertexAttribArrayARB)(GLuint index);
void (*glGetVertexAttribdvARB)(GLuint index, GLenum pname, GLdouble *params);
void (*glGetVertexAttribfvARB)(GLuint index, GLenum pname, GLfloat *params);
void (*glGetVertexAttribivARB)(GLuint index, GLenum pname, GLint *params);
void (*glGetVertexAttribPointervARB)(GLuint index, GLenum pname, void **pointer);
void (*glBindAttribLocationARB)(GLhandleARB programObj, GLuint index, const GLcharARB *name);
void (*glGetActiveAttribARB)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
GLint (*glGetAttribLocationARB)(GLhandleARB programObj, const GLcharARB *name);
void (*glWindowPos2dARB)(GLdouble x, GLdouble y);
void (*glWindowPos2dvARB)(const GLdouble *v);
void (*glWindowPos2fARB)(GLfloat x, GLfloat y);
void (*glWindowPos2fvARB)(const GLfloat *v);
void (*glWindowPos2iARB)(GLint x, GLint y);
void (*glWindowPos2ivARB)(const GLint *v);
void (*glWindowPos2sARB)(GLshort x, GLshort y);
void (*glWindowPos2svARB)(const GLshort *v);
void (*glWindowPos3dARB)(GLdouble x, GLdouble y, GLdouble z);
void (*glWindowPos3dvARB)(const GLdouble *v);
void (*glWindowPos3fARB)(GLfloat x, GLfloat y, GLfloat z);
void (*glWindowPos3fvARB)(const GLfloat *v);
void (*glWindowPos3iARB)(GLint x, GLint y, GLint z);
void (*glWindowPos3ivARB)(const GLint *v);
void (*glWindowPos3sARB)(GLshort x, GLshort y, GLshort z);
void (*glWindowPos3svARB)(const GLshort *v);
void (*glBlendBarrierKHR)(void);
void (*glMultiTexCoord1bOES)(GLenum texture, GLbyte s);
void (*glMultiTexCoord1bvOES)(GLenum texture, const GLbyte *coords);
void (*glMultiTexCoord2bOES)(GLenum texture, GLbyte s, GLbyte t);
void (*glMultiTexCoord2bvOES)(GLenum texture, const GLbyte *coords);
void (*glMultiTexCoord3bOES)(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
void (*glMultiTexCoord3bvOES)(GLenum texture, const GLbyte *coords);
void (*glMultiTexCoord4bOES)(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
void (*glMultiTexCoord4bvOES)(GLenum texture, const GLbyte *coords);
void (*glTexCoord1bOES)(GLbyte s);
void (*glTexCoord1bvOES)(const GLbyte *coords);
void (*glTexCoord2bOES)(GLbyte s, GLbyte t);
void (*glTexCoord2bvOES)(const GLbyte *coords);
void (*glTexCoord3bOES)(GLbyte s, GLbyte t, GLbyte r);
void (*glTexCoord3bvOES)(const GLbyte *coords);
void (*glTexCoord4bOES)(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
void (*glTexCoord4bvOES)(const GLbyte *coords);
void (*glVertex2bOES)(GLbyte x, GLbyte y);
void (*glVertex2bvOES)(const GLbyte *coords);
void (*glVertex3bOES)(GLbyte x, GLbyte y, GLbyte z);
void (*glVertex3bvOES)(const GLbyte *coords);
void (*glVertex4bOES)(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
void (*glVertex4bvOES)(const GLbyte *coords);
void (*glAlphaFuncxOES)(GLenum func, GLfixed ref);
void (*glClearColorxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void (*glClearDepthxOES)(GLfixed depth);
void (*glClipPlanexOES)(GLenum plane, const GLfixed *equation);
void (*glColor4xOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void (*glDepthRangexOES)(GLfixed n, GLfixed f);
void (*glFogxOES)(GLenum pname, GLfixed param);
void (*glFogxvOES)(GLenum pname, const GLfixed *param);
void (*glFrustumxOES)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void (*glGetClipPlanexOES)(GLenum plane, GLfixed *equation);
void (*glGetFixedvOES)(GLenum pname, GLfixed *params);
void (*glGetTexEnvxvOES)(GLenum target, GLenum pname, GLfixed *params);
void (*glGetTexParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
void (*glLightModelxOES)(GLenum pname, GLfixed param);
void (*glLightModelxvOES)(GLenum pname, const GLfixed *param);
void (*glLightxOES)(GLenum light, GLenum pname, GLfixed param);
void (*glLightxvOES)(GLenum light, GLenum pname, const GLfixed *params);
void (*glLineWidthxOES)(GLfixed width);
void (*glLoadMatrixxOES)(const GLfixed *m);
void (*glMaterialxOES)(GLenum face, GLenum pname, GLfixed param);
void (*glMaterialxvOES)(GLenum face, GLenum pname, const GLfixed *param);
void (*glMultMatrixxOES)(const GLfixed *m);
void (*glMultiTexCoord4xOES)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
void (*glNormal3xOES)(GLfixed nx, GLfixed ny, GLfixed nz);
void (*glOrthoxOES)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void (*glPointParameterxvOES)(GLenum pname, const GLfixed *params);
void (*glPointSizexOES)(GLfixed size);
void (*glPolygonOffsetxOES)(GLfixed factor, GLfixed units);
void (*glRotatexOES)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
void (*glSampleCoverageOES)(GLfixed value, GLboolean invert);
void (*glScalexOES)(GLfixed x, GLfixed y, GLfixed z);
void (*glTexEnvxOES)(GLenum target, GLenum pname, GLfixed param);
void (*glTexEnvxvOES)(GLenum target, GLenum pname, const GLfixed *params);
void (*glTexParameterxOES)(GLenum target, GLenum pname, GLfixed param);
void (*glTexParameterxvOES)(GLenum target, GLenum pname, const GLfixed *params);
void (*glTranslatexOES)(GLfixed x, GLfixed y, GLfixed z);
void (*glAccumxOES)(GLenum op, GLfixed value);
void (*glBitmapxOES)(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);
void (*glBlendColorxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void (*glClearAccumxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void (*glColor3xOES)(GLfixed red, GLfixed green, GLfixed blue);
void (*glColor3xvOES)(const GLfixed *components);
void (*glColor4xvOES)(const GLfixed *components);
void (*glConvolutionParameterxOES)(GLenum target, GLenum pname, GLfixed param);
void (*glConvolutionParameterxvOES)(GLenum target, GLenum pname, const GLfixed *params);
void (*glEvalCoord1xOES)(GLfixed u);
void (*glEvalCoord1xvOES)(const GLfixed *coords);
void (*glEvalCoord2xOES)(GLfixed u, GLfixed v);
void (*glEvalCoord2xvOES)(const GLfixed *coords);
void (*glFeedbackBufferxOES)(GLsizei n, GLenum type, const GLfixed *buffer);
void (*glGetConvolutionParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
void (*glGetHistogramParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
void (*glGetLightxOES)(GLenum light, GLenum pname, GLfixed *params);
void (*glGetMapxvOES)(GLenum target, GLenum query, GLfixed *v);
void (*glGetMaterialxOES)(GLenum face, GLenum pname, GLfixed param);
void (*glGetPixelMapxv)(GLenum map, GLint size, GLfixed *values);
void (*glGetTexGenxvOES)(GLenum coord, GLenum pname, GLfixed *params);
void (*glGetTexLevelParameterxvOES)(GLenum target, GLint level, GLenum pname, GLfixed *params);
void (*glIndexxOES)(GLfixed component);
void (*glIndexxvOES)(const GLfixed *component);
void (*glLoadTransposeMatrixxOES)(const GLfixed *m);
void (*glMap1xOES)(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
void (*glMap2xOES)(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
void (*glMapGrid1xOES)(GLint n, GLfixed u1, GLfixed u2);
void (*glMapGrid2xOES)(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
void (*glMultTransposeMatrixxOES)(const GLfixed *m);
void (*glMultiTexCoord1xOES)(GLenum texture, GLfixed s);
void (*glMultiTexCoord1xvOES)(GLenum texture, const GLfixed *coords);
void (*glMultiTexCoord2xOES)(GLenum texture, GLfixed s, GLfixed t);
void (*glMultiTexCoord2xvOES)(GLenum texture, const GLfixed *coords);
void (*glMultiTexCoord3xOES)(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
void (*glMultiTexCoord3xvOES)(GLenum texture, const GLfixed *coords);
void (*glMultiTexCoord4xvOES)(GLenum texture, const GLfixed *coords);
void (*glNormal3xvOES)(const GLfixed *coords);
void (*glPassThroughxOES)(GLfixed token);
void (*glPixelMapx)(GLenum map, GLint size, const GLfixed *values);
void (*glPixelStorex)(GLenum pname, GLfixed param);
void (*glPixelTransferxOES)(GLenum pname, GLfixed param);
void (*glPixelZoomxOES)(GLfixed xfactor, GLfixed yfactor);
void (*glPrioritizeTexturesxOES)(GLsizei n, const GLuint *textures, const GLfixed *priorities);
void (*glRasterPos2xOES)(GLfixed x, GLfixed y);
void (*glRasterPos2xvOES)(const GLfixed *coords);
void (*glRasterPos3xOES)(GLfixed x, GLfixed y, GLfixed z);
void (*glRasterPos3xvOES)(const GLfixed *coords);
void (*glRasterPos4xOES)(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
void (*glRasterPos4xvOES)(const GLfixed *coords);
void (*glRectxOES)(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
void (*glRectxvOES)(const GLfixed *v1, const GLfixed *v2);
void (*glTexCoord1xOES)(GLfixed s);
void (*glTexCoord1xvOES)(const GLfixed *coords);
void (*glTexCoord2xOES)(GLfixed s, GLfixed t);
void (*glTexCoord2xvOES)(const GLfixed *coords);
void (*glTexCoord3xOES)(GLfixed s, GLfixed t, GLfixed r);
void (*glTexCoord3xvOES)(const GLfixed *coords);
void (*glTexCoord4xOES)(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
void (*glTexCoord4xvOES)(const GLfixed *coords);
void (*glTexGenxOES)(GLenum coord, GLenum pname, GLfixed param);
void (*glTexGenxvOES)(GLenum coord, GLenum pname, const GLfixed *params);
void (*glVertex2xOES)(GLfixed x);
void (*glVertex2xvOES)(const GLfixed *coords);
void (*glVertex3xOES)(GLfixed x, GLfixed y);
void (*glVertex3xvOES)(const GLfixed *coords);
void (*glVertex4xOES)(GLfixed x, GLfixed y, GLfixed z);
void (*glVertex4xvOES)(const GLfixed *coords);
GLbitfield (*glQueryMatrixxOES)(GLfixed *mantissa, GLint *exponent);
void (*glClearDepthfOES)(GLclampf depth);
void (*glClipPlanefOES)(GLenum plane, const GLfloat *equation);
void (*glDepthRangefOES)(GLclampf n, GLclampf f);
void (*glFrustumfOES)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void (*glGetClipPlanefOES)(GLenum plane, GLfloat *equation);
void (*glOrthofOES)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void (*glTbufferMask3DFX)(GLuint mask);
void (*glDebugMessageEnableAMD)(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void (*glDebugMessageInsertAMD)(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
void (*glDebugMessageCallbackAMD)(GLDEBUGPROCAMD callback, void *userParam);
GLuint (*glGetDebugMessageLogAMD)(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
void (*glBlendFuncIndexedAMD)(GLuint buf, GLenum src, GLenum dst);
void (*glBlendFuncSeparateIndexedAMD)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void (*glBlendEquationIndexedAMD)(GLuint buf, GLenum mode);
void (*glBlendEquationSeparateIndexedAMD)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void (*glUniform1i64NV)(GLint location, GLint64EXT x);
void (*glUniform2i64NV)(GLint location, GLint64EXT x, GLint64EXT y);
void (*glUniform3i64NV)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
void (*glUniform4i64NV)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
void (*glUniform1i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
void (*glUniform2i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
void (*glUniform3i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
void (*glUniform4i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
void (*glUniform1ui64NV)(GLint location, GLuint64EXT x);
void (*glUniform2ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y);
void (*glUniform3ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void (*glUniform4ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void (*glUniform1ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
void (*glUniform2ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
void (*glUniform3ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
void (*glUniform4ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
void (*glGetUniformi64vNV)(GLuint program, GLint location, GLint64EXT *params);
void (*glGetUniformui64vNV)(GLuint program, GLint location, GLuint64EXT *params);
void (*glProgramUniform1i64NV)(GLuint program, GLint location, GLint64EXT x);
void (*glProgramUniform2i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
void (*glProgramUniform3i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
void (*glProgramUniform4i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
void (*glProgramUniform1i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void (*glProgramUniform2i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void (*glProgramUniform3i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void (*glProgramUniform4i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void (*glProgramUniform1ui64NV)(GLuint program, GLint location, GLuint64EXT x);
void (*glProgramUniform2ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
void (*glProgramUniform3ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void (*glProgramUniform4ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void (*glProgramUniform1ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void (*glProgramUniform2ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void (*glProgramUniform3ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void (*glProgramUniform4ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void (*glVertexAttribParameteriAMD)(GLuint index, GLenum pname, GLint param);
void (*glMultiDrawArraysIndirectAMD)(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);
void (*glMultiDrawElementsIndirectAMD)(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);
void (*glGenNamesAMD)(GLenum identifier, GLuint num, GLuint *names);
void (*glDeleteNamesAMD)(GLenum identifier, GLuint num, const GLuint *names);
GLboolean (*glIsNameAMD)(GLenum identifier, GLuint name);
void (*glQueryObjectParameteruiAMD)(GLenum target, GLuint id, GLenum pname, GLuint param);
void (*glGetPerfMonitorGroupsAMD)(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
void (*glGetPerfMonitorCountersAMD)(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
void (*glGetPerfMonitorGroupStringAMD)(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
void (*glGetPerfMonitorCounterStringAMD)(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
void (*glGetPerfMonitorCounterInfoAMD)(GLuint group, GLuint counter, GLenum pname, void *data);
void (*glGenPerfMonitorsAMD)(GLsizei n, GLuint *monitors);
void (*glDeletePerfMonitorsAMD)(GLsizei n, GLuint *monitors);
void (*glSelectPerfMonitorCountersAMD)(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
void (*glBeginPerfMonitorAMD)(GLuint monitor);
void (*glEndPerfMonitorAMD)(GLuint monitor);
void (*glGetPerfMonitorCounterDataAMD)(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
void (*glSetMultisamplefvAMD)(GLenum pname, GLuint index, const GLfloat *val);
void (*glTexStorageSparseAMD)(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
void (*glTextureStorageSparseAMD)(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
void (*glStencilOpValueAMD)(GLenum face, GLuint value);
void (*glTessellationFactorAMD)(GLfloat factor);
void (*glTessellationModeAMD)(GLenum mode);
void (*glElementPointerAPPLE)(GLenum type, const void *pointer);
void (*glDrawElementArrayAPPLE)(GLenum mode, GLint first, GLsizei count);
void (*glDrawRangeElementArrayAPPLE)(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
void (*glMultiDrawElementArrayAPPLE)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
void (*glMultiDrawRangeElementArrayAPPLE)(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
void (*glGenFencesAPPLE)(GLsizei n, GLuint *fences);
void (*glDeleteFencesAPPLE)(GLsizei n, const GLuint *fences);
void (*glSetFenceAPPLE)(GLuint fence);
GLboolean (*glIsFenceAPPLE)(GLuint fence);
GLboolean (*glTestFenceAPPLE)(GLuint fence);
void (*glFinishFenceAPPLE)(GLuint fence);
GLboolean (*glTestObjectAPPLE)(GLenum object, GLuint name);
void (*glFinishObjectAPPLE)(GLenum object, GLint name);
void (*glBufferParameteriAPPLE)(GLenum target, GLenum pname, GLint param);
void (*glFlushMappedBufferRangeAPPLE)(GLenum target, GLintptr offset, GLsizeiptr size);
GLenum (*glObjectPurgeableAPPLE)(GLenum objectType, GLuint name, GLenum option);
GLenum (*glObjectUnpurgeableAPPLE)(GLenum objectType, GLuint name, GLenum option);
void (*glGetObjectParameterivAPPLE)(GLenum objectType, GLuint name, GLenum pname, GLint *params);
void (*glTextureRangeAPPLE)(GLenum target, GLsizei length, const void *pointer);
void (*glGetTexParameterPointervAPPLE)(GLenum target, GLenum pname, void **params);
void (*glBindVertexArrayAPPLE)(GLuint array);
void (*glDeleteVertexArraysAPPLE)(GLsizei n, const GLuint *arrays);
void (*glGenVertexArraysAPPLE)(GLsizei n, GLuint *arrays);
GLboolean (*glIsVertexArrayAPPLE)(GLuint array);
void (*glVertexArrayRangeAPPLE)(GLsizei length, void *pointer);
void (*glFlushVertexArrayRangeAPPLE)(GLsizei length, void *pointer);
void (*glVertexArrayParameteriAPPLE)(GLenum pname, GLint param);
void (*glEnableVertexAttribAPPLE)(GLuint index, GLenum pname);
void (*glDisableVertexAttribAPPLE)(GLuint index, GLenum pname);
GLboolean (*glIsVertexAttribEnabledAPPLE)(GLuint index, GLenum pname);
void (*glMapVertexAttrib1dAPPLE)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
void (*glMapVertexAttrib1fAPPLE)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
void (*glMapVertexAttrib2dAPPLE)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
void (*glMapVertexAttrib2fAPPLE)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
void (*glDrawBuffersATI)(GLsizei n, const GLenum *bufs);
void (*glElementPointerATI)(GLenum type, const void *pointer);
void (*glDrawElementArrayATI)(GLenum mode, GLsizei count);
void (*glDrawRangeElementArrayATI)(GLenum mode, GLuint start, GLuint end, GLsizei count);
void (*glTexBumpParameterivATI)(GLenum pname, const GLint *param);
void (*glTexBumpParameterfvATI)(GLenum pname, const GLfloat *param);
void (*glGetTexBumpParameterivATI)(GLenum pname, GLint *param);
void (*glGetTexBumpParameterfvATI)(GLenum pname, GLfloat *param);
GLuint (*glGenFragmentShadersATI)(GLuint range);
void (*glBindFragmentShaderATI)(GLuint id);
void (*glDeleteFragmentShaderATI)(GLuint id);
void (*glBeginFragmentShaderATI)(void);
void (*glEndFragmentShaderATI)(void);
void (*glPassTexCoordATI)(GLuint dst, GLuint coord, GLenum swizzle);
void (*glSampleMapATI)(GLuint dst, GLuint interp, GLenum swizzle);
void (*glColorFragmentOp1ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void (*glColorFragmentOp2ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void (*glColorFragmentOp3ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void (*glAlphaFragmentOp1ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void (*glAlphaFragmentOp2ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void (*glAlphaFragmentOp3ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void (*glSetFragmentShaderConstantATI)(GLuint dst, const GLfloat *value);
void (*glUnmapObjectBufferATI)(GLuint buffer);
void (*glPNTrianglesiATI)(GLenum pname, GLint param);
void (*glPNTrianglesfATI)(GLenum pname, GLfloat param);
void (*glStencilOpSeparateATI)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void (*glStencilFuncSeparateATI)(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
GLuint (*glNewObjectBufferATI)(GLsizei size, const void *pointer, GLenum usage);
GLboolean (*glIsObjectBufferATI)(GLuint buffer);
void (*glUpdateObjectBufferATI)(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);
void (*glGetObjectBufferfvATI)(GLuint buffer, GLenum pname, GLfloat *params);
void (*glGetObjectBufferivATI)(GLuint buffer, GLenum pname, GLint *params);
void (*glFreeObjectBufferATI)(GLuint buffer);
void (*glArrayObjectATI)(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
void (*glGetArrayObjectfvATI)(GLenum array, GLenum pname, GLfloat *params);
void (*glGetArrayObjectivATI)(GLenum array, GLenum pname, GLint *params);
void (*glVariantArrayObjectATI)(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
void (*glGetVariantArrayObjectfvATI)(GLuint id, GLenum pname, GLfloat *params);
void (*glGetVariantArrayObjectivATI)(GLuint id, GLenum pname, GLint *params);
void (*glVertexAttribArrayObjectATI)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
void (*glGetVertexAttribArrayObjectfvATI)(GLuint index, GLenum pname, GLfloat *params);
void (*glGetVertexAttribArrayObjectivATI)(GLuint index, GLenum pname, GLint *params);
void (*glVertexStream1sATI)(GLenum stream, GLshort x);
void (*glVertexStream1svATI)(GLenum stream, const GLshort *coords);
void (*glVertexStream1iATI)(GLenum stream, GLint x);
void (*glVertexStream1ivATI)(GLenum stream, const GLint *coords);
void (*glVertexStream1fATI)(GLenum stream, GLfloat x);
void (*glVertexStream1fvATI)(GLenum stream, const GLfloat *coords);
void (*glVertexStream1dATI)(GLenum stream, GLdouble x);
void (*glVertexStream1dvATI)(GLenum stream, const GLdouble *coords);
void (*glVertexStream2sATI)(GLenum stream, GLshort x, GLshort y);
void (*glVertexStream2svATI)(GLenum stream, const GLshort *coords);
void (*glVertexStream2iATI)(GLenum stream, GLint x, GLint y);
void (*glVertexStream2ivATI)(GLenum stream, const GLint *coords);
void (*glVertexStream2fATI)(GLenum stream, GLfloat x, GLfloat y);
void (*glVertexStream2fvATI)(GLenum stream, const GLfloat *coords);
void (*glVertexStream2dATI)(GLenum stream, GLdouble x, GLdouble y);
void (*glVertexStream2dvATI)(GLenum stream, const GLdouble *coords);
void (*glVertexStream3sATI)(GLenum stream, GLshort x, GLshort y, GLshort z);
void (*glVertexStream3svATI)(GLenum stream, const GLshort *coords);
void (*glVertexStream3iATI)(GLenum stream, GLint x, GLint y, GLint z);
void (*glVertexStream3ivATI)(GLenum stream, const GLint *coords);
void (*glVertexStream3fATI)(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
void (*glVertexStream3fvATI)(GLenum stream, const GLfloat *coords);
void (*glVertexStream3dATI)(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
void (*glVertexStream3dvATI)(GLenum stream, const GLdouble *coords);
void (*glVertexStream4sATI)(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
void (*glVertexStream4svATI)(GLenum stream, const GLshort *coords);
void (*glVertexStream4iATI)(GLenum stream, GLint x, GLint y, GLint z, GLint w);
void (*glVertexStream4ivATI)(GLenum stream, const GLint *coords);
void (*glVertexStream4fATI)(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glVertexStream4fvATI)(GLenum stream, const GLfloat *coords);
void (*glVertexStream4dATI)(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glVertexStream4dvATI)(GLenum stream, const GLdouble *coords);
void (*glNormalStream3bATI)(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
void (*glNormalStream3bvATI)(GLenum stream, const GLbyte *coords);
void (*glNormalStream3sATI)(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
void (*glNormalStream3svATI)(GLenum stream, const GLshort *coords);
void (*glNormalStream3iATI)(GLenum stream, GLint nx, GLint ny, GLint nz);
void (*glNormalStream3ivATI)(GLenum stream, const GLint *coords);
void (*glNormalStream3fATI)(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
void (*glNormalStream3fvATI)(GLenum stream, const GLfloat *coords);
void (*glNormalStream3dATI)(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
void (*glNormalStream3dvATI)(GLenum stream, const GLdouble *coords);
void (*glClientActiveVertexStreamATI)(GLenum stream);
void (*glVertexBlendEnviATI)(GLenum pname, GLint param);
void (*glVertexBlendEnvfATI)(GLenum pname, GLfloat param);
void (*glUniformBufferEXT)(GLuint program, GLint location, GLuint buffer);
GLint (*glGetUniformBufferSizeEXT)(GLuint program, GLint location);
GLintptr (*glGetUniformOffsetEXT)(GLuint program, GLint location);
void (*glBlendColorEXT)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void (*glBlendEquationSeparateEXT)(GLenum modeRGB, GLenum modeAlpha);
void (*glBlendFuncSeparateEXT)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void (*glBlendEquationEXT)(GLenum mode);
void (*glColorSubTableEXT)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
void (*glCopyColorSubTableEXT)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void (*glLockArraysEXT)(GLint first, GLsizei count);
void (*glUnlockArraysEXT)(void);
void (*glConvolutionFilter1DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
void (*glConvolutionFilter2DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
void (*glConvolutionParameterfEXT)(GLenum target, GLenum pname, GLfloat params);
void (*glConvolutionParameterfvEXT)(GLenum target, GLenum pname, const GLfloat *params);
void (*glConvolutionParameteriEXT)(GLenum target, GLenum pname, GLint params);
void (*glConvolutionParameterivEXT)(GLenum target, GLenum pname, const GLint *params);
void (*glCopyConvolutionFilter1DEXT)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void (*glCopyConvolutionFilter2DEXT)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glGetConvolutionFilterEXT)(GLenum target, GLenum format, GLenum type, void *image);
void (*glGetConvolutionParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
void (*glGetConvolutionParameterivEXT)(GLenum target, GLenum pname, GLint *params);
void (*glGetSeparableFilterEXT)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
void (*glSeparableFilter2DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
void (*glTangent3bEXT)(GLbyte tx, GLbyte ty, GLbyte tz);
void (*glTangent3bvEXT)(const GLbyte *v);
void (*glTangent3dEXT)(GLdouble tx, GLdouble ty, GLdouble tz);
void (*glTangent3dvEXT)(const GLdouble *v);
void (*glTangent3fEXT)(GLfloat tx, GLfloat ty, GLfloat tz);
void (*glTangent3fvEXT)(const GLfloat *v);
void (*glTangent3iEXT)(GLint tx, GLint ty, GLint tz);
void (*glTangent3ivEXT)(const GLint *v);
void (*glTangent3sEXT)(GLshort tx, GLshort ty, GLshort tz);
void (*glTangent3svEXT)(const GLshort *v);
void (*glBinormal3bEXT)(GLbyte bx, GLbyte by, GLbyte bz);
void (*glBinormal3bvEXT)(const GLbyte *v);
void (*glBinormal3dEXT)(GLdouble bx, GLdouble by, GLdouble bz);
void (*glBinormal3dvEXT)(const GLdouble *v);
void (*glBinormal3fEXT)(GLfloat bx, GLfloat by, GLfloat bz);
void (*glBinormal3fvEXT)(const GLfloat *v);
void (*glBinormal3iEXT)(GLint bx, GLint by, GLint bz);
void (*glBinormal3ivEXT)(const GLint *v);
void (*glBinormal3sEXT)(GLshort bx, GLshort by, GLshort bz);
void (*glBinormal3svEXT)(const GLshort *v);
void (*glTangentPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
void (*glBinormalPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
void (*glCopyTexImage1DEXT)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void (*glCopyTexImage2DEXT)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void (*glCopyTexSubImage1DEXT)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void (*glCopyTexSubImage2DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glCopyTexSubImage3DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glCullParameterdvEXT)(GLenum pname, GLdouble *params);
void (*glCullParameterfvEXT)(GLenum pname, GLfloat *params);
void (*glLabelObjectEXT)(GLenum type, GLuint object, GLsizei length, const GLchar *label);
void (*glGetObjectLabelEXT)(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);
void (*glInsertEventMarkerEXT)(GLsizei length, const GLchar *marker);
void (*glPushGroupMarkerEXT)(GLsizei length, const GLchar *marker);
void (*glPopGroupMarkerEXT)(void);
void (*glDepthBoundsEXT)(GLclampd zmin, GLclampd zmax);
void (*glMatrixLoadfEXT)(GLenum mode, const GLfloat *m);
void (*glMatrixLoaddEXT)(GLenum mode, const GLdouble *m);
void (*glMatrixMultfEXT)(GLenum mode, const GLfloat *m);
void (*glMatrixMultdEXT)(GLenum mode, const GLdouble *m);
void (*glMatrixLoadIdentityEXT)(GLenum mode);
void (*glMatrixRotatefEXT)(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void (*glMatrixRotatedEXT)(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void (*glMatrixScalefEXT)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
void (*glMatrixScaledEXT)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
void (*glMatrixTranslatefEXT)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
void (*glMatrixTranslatedEXT)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
void (*glMatrixFrustumEXT)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void (*glMatrixOrthoEXT)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void (*glMatrixPopEXT)(GLenum mode);
void (*glMatrixPushEXT)(GLenum mode);
void (*glClientAttribDefaultEXT)(GLbitfield mask);
void (*glPushClientAttribDefaultEXT)(GLbitfield mask);
void (*glTextureParameterfEXT)(GLuint texture, GLenum target, GLenum pname, GLfloat param);
void (*glTextureParameterfvEXT)(GLuint texture, GLenum target, GLenum pname, const GLfloat *params);
void (*glTextureParameteriEXT)(GLuint texture, GLenum target, GLenum pname, GLint param);
void (*glTextureParameterivEXT)(GLuint texture, GLenum target, GLenum pname, const GLint *params);
void (*glTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
void (*glTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
void (*glTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
void (*glTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void (*glCopyTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void (*glCopyTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void (*glCopyTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void (*glCopyTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glGetTextureImageEXT)(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
void (*glGetTextureParameterfvEXT)(GLuint texture, GLenum target, GLenum pname, GLfloat *params);
void (*glGetTextureParameterivEXT)(GLuint texture, GLenum target, GLenum pname, GLint *params);
void (*glGetTextureLevelParameterfvEXT)(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);
void (*glGetTextureLevelParameterivEXT)(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);
void (*glTextureImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
void (*glTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void (*glCopyTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glBindMultiTextureEXT)(GLenum texunit, GLenum target, GLuint texture);
void (*glMultiTexCoordPointerEXT)(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);
void (*glMultiTexEnvfEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
void (*glMultiTexEnvfvEXT)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
void (*glMultiTexEnviEXT)(GLenum texunit, GLenum target, GLenum pname, GLint param);
void (*glMultiTexEnvivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
void (*glMultiTexGendEXT)(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
void (*glMultiTexGendvEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);
void (*glMultiTexGenfEXT)(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
void (*glMultiTexGenfvEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);
void (*glMultiTexGeniEXT)(GLenum texunit, GLenum coord, GLenum pname, GLint param);
void (*glMultiTexGenivEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLint *params);
void (*glGetMultiTexEnvfvEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
void (*glGetMultiTexEnvivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
void (*glGetMultiTexGendvEXT)(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);
void (*glGetMultiTexGenfvEXT)(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);
void (*glGetMultiTexGenivEXT)(GLenum texunit, GLenum coord, GLenum pname, GLint *params);
void (*glMultiTexParameteriEXT)(GLenum texunit, GLenum target, GLenum pname, GLint param);
void (*glMultiTexParameterivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
void (*glMultiTexParameterfEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
void (*glMultiTexParameterfvEXT)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
void (*glMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
void (*glMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
void (*glMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
void (*glMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void (*glCopyMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void (*glCopyMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void (*glCopyMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void (*glCopyMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glGetMultiTexImageEXT)(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
void (*glGetMultiTexParameterfvEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
void (*glGetMultiTexParameterivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
void (*glGetMultiTexLevelParameterfvEXT)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);
void (*glGetMultiTexLevelParameterivEXT)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);
void (*glMultiTexImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
void (*glMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void (*glCopyMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void (*glEnableClientStateIndexedEXT)(GLenum array, GLuint index);
void (*glDisableClientStateIndexedEXT)(GLenum array, GLuint index);
void (*glGetFloatIndexedvEXT)(GLenum target, GLuint index, GLfloat *data);
void (*glGetDoubleIndexedvEXT)(GLenum target, GLuint index, GLdouble *data);
void (*glGetPointerIndexedvEXT)(GLenum target, GLuint index, void **data);
void (*glEnableIndexedEXT)(GLenum target, GLuint index);
void (*glDisableIndexedEXT)(GLenum target, GLuint index);
GLboolean (*glIsEnabledIndexedEXT)(GLenum target, GLuint index);
void (*glGetIntegerIndexedvEXT)(GLenum target, GLuint index, GLint *data);
void (*glGetBooleanIndexedvEXT)(GLenum target, GLuint index, GLboolean *data);
void (*glCompressedTextureImage3DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
void (*glCompressedTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
void (*glCompressedTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
void (*glCompressedTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
void (*glCompressedTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
void (*glCompressedTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
void (*glGetCompressedTextureImageEXT)(GLuint texture, GLenum target, GLint lod, void *img);
void (*glCompressedMultiTexImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
void (*glCompressedMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
void (*glCompressedMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
void (*glCompressedMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
void (*glCompressedMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
void (*glCompressedMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
void (*glGetCompressedMultiTexImageEXT)(GLenum texunit, GLenum target, GLint lod, void *img);
void (*glMatrixLoadTransposefEXT)(GLenum mode, const GLfloat *m);
void (*glMatrixLoadTransposedEXT)(GLenum mode, const GLdouble *m);
void (*glMatrixMultTransposefEXT)(GLenum mode, const GLfloat *m);
void (*glMatrixMultTransposedEXT)(GLenum mode, const GLdouble *m);
void (*glNamedBufferDataEXT)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
void (*glNamedBufferSubDataEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
GLboolean (*glUnmapNamedBufferEXT)(GLuint buffer);
void (*glGetNamedBufferParameterivEXT)(GLuint buffer, GLenum pname, GLint *params);
void (*glGetNamedBufferPointervEXT)(GLuint buffer, GLenum pname, void **params);
void (*glGetNamedBufferSubDataEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
void (*glProgramUniform1fEXT)(GLuint program, GLint location, GLfloat v0);
void (*glProgramUniform2fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
void (*glProgramUniform3fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void (*glProgramUniform4fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void (*glProgramUniform1iEXT)(GLuint program, GLint location, GLint v0);
void (*glProgramUniform2iEXT)(GLuint program, GLint location, GLint v0, GLint v1);
void (*glProgramUniform3iEXT)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
void (*glProgramUniform4iEXT)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void (*glProgramUniform1fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void (*glProgramUniform2fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void (*glProgramUniform3fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void (*glProgramUniform4fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void (*glProgramUniform1ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
void (*glProgramUniform2ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
void (*glProgramUniform3ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
void (*glProgramUniform4ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
void (*glProgramUniformMatrix2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix2x3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix3x2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix2x4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix4x2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix3x4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glProgramUniformMatrix4x3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void (*glTextureBufferEXT)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
void (*glMultiTexBufferEXT)(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
void (*glTextureParameterIivEXT)(GLuint texture, GLenum target, GLenum pname, const GLint *params);
void (*glTextureParameterIuivEXT)(GLuint texture, GLenum target, GLenum pname, const GLuint *params);
void (*glGetTextureParameterIivEXT)(GLuint texture, GLenum target, GLenum pname, GLint *params);
void (*glGetTextureParameterIuivEXT)(GLuint texture, GLenum target, GLenum pname, GLuint *params);
void (*glMultiTexParameterIivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
void (*glMultiTexParameterIuivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLuint *params);
void (*glGetMultiTexParameterIivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
void (*glGetMultiTexParameterIuivEXT)(GLenum texunit, GLenum target, GLenum pname, GLuint *params);
void (*glProgramUniform1uiEXT)(GLuint program, GLint location, GLuint v0);
void (*glProgramUniform2uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1);
void (*glProgramUniform3uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
void (*glProgramUniform4uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void (*glProgramUniform1uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
void (*glProgramUniform2uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
void (*glProgramUniform3uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
void (*glProgramUniform4uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
void (*glNamedProgramLocalParameters4fvEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);
void (*glNamedProgramLocalParameterI4iEXT)(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
void (*glNamedProgramLocalParameterI4ivEXT)(GLuint program, GLenum target, GLuint index, const GLint *params);
void (*glNamedProgramLocalParametersI4ivEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);
void (*glNamedProgramLocalParameterI4uiEXT)(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void (*glNamedProgramLocalParameterI4uivEXT)(GLuint program, GLenum target, GLuint index, const GLuint *params);
void (*glNamedProgramLocalParametersI4uivEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);
void (*glGetNamedProgramLocalParameterIivEXT)(GLuint program, GLenum target, GLuint index, GLint *params);
void (*glGetNamedProgramLocalParameterIuivEXT)(GLuint program, GLenum target, GLuint index, GLuint *params);
void (*glEnableClientStateiEXT)(GLenum array, GLuint index);
void (*glDisableClientStateiEXT)(GLenum array, GLuint index);
void (*glGetFloati_vEXT)(GLenum pname, GLuint index, GLfloat *params);
void (*glGetDoublei_vEXT)(GLenum pname, GLuint index, GLdouble *params);
void (*glGetPointeri_vEXT)(GLenum pname, GLuint index, void **params);
void (*glNamedProgramStringEXT)(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);
void (*glNamedProgramLocalParameter4dEXT)(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glNamedProgramLocalParameter4dvEXT)(GLuint program, GLenum target, GLuint index, const GLdouble *params);
void (*glNamedProgramLocalParameter4fEXT)(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glNamedProgramLocalParameter4fvEXT)(GLuint program, GLenum target, GLuint index, const GLfloat *params);
void (*glGetNamedProgramLocalParameterdvEXT)(GLuint program, GLenum target, GLuint index, GLdouble *params);
void (*glGetNamedProgramLocalParameterfvEXT)(GLuint program, GLenum target, GLuint index, GLfloat *params);
void (*glGetNamedProgramivEXT)(GLuint program, GLenum target, GLenum pname, GLint *params);
void (*glGetNamedProgramStringEXT)(GLuint program, GLenum target, GLenum pname, void *string);
void (*glNamedRenderbufferStorageEXT)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
void (*glGetNamedRenderbufferParameterivEXT)(GLuint renderbuffer, GLenum pname, GLint *params);
void (*glNamedRenderbufferStorageMultisampleEXT)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void (*glNamedRenderbufferStorageMultisampleCoverageEXT)(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLenum (*glCheckNamedFramebufferStatusEXT)(GLuint framebuffer, GLenum target);
void (*glNamedFramebufferTexture1DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void (*glNamedFramebufferTexture2DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void (*glNamedFramebufferTexture3DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void (*glNamedFramebufferRenderbufferEXT)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void (*glGetNamedFramebufferAttachmentParameterivEXT)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
void (*glGenerateTextureMipmapEXT)(GLuint texture, GLenum target);
void (*glGenerateMultiTexMipmapEXT)(GLenum texunit, GLenum target);
void (*glFramebufferDrawBufferEXT)(GLuint framebuffer, GLenum mode);
void (*glFramebufferDrawBuffersEXT)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
void (*glFramebufferReadBufferEXT)(GLuint framebuffer, GLenum mode);
void (*glGetFramebufferParameterivEXT)(GLuint framebuffer, GLenum pname, GLint *params);
void (*glNamedCopyBufferSubDataEXT)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void (*glNamedFramebufferTextureEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
void (*glNamedFramebufferTextureLayerEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
void (*glNamedFramebufferTextureFaceEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
void (*glTextureRenderbufferEXT)(GLuint texture, GLenum target, GLuint renderbuffer);
void (*glMultiTexRenderbufferEXT)(GLenum texunit, GLenum target, GLuint renderbuffer);
void (*glVertexArrayVertexOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void (*glVertexArrayColorOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void (*glVertexArrayEdgeFlagOffsetEXT)(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
void (*glVertexArrayIndexOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void (*glVertexArrayNormalOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void (*glVertexArrayTexCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void (*glVertexArrayMultiTexCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void (*glVertexArrayFogCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void (*glVertexArraySecondaryColorOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void (*glVertexArrayVertexAttribOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
void (*glVertexArrayVertexAttribIOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void (*glEnableVertexArrayEXT)(GLuint vaobj, GLenum array);
void (*glDisableVertexArrayEXT)(GLuint vaobj, GLenum array);
void (*glEnableVertexArrayAttribEXT)(GLuint vaobj, GLuint index);
void (*glDisableVertexArrayAttribEXT)(GLuint vaobj, GLuint index);
void (*glGetVertexArrayIntegervEXT)(GLuint vaobj, GLenum pname, GLint *param);
void (*glGetVertexArrayPointervEXT)(GLuint vaobj, GLenum pname, void **param);
void (*glGetVertexArrayIntegeri_vEXT)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
void (*glGetVertexArrayPointeri_vEXT)(GLuint vaobj, GLuint index, GLenum pname, void **param);
void (*glFlushMappedNamedBufferRangeEXT)(GLuint buffer, GLintptr offset, GLsizeiptr length);
void (*glNamedBufferStorageEXT)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
void (*glClearNamedBufferDataEXT)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
void (*glClearNamedBufferSubDataEXT)(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
void (*glNamedFramebufferParameteriEXT)(GLuint framebuffer, GLenum pname, GLint param);
void (*glGetNamedFramebufferParameterivEXT)(GLuint framebuffer, GLenum pname, GLint *params);
void (*glProgramUniform1dEXT)(GLuint program, GLint location, GLdouble x);
void (*glProgramUniform2dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y);
void (*glProgramUniform3dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
void (*glProgramUniform4dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glProgramUniform1dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void (*glProgramUniform2dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void (*glProgramUniform3dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void (*glProgramUniform4dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void (*glProgramUniformMatrix2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix2x3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix2x4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix3x2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix3x4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix4x2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glProgramUniformMatrix4x3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void (*glTextureBufferRangeEXT)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void (*glTextureStorage1DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void (*glTextureStorage2DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void (*glTextureStorage3DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void (*glTextureStorage2DMultisampleEXT)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void (*glTextureStorage3DMultisampleEXT)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void (*glVertexArrayBindVertexBufferEXT)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void (*glVertexArrayVertexAttribFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void (*glVertexArrayVertexAttribIFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void (*glVertexArrayVertexAttribLFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void (*glVertexArrayVertexAttribBindingEXT)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
void (*glVertexArrayVertexBindingDivisorEXT)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
void (*glVertexArrayVertexAttribLOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void (*glTexturePageCommitmentEXT)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident);
void (*glVertexArrayVertexAttribDivisorEXT)(GLuint vaobj, GLuint index, GLuint divisor);
void (*glColorMaskIndexedEXT)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void (*glDrawArraysInstancedEXT)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
void (*glDrawElementsInstancedEXT)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
void (*glDrawRangeElementsEXT)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
void (*glFogCoordfEXT)(GLfloat coord);
void (*glFogCoordfvEXT)(const GLfloat *coord);
void (*glFogCoorddEXT)(GLdouble coord);
void (*glFogCoorddvEXT)(const GLdouble *coord);
void (*glFogCoordPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
void (*glBlitFramebufferEXT)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void (*glRenderbufferStorageMultisampleEXT)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLboolean (*glIsRenderbufferEXT)(GLuint renderbuffer);
void (*glBindRenderbufferEXT)(GLenum target, GLuint renderbuffer);
void (*glDeleteRenderbuffersEXT)(GLsizei n, const GLuint *renderbuffers);
void (*glGenRenderbuffersEXT)(GLsizei n, GLuint *renderbuffers);
void (*glRenderbufferStorageEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void (*glGetRenderbufferParameterivEXT)(GLenum target, GLenum pname, GLint *params);
GLboolean (*glIsFramebufferEXT)(GLuint framebuffer);
void (*glBindFramebufferEXT)(GLenum target, GLuint framebuffer);
void (*glDeleteFramebuffersEXT)(GLsizei n, const GLuint *framebuffers);
void (*glGenFramebuffersEXT)(GLsizei n, GLuint *framebuffers);
GLenum (*glCheckFramebufferStatusEXT)(GLenum target);
void (*glFramebufferTexture1DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void (*glFramebufferTexture2DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void (*glFramebufferTexture3DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void (*glFramebufferRenderbufferEXT)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void (*glGetFramebufferAttachmentParameterivEXT)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
void (*glGenerateMipmapEXT)(GLenum target);
void (*glProgramParameteriEXT)(GLuint program, GLenum pname, GLint value);
void (*glProgramEnvParameters4fvEXT)(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
void (*glProgramLocalParameters4fvEXT)(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
void (*glGetUniformuivEXT)(GLuint program, GLint location, GLuint *params);
void (*glBindFragDataLocationEXT)(GLuint program, GLuint color, const GLchar *name);
GLint (*glGetFragDataLocationEXT)(GLuint program, const GLchar *name);
void (*glUniform1uiEXT)(GLint location, GLuint v0);
void (*glUniform2uiEXT)(GLint location, GLuint v0, GLuint v1);
void (*glUniform3uiEXT)(GLint location, GLuint v0, GLuint v1, GLuint v2);
void (*glUniform4uiEXT)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void (*glUniform1uivEXT)(GLint location, GLsizei count, const GLuint *value);
void (*glUniform2uivEXT)(GLint location, GLsizei count, const GLuint *value);
void (*glUniform3uivEXT)(GLint location, GLsizei count, const GLuint *value);
void (*glUniform4uivEXT)(GLint location, GLsizei count, const GLuint *value);
void (*glGetHistogramEXT)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
void (*glGetHistogramParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
void (*glGetHistogramParameterivEXT)(GLenum target, GLenum pname, GLint *params);
void (*glGetMinmaxEXT)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
void (*glGetMinmaxParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
void (*glGetMinmaxParameterivEXT)(GLenum target, GLenum pname, GLint *params);
void (*glHistogramEXT)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void (*glMinmaxEXT)(GLenum target, GLenum internalformat, GLboolean sink);
void (*glResetHistogramEXT)(GLenum target);
void (*glResetMinmaxEXT)(GLenum target);
void (*glIndexFuncEXT)(GLenum func, GLclampf ref);
void (*glIndexMaterialEXT)(GLenum face, GLenum mode);
void (*glApplyTextureEXT)(GLenum mode);
void (*glTextureLightEXT)(GLenum pname);
void (*glTextureMaterialEXT)(GLenum face, GLenum mode);
void (*glMultiDrawArraysEXT)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
void (*glMultiDrawElementsEXT)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);
void (*glSampleMaskEXT)(GLclampf value, GLboolean invert);
void (*glSamplePatternEXT)(GLenum pattern);
void (*glColorTableEXT)(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);
void (*glGetColorTableEXT)(GLenum target, GLenum format, GLenum type, void *data);
void (*glGetColorTableParameterivEXT)(GLenum target, GLenum pname, GLint *params);
void (*glGetColorTableParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
void (*glPixelTransformParameteriEXT)(GLenum target, GLenum pname, GLint param);
void (*glPixelTransformParameterfEXT)(GLenum target, GLenum pname, GLfloat param);
void (*glPixelTransformParameterivEXT)(GLenum target, GLenum pname, const GLint *params);
void (*glPixelTransformParameterfvEXT)(GLenum target, GLenum pname, const GLfloat *params);
void (*glGetPixelTransformParameterivEXT)(GLenum target, GLenum pname, GLint *params);
void (*glGetPixelTransformParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
void (*glPointParameterfEXT)(GLenum pname, GLfloat param);
void (*glPointParameterfvEXT)(GLenum pname, const GLfloat *params);
void (*glPolygonOffsetEXT)(GLfloat factor, GLfloat bias);
void (*glPolygonOffsetClampEXT)(GLfloat factor, GLfloat units, GLfloat clamp);
void (*glProvokingVertexEXT)(GLenum mode);
void (*glRasterSamplesEXT)(GLuint samples, GLboolean fixedsamplelocations);
void (*glSecondaryColor3bEXT)(GLbyte red, GLbyte green, GLbyte blue);
void (*glSecondaryColor3bvEXT)(const GLbyte *v);
void (*glSecondaryColor3dEXT)(GLdouble red, GLdouble green, GLdouble blue);
void (*glSecondaryColor3dvEXT)(const GLdouble *v);
void (*glSecondaryColor3fEXT)(GLfloat red, GLfloat green, GLfloat blue);
void (*glSecondaryColor3fvEXT)(const GLfloat *v);
void (*glSecondaryColor3iEXT)(GLint red, GLint green, GLint blue);
void (*glSecondaryColor3ivEXT)(const GLint *v);
void (*glSecondaryColor3sEXT)(GLshort red, GLshort green, GLshort blue);
void (*glSecondaryColor3svEXT)(const GLshort *v);
void (*glSecondaryColor3ubEXT)(GLubyte red, GLubyte green, GLubyte blue);
void (*glSecondaryColor3ubvEXT)(const GLubyte *v);
void (*glSecondaryColor3uiEXT)(GLuint red, GLuint green, GLuint blue);
void (*glSecondaryColor3uivEXT)(const GLuint *v);
void (*glSecondaryColor3usEXT)(GLushort red, GLushort green, GLushort blue);
void (*glSecondaryColor3usvEXT)(const GLushort *v);
void (*glSecondaryColorPointerEXT)(GLint size, GLenum type, GLsizei stride, const void *pointer);
void (*glUseShaderProgramEXT)(GLenum type, GLuint program);
void (*glActiveProgramEXT)(GLuint program);
GLuint (*glCreateShaderProgramEXT)(GLenum type, const GLchar *string);
void (*glBindImageTextureEXT)(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
void (*glMemoryBarrierEXT)(GLbitfield barriers);
void (*glStencilClearTagEXT)(GLsizei stencilTagBits, GLuint stencilClearTag);
void (*glActiveStencilFaceEXT)(GLenum face);
void (*glTexSubImage1DEXT)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
void (*glTexSubImage2DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void (*glTexImage3DEXT)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
void (*glTexSubImage3DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void (*glFramebufferTextureLayerEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void (*glTexBufferEXT)(GLenum target, GLenum internalformat, GLuint buffer);
void (*glTexParameterIivEXT)(GLenum target, GLenum pname, const GLint *params);
void (*glTexParameterIuivEXT)(GLenum target, GLenum pname, const GLuint *params);
void (*glGetTexParameterIivEXT)(GLenum target, GLenum pname, GLint *params);
void (*glGetTexParameterIuivEXT)(GLenum target, GLenum pname, GLuint *params);
void (*glClearColorIiEXT)(GLint red, GLint green, GLint blue, GLint alpha);
void (*glClearColorIuiEXT)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLboolean (*glAreTexturesResidentEXT)(GLsizei n, const GLuint *textures, GLboolean *residences);
void (*glBindTextureEXT)(GLenum target, GLuint texture);
void (*glDeleteTexturesEXT)(GLsizei n, const GLuint *textures);
void (*glGenTexturesEXT)(GLsizei n, GLuint *textures);
GLboolean (*glIsTextureEXT)(GLuint texture);
void (*glPrioritizeTexturesEXT)(GLsizei n, const GLuint *textures, const GLclampf *priorities);
void (*glTextureNormalEXT)(GLenum mode);
void (*glGetQueryObjecti64vEXT)(GLuint id, GLenum pname, GLint64 *params);
void (*glGetQueryObjectui64vEXT)(GLuint id, GLenum pname, GLuint64 *params);
void (*glBeginTransformFeedbackEXT)(GLenum primitiveMode);
void (*glEndTransformFeedbackEXT)(void);
void (*glBindBufferRangeEXT)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void (*glBindBufferOffsetEXT)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void (*glBindBufferBaseEXT)(GLenum target, GLuint index, GLuint buffer);
void (*glTransformFeedbackVaryingsEXT)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
void (*glGetTransformFeedbackVaryingEXT)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
void (*glArrayElementEXT)(GLint i);
void (*glColorPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
void (*glDrawArraysEXT)(GLenum mode, GLint first, GLsizei count);
void (*glEdgeFlagPointerEXT)(GLsizei stride, GLsizei count, const GLboolean *pointer);
void (*glGetPointervEXT)(GLenum pname, void **params);
void (*glIndexPointerEXT)(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
void (*glNormalPointerEXT)(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
void (*glTexCoordPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
void (*glVertexPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
void (*glVertexAttribL1dEXT)(GLuint index, GLdouble x);
void (*glVertexAttribL2dEXT)(GLuint index, GLdouble x, GLdouble y);
void (*glVertexAttribL3dEXT)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void (*glVertexAttribL4dEXT)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glVertexAttribL1dvEXT)(GLuint index, const GLdouble *v);
void (*glVertexAttribL2dvEXT)(GLuint index, const GLdouble *v);
void (*glVertexAttribL3dvEXT)(GLuint index, const GLdouble *v);
void (*glVertexAttribL4dvEXT)(GLuint index, const GLdouble *v);
void (*glVertexAttribLPointerEXT)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
void (*glGetVertexAttribLdvEXT)(GLuint index, GLenum pname, GLdouble *params);
void (*glBeginVertexShaderEXT)(void);
void (*glEndVertexShaderEXT)(void);
void (*glBindVertexShaderEXT)(GLuint id);
GLuint (*glGenVertexShadersEXT)(GLuint range);
void (*glDeleteVertexShaderEXT)(GLuint id);
void (*glShaderOp1EXT)(GLenum op, GLuint res, GLuint arg1);
void (*glShaderOp2EXT)(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
void (*glShaderOp3EXT)(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
void (*glSwizzleEXT)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
void (*glWriteMaskEXT)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
void (*glInsertComponentEXT)(GLuint res, GLuint src, GLuint num);
void (*glExtractComponentEXT)(GLuint res, GLuint src, GLuint num);
GLuint (*glGenSymbolsEXT)(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
void (*glSetInvariantEXT)(GLuint id, GLenum type, const void *addr);
void (*glSetLocalConstantEXT)(GLuint id, GLenum type, const void *addr);
void (*glVariantbvEXT)(GLuint id, const GLbyte *addr);
void (*glVariantsvEXT)(GLuint id, const GLshort *addr);
void (*glVariantivEXT)(GLuint id, const GLint *addr);
void (*glVariantfvEXT)(GLuint id, const GLfloat *addr);
void (*glVariantdvEXT)(GLuint id, const GLdouble *addr);
void (*glVariantubvEXT)(GLuint id, const GLubyte *addr);
void (*glVariantusvEXT)(GLuint id, const GLushort *addr);
void (*glVariantuivEXT)(GLuint id, const GLuint *addr);
void (*glVariantPointerEXT)(GLuint id, GLenum type, GLuint stride, const void *addr);
void (*glEnableVariantClientStateEXT)(GLuint id);
void (*glDisableVariantClientStateEXT)(GLuint id);
GLuint (*glBindLightParameterEXT)(GLenum light, GLenum value);
GLuint (*glBindMaterialParameterEXT)(GLenum face, GLenum value);
GLuint (*glBindTexGenParameterEXT)(GLenum unit, GLenum coord, GLenum value);
GLuint (*glBindTextureUnitParameterEXT)(GLenum unit, GLenum value);
GLuint (*glBindParameterEXT)(GLenum value);
GLboolean (*glIsVariantEnabledEXT)(GLuint id, GLenum cap);
void (*glGetVariantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
void (*glGetVariantIntegervEXT)(GLuint id, GLenum value, GLint *data);
void (*glGetVariantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
void (*glGetVariantPointervEXT)(GLuint id, GLenum value, void **data);
void (*glGetInvariantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
void (*glGetInvariantIntegervEXT)(GLuint id, GLenum value, GLint *data);
void (*glGetInvariantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
void (*glGetLocalConstantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
void (*glGetLocalConstantIntegervEXT)(GLuint id, GLenum value, GLint *data);
void (*glGetLocalConstantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
void (*glVertexWeightfEXT)(GLfloat weight);
void (*glVertexWeightfvEXT)(const GLfloat *weight);
void (*glVertexWeightPointerEXT)(GLint size, GLenum type, GLsizei stride, const void *pointer);
GLsync (*glImportSyncEXT)(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
void (*glFrameTerminatorGREMEDY)(void);
void (*glStringMarkerGREMEDY)(GLsizei len, const void *string);
void (*glImageTransformParameteriHP)(GLenum target, GLenum pname, GLint param);
void (*glImageTransformParameterfHP)(GLenum target, GLenum pname, GLfloat param);
void (*glImageTransformParameterivHP)(GLenum target, GLenum pname, const GLint *params);
void (*glImageTransformParameterfvHP)(GLenum target, GLenum pname, const GLfloat *params);
void (*glGetImageTransformParameterivHP)(GLenum target, GLenum pname, GLint *params);
void (*glGetImageTransformParameterfvHP)(GLenum target, GLenum pname, GLfloat *params);
void (*glMultiModeDrawArraysIBM)(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
void (*glMultiModeDrawElementsIBM)(const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);
void (*glFlushStaticDataIBM)(GLenum target);
void (*glColorPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void (*glSecondaryColorPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void (*glEdgeFlagPointerListIBM)(GLint stride, const GLboolean **pointer, GLint ptrstride);
void (*glFogCoordPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void (*glIndexPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void (*glNormalPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void (*glTexCoordPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void (*glVertexPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void (*glBlendFuncSeparateINGR)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void (*glSyncTextureINTEL)(GLuint texture);
void (*glUnmapTexture2DINTEL)(GLuint texture, GLint level);
void (*glVertexPointervINTEL)(GLint size, GLenum type, const void **pointer);
void (*glNormalPointervINTEL)(GLenum type, const void **pointer);
void (*glColorPointervINTEL)(GLint size, GLenum type, const void **pointer);
void (*glTexCoordPointervINTEL)(GLint size, GLenum type, const void **pointer);
void (*glBeginPerfQueryINTEL)(GLuint queryHandle);
void (*glCreatePerfQueryINTEL)(GLuint queryId, GLuint *queryHandle);
void (*glDeletePerfQueryINTEL)(GLuint queryHandle);
void (*glEndPerfQueryINTEL)(GLuint queryHandle);
void (*glGetFirstPerfQueryIdINTEL)(GLuint *queryId);
void (*glGetNextPerfQueryIdINTEL)(GLuint queryId, GLuint *nextQueryId);
void (*glGetPerfCounterInfoINTEL)(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
void (*glGetPerfQueryDataINTEL)(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
void (*glGetPerfQueryIdByNameINTEL)(GLchar *queryName, GLuint *queryId);
void (*glGetPerfQueryInfoINTEL)(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
void (*glResizeBuffersMESA)(void);
void (*glWindowPos2dMESA)(GLdouble x, GLdouble y);
void (*glWindowPos2dvMESA)(const GLdouble *v);
void (*glWindowPos2fMESA)(GLfloat x, GLfloat y);
void (*glWindowPos2fvMESA)(const GLfloat *v);
void (*glWindowPos2iMESA)(GLint x, GLint y);
void (*glWindowPos2ivMESA)(const GLint *v);
void (*glWindowPos2sMESA)(GLshort x, GLshort y);
void (*glWindowPos2svMESA)(const GLshort *v);
void (*glWindowPos3dMESA)(GLdouble x, GLdouble y, GLdouble z);
void (*glWindowPos3dvMESA)(const GLdouble *v);
void (*glWindowPos3fMESA)(GLfloat x, GLfloat y, GLfloat z);
void (*glWindowPos3fvMESA)(const GLfloat *v);
void (*glWindowPos3iMESA)(GLint x, GLint y, GLint z);
void (*glWindowPos3ivMESA)(const GLint *v);
void (*glWindowPos3sMESA)(GLshort x, GLshort y, GLshort z);
void (*glWindowPos3svMESA)(const GLshort *v);
void (*glWindowPos4dMESA)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glWindowPos4dvMESA)(const GLdouble *v);
void (*glWindowPos4fMESA)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glWindowPos4fvMESA)(const GLfloat *v);
void (*glWindowPos4iMESA)(GLint x, GLint y, GLint z, GLint w);
void (*glWindowPos4ivMESA)(const GLint *v);
void (*glWindowPos4sMESA)(GLshort x, GLshort y, GLshort z, GLshort w);
void (*glWindowPos4svMESA)(const GLshort *v);
void (*glBeginConditionalRenderNVX)(GLuint id);
void (*glEndConditionalRenderNVX)(void);
void (*glMultiDrawArraysIndirectBindlessNV)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
void (*glMultiDrawElementsIndirectBindlessNV)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
void (*glMultiDrawArraysIndirectBindlessCountNV)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
void (*glMultiDrawElementsIndirectBindlessCountNV)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
GLuint64 (*glGetTextureHandleNV)(GLuint texture);
GLuint64 (*glGetTextureSamplerHandleNV)(GLuint texture, GLuint sampler);
void (*glMakeTextureHandleResidentNV)(GLuint64 handle);
void (*glMakeTextureHandleNonResidentNV)(GLuint64 handle);
GLuint64 (*glGetImageHandleNV)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
void (*glMakeImageHandleResidentNV)(GLuint64 handle, GLenum access);
void (*glMakeImageHandleNonResidentNV)(GLuint64 handle);
void (*glUniformHandleui64NV)(GLint location, GLuint64 value);
void (*glUniformHandleui64vNV)(GLint location, GLsizei count, const GLuint64 *value);
void (*glProgramUniformHandleui64NV)(GLuint program, GLint location, GLuint64 value);
void (*glProgramUniformHandleui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
GLboolean (*glIsTextureHandleResidentNV)(GLuint64 handle);
GLboolean (*glIsImageHandleResidentNV)(GLuint64 handle);
void (*glBlendParameteriNV)(GLenum pname, GLint value);
void (*glBlendBarrierNV)(void);
void (*glBeginConditionalRenderNV)(GLuint id, GLenum mode);
void (*glEndConditionalRenderNV)(void);
void (*glSubpixelPrecisionBiasNV)(GLuint xbits, GLuint ybits);
void (*glCopyImageSubDataNV)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
void (*glDepthRangedNV)(GLdouble zNear, GLdouble zFar);
void (*glClearDepthdNV)(GLdouble depth);
void (*glDepthBoundsdNV)(GLdouble zmin, GLdouble zmax);
void (*glDrawTextureNV)(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
void (*glMapControlPointsNV)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);
void (*glMapParameterivNV)(GLenum target, GLenum pname, const GLint *params);
void (*glMapParameterfvNV)(GLenum target, GLenum pname, const GLfloat *params);
void (*glGetMapControlPointsNV)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);
void (*glGetMapParameterivNV)(GLenum target, GLenum pname, GLint *params);
void (*glGetMapParameterfvNV)(GLenum target, GLenum pname, GLfloat *params);
void (*glGetMapAttribParameterivNV)(GLenum target, GLuint index, GLenum pname, GLint *params);
void (*glGetMapAttribParameterfvNV)(GLenum target, GLuint index, GLenum pname, GLfloat *params);
void (*glEvalMapsNV)(GLenum target, GLenum mode);
void (*glGetMultisamplefvNV)(GLenum pname, GLuint index, GLfloat *val);
void (*glSampleMaskIndexedNV)(GLuint index, GLbitfield mask);
void (*glTexRenderbufferNV)(GLenum target, GLuint renderbuffer);
void (*glDeleteFencesNV)(GLsizei n, const GLuint *fences);
void (*glGenFencesNV)(GLsizei n, GLuint *fences);
GLboolean (*glIsFenceNV)(GLuint fence);
GLboolean (*glTestFenceNV)(GLuint fence);
void (*glGetFenceivNV)(GLuint fence, GLenum pname, GLint *params);
void (*glFinishFenceNV)(GLuint fence);
void (*glSetFenceNV)(GLuint fence, GLenum condition);
void (*glFragmentCoverageColorNV)(GLuint color);
void (*glProgramNamedParameter4fNV)(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glProgramNamedParameter4fvNV)(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
void (*glProgramNamedParameter4dNV)(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glProgramNamedParameter4dvNV)(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
void (*glGetProgramNamedParameterfvNV)(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
void (*glGetProgramNamedParameterdvNV)(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
void (*glCoverageModulationTableNV)(GLsizei n, const GLfloat *v);
void (*glGetCoverageModulationTableNV)(GLsizei bufsize, GLfloat *v);
void (*glCoverageModulationNV)(GLenum components);
void (*glRenderbufferStorageMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
void (*glProgramVertexLimitNV)(GLenum target, GLint limit);
void (*glFramebufferTextureEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level);
void (*glFramebufferTextureFaceEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
void (*glProgramLocalParameterI4iNV)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
void (*glProgramLocalParameterI4ivNV)(GLenum target, GLuint index, const GLint *params);
void (*glProgramLocalParametersI4ivNV)(GLenum target, GLuint index, GLsizei count, const GLint *params);
void (*glProgramLocalParameterI4uiNV)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void (*glProgramLocalParameterI4uivNV)(GLenum target, GLuint index, const GLuint *params);
void (*glProgramLocalParametersI4uivNV)(GLenum target, GLuint index, GLsizei count, const GLuint *params);
void (*glProgramEnvParameterI4iNV)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
void (*glProgramEnvParameterI4ivNV)(GLenum target, GLuint index, const GLint *params);
void (*glProgramEnvParametersI4ivNV)(GLenum target, GLuint index, GLsizei count, const GLint *params);
void (*glProgramEnvParameterI4uiNV)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void (*glProgramEnvParameterI4uivNV)(GLenum target, GLuint index, const GLuint *params);
void (*glProgramEnvParametersI4uivNV)(GLenum target, GLuint index, GLsizei count, const GLuint *params);
void (*glGetProgramLocalParameterIivNV)(GLenum target, GLuint index, GLint *params);
void (*glGetProgramLocalParameterIuivNV)(GLenum target, GLuint index, GLuint *params);
void (*glGetProgramEnvParameterIivNV)(GLenum target, GLuint index, GLint *params);
void (*glGetProgramEnvParameterIuivNV)(GLenum target, GLuint index, GLuint *params);
void (*glProgramSubroutineParametersuivNV)(GLenum target, GLsizei count, const GLuint *params);
void (*glGetProgramSubroutineParameteruivNV)(GLenum target, GLuint index, GLuint *param);
void (*glVertex2hNV)(GLhalfNV x, GLhalfNV y);
void (*glVertex2hvNV)(const GLhalfNV *v);
void (*glVertex3hNV)(GLhalfNV x, GLhalfNV y, GLhalfNV z);
void (*glVertex3hvNV)(const GLhalfNV *v);
void (*glVertex4hNV)(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
void (*glVertex4hvNV)(const GLhalfNV *v);
void (*glNormal3hNV)(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
void (*glNormal3hvNV)(const GLhalfNV *v);
void (*glColor3hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
void (*glColor3hvNV)(const GLhalfNV *v);
void (*glColor4hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
void (*glColor4hvNV)(const GLhalfNV *v);
void (*glTexCoord1hNV)(GLhalfNV s);
void (*glTexCoord1hvNV)(const GLhalfNV *v);
void (*glTexCoord2hNV)(GLhalfNV s, GLhalfNV t);
void (*glTexCoord2hvNV)(const GLhalfNV *v);
void (*glTexCoord3hNV)(GLhalfNV s, GLhalfNV t, GLhalfNV r);
void (*glTexCoord3hvNV)(const GLhalfNV *v);
void (*glTexCoord4hNV)(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
void (*glTexCoord4hvNV)(const GLhalfNV *v);
void (*glMultiTexCoord1hNV)(GLenum target, GLhalfNV s);
void (*glMultiTexCoord1hvNV)(GLenum target, const GLhalfNV *v);
void (*glMultiTexCoord2hNV)(GLenum target, GLhalfNV s, GLhalfNV t);
void (*glMultiTexCoord2hvNV)(GLenum target, const GLhalfNV *v);
void (*glMultiTexCoord3hNV)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
void (*glMultiTexCoord3hvNV)(GLenum target, const GLhalfNV *v);
void (*glMultiTexCoord4hNV)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
void (*glMultiTexCoord4hvNV)(GLenum target, const GLhalfNV *v);
void (*glFogCoordhNV)(GLhalfNV fog);
void (*glFogCoordhvNV)(const GLhalfNV *fog);
void (*glSecondaryColor3hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
void (*glSecondaryColor3hvNV)(const GLhalfNV *v);
void (*glVertexWeighthNV)(GLhalfNV weight);
void (*glVertexWeighthvNV)(const GLhalfNV *weight);
void (*glVertexAttrib1hNV)(GLuint index, GLhalfNV x);
void (*glVertexAttrib1hvNV)(GLuint index, const GLhalfNV *v);
void (*glVertexAttrib2hNV)(GLuint index, GLhalfNV x, GLhalfNV y);
void (*glVertexAttrib2hvNV)(GLuint index, const GLhalfNV *v);
void (*glVertexAttrib3hNV)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
void (*glVertexAttrib3hvNV)(GLuint index, const GLhalfNV *v);
void (*glVertexAttrib4hNV)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
void (*glVertexAttrib4hvNV)(GLuint index, const GLhalfNV *v);
void (*glVertexAttribs1hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
void (*glVertexAttribs2hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
void (*glVertexAttribs3hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
void (*glVertexAttribs4hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
void (*glGetInternalformatSampleivNV)(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
void (*glGenOcclusionQueriesNV)(GLsizei n, GLuint *ids);
void (*glDeleteOcclusionQueriesNV)(GLsizei n, const GLuint *ids);
GLboolean (*glIsOcclusionQueryNV)(GLuint id);
void (*glBeginOcclusionQueryNV)(GLuint id);
void (*glEndOcclusionQueryNV)(void);
void (*glGetOcclusionQueryivNV)(GLuint id, GLenum pname, GLint *params);
void (*glGetOcclusionQueryuivNV)(GLuint id, GLenum pname, GLuint *params);
void (*glProgramBufferParametersfvNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);
void (*glProgramBufferParametersIivNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);
void (*glProgramBufferParametersIuivNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);
GLuint (*glGenPathsNV)(GLsizei range);
void (*glDeletePathsNV)(GLuint path, GLsizei range);
GLboolean (*glIsPathNV)(GLuint path);
void (*glPathCommandsNV)(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
void (*glPathCoordsNV)(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);
void (*glPathSubCommandsNV)(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
void (*glPathSubCoordsNV)(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);
void (*glPathStringNV)(GLuint path, GLenum format, GLsizei length, const void *pathString);
void (*glPathGlyphsNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void (*glPathGlyphRangeNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void (*glWeightPathsNV)(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);
void (*glCopyPathNV)(GLuint resultPath, GLuint srcPath);
void (*glInterpolatePathsNV)(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
void (*glTransformPathNV)(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);
void (*glPathParameterivNV)(GLuint path, GLenum pname, const GLint *value);
void (*glPathParameteriNV)(GLuint path, GLenum pname, GLint value);
void (*glPathParameterfvNV)(GLuint path, GLenum pname, const GLfloat *value);
void (*glPathParameterfNV)(GLuint path, GLenum pname, GLfloat value);
void (*glPathDashArrayNV)(GLuint path, GLsizei dashCount, const GLfloat *dashArray);
void (*glPathStencilFuncNV)(GLenum func, GLint ref, GLuint mask);
void (*glPathStencilDepthOffsetNV)(GLfloat factor, GLfloat units);
void (*glStencilFillPathNV)(GLuint path, GLenum fillMode, GLuint mask);
void (*glStencilStrokePathNV)(GLuint path, GLint reference, GLuint mask);
void (*glStencilFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
void (*glStencilStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
void (*glPathCoverDepthFuncNV)(GLenum func);
void (*glCoverFillPathNV)(GLuint path, GLenum coverMode);
void (*glCoverStrokePathNV)(GLuint path, GLenum coverMode);
void (*glCoverFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
void (*glCoverStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
void (*glGetPathParameterivNV)(GLuint path, GLenum pname, GLint *value);
void (*glGetPathParameterfvNV)(GLuint path, GLenum pname, GLfloat *value);
void (*glGetPathCommandsNV)(GLuint path, GLubyte *commands);
void (*glGetPathCoordsNV)(GLuint path, GLfloat *coords);
void (*glGetPathDashArrayNV)(GLuint path, GLfloat *dashArray);
void (*glGetPathMetricsNV)(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
void (*glGetPathMetricRangeNV)(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);
void (*glGetPathSpacingNV)(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
GLboolean (*glIsPointInFillPathNV)(GLuint path, GLuint mask, GLfloat x, GLfloat y);
GLboolean (*glIsPointInStrokePathNV)(GLuint path, GLfloat x, GLfloat y);
GLfloat (*glGetPathLengthNV)(GLuint path, GLsizei startSegment, GLsizei numSegments);
GLboolean (*glPointAlongPathNV)(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);
void (*glMatrixLoad3x2fNV)(GLenum matrixMode, const GLfloat *m);
void (*glMatrixLoad3x3fNV)(GLenum matrixMode, const GLfloat *m);
void (*glMatrixLoadTranspose3x3fNV)(GLenum matrixMode, const GLfloat *m);
void (*glMatrixMult3x2fNV)(GLenum matrixMode, const GLfloat *m);
void (*glMatrixMult3x3fNV)(GLenum matrixMode, const GLfloat *m);
void (*glMatrixMultTranspose3x3fNV)(GLenum matrixMode, const GLfloat *m);
void (*glStencilThenCoverFillPathNV)(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
void (*glStencilThenCoverStrokePathNV)(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
void (*glStencilThenCoverFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
void (*glStencilThenCoverStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
GLenum (*glPathGlyphIndexRangeNV)(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
GLenum (*glPathGlyphIndexArrayNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLenum (*glPathMemoryGlyphIndexArrayNV)(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void (*glProgramPathFragmentInputGenNV)(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
void (*glGetProgramResourcefvNV)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
void (*glPathColorGenNV)(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
void (*glPathTexGenNV)(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
void (*glPathFogGenNV)(GLenum genMode);
void (*glGetPathColorGenivNV)(GLenum color, GLenum pname, GLint *value);
void (*glGetPathColorGenfvNV)(GLenum color, GLenum pname, GLfloat *value);
void (*glGetPathTexGenivNV)(GLenum texCoordSet, GLenum pname, GLint *value);
void (*glGetPathTexGenfvNV)(GLenum texCoordSet, GLenum pname, GLfloat *value);
void (*glPixelDataRangeNV)(GLenum target, GLsizei length, const void *pointer);
void (*glFlushPixelDataRangeNV)(GLenum target);
void (*glPointParameteriNV)(GLenum pname, GLint param);
void (*glPointParameterivNV)(GLenum pname, const GLint *params);
void (*glPresentFrameKeyedNV)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
void (*glPresentFrameDualFillNV)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
void (*glGetVideoivNV)(GLuint video_slot, GLenum pname, GLint *params);
void (*glGetVideouivNV)(GLuint video_slot, GLenum pname, GLuint *params);
void (*glGetVideoi64vNV)(GLuint video_slot, GLenum pname, GLint64EXT *params);
void (*glGetVideoui64vNV)(GLuint video_slot, GLenum pname, GLuint64EXT *params);
void (*glPrimitiveRestartNV)(void);
void (*glPrimitiveRestartIndexNV)(GLuint index);
void (*glCombinerParameterfvNV)(GLenum pname, const GLfloat *params);
void (*glCombinerParameterfNV)(GLenum pname, GLfloat param);
void (*glCombinerParameterivNV)(GLenum pname, const GLint *params);
void (*glCombinerParameteriNV)(GLenum pname, GLint param);
void (*glCombinerInputNV)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void (*glCombinerOutputNV)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
void (*glFinalCombinerInputNV)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void (*glGetCombinerInputParameterfvNV)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
void (*glGetCombinerInputParameterivNV)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
void (*glGetCombinerOutputParameterfvNV)(GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
void (*glGetCombinerOutputParameterivNV)(GLenum stage, GLenum portion, GLenum pname, GLint *params);
void (*glGetFinalCombinerInputParameterfvNV)(GLenum variable, GLenum pname, GLfloat *params);
void (*glGetFinalCombinerInputParameterivNV)(GLenum variable, GLenum pname, GLint *params);
void (*glCombinerStageParameterfvNV)(GLenum stage, GLenum pname, const GLfloat *params);
void (*glGetCombinerStageParameterfvNV)(GLenum stage, GLenum pname, GLfloat *params);
void (*glFramebufferSampleLocationsfvNV)(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
void (*glNamedFramebufferSampleLocationsfvNV)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
void (*glResolveDepthValuesNV)(void);
void (*glMakeBufferResidentNV)(GLenum target, GLenum access);
void (*glMakeBufferNonResidentNV)(GLenum target);
GLboolean (*glIsBufferResidentNV)(GLenum target);
void (*glMakeNamedBufferResidentNV)(GLuint buffer, GLenum access);
void (*glMakeNamedBufferNonResidentNV)(GLuint buffer);
GLboolean (*glIsNamedBufferResidentNV)(GLuint buffer);
void (*glGetBufferParameterui64vNV)(GLenum target, GLenum pname, GLuint64EXT *params);
void (*glGetNamedBufferParameterui64vNV)(GLuint buffer, GLenum pname, GLuint64EXT *params);
void (*glGetIntegerui64vNV)(GLenum value, GLuint64EXT *result);
void (*glUniformui64NV)(GLint location, GLuint64EXT value);
void (*glUniformui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
void (*glProgramUniformui64NV)(GLuint program, GLint location, GLuint64EXT value);
void (*glProgramUniformui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void (*glTextureBarrierNV)(void);
void (*glTexImage2DMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
void (*glTexImage3DMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
void (*glTextureImage2DMultisampleNV)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
void (*glTextureImage3DMultisampleNV)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
void (*glTextureImage2DMultisampleCoverageNV)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
void (*glTextureImage3DMultisampleCoverageNV)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
void (*glBeginTransformFeedbackNV)(GLenum primitiveMode);
void (*glEndTransformFeedbackNV)(void);
void (*glTransformFeedbackAttribsNV)(GLsizei count, const GLint *attribs, GLenum bufferMode);
void (*glBindBufferRangeNV)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void (*glBindBufferOffsetNV)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void (*glBindBufferBaseNV)(GLenum target, GLuint index, GLuint buffer);
void (*glTransformFeedbackVaryingsNV)(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
void (*glActiveVaryingNV)(GLuint program, const GLchar *name);
GLint (*glGetVaryingLocationNV)(GLuint program, const GLchar *name);
void (*glGetActiveVaryingNV)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
void (*glGetTransformFeedbackVaryingNV)(GLuint program, GLuint index, GLint *location);
void (*glTransformFeedbackStreamAttribsNV)(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
void (*glBindTransformFeedbackNV)(GLenum target, GLuint id);
void (*glDeleteTransformFeedbacksNV)(GLsizei n, const GLuint *ids);
void (*glGenTransformFeedbacksNV)(GLsizei n, GLuint *ids);
GLboolean (*glIsTransformFeedbackNV)(GLuint id);
void (*glPauseTransformFeedbackNV)(void);
void (*glResumeTransformFeedbackNV)(void);
void (*glDrawTransformFeedbackNV)(GLenum mode, GLuint id);
void (*glVDPAUInitNV)(const void *vdpDevice, const void *getProcAddress);
void (*glVDPAUFiniNV)(void);
GLvdpauSurfaceNV (*glVDPAURegisterVideoSurfaceNV)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
GLvdpauSurfaceNV (*glVDPAURegisterOutputSurfaceNV)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
GLboolean (*glVDPAUIsSurfaceNV)(GLvdpauSurfaceNV surface);
void (*glVDPAUUnregisterSurfaceNV)(GLvdpauSurfaceNV surface);
void (*glVDPAUGetSurfaceivNV)(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void (*glVDPAUSurfaceAccessNV)(GLvdpauSurfaceNV surface, GLenum access);
void (*glVDPAUMapSurfacesNV)(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
void (*glVDPAUUnmapSurfacesNV)(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);
void (*glFlushVertexArrayRangeNV)(void);
void (*glVertexArrayRangeNV)(GLsizei length, const void *pointer);
void (*glVertexAttribL1i64NV)(GLuint index, GLint64EXT x);
void (*glVertexAttribL2i64NV)(GLuint index, GLint64EXT x, GLint64EXT y);
void (*glVertexAttribL3i64NV)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
void (*glVertexAttribL4i64NV)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
void (*glVertexAttribL1i64vNV)(GLuint index, const GLint64EXT *v);
void (*glVertexAttribL2i64vNV)(GLuint index, const GLint64EXT *v);
void (*glVertexAttribL3i64vNV)(GLuint index, const GLint64EXT *v);
void (*glVertexAttribL4i64vNV)(GLuint index, const GLint64EXT *v);
void (*glVertexAttribL1ui64NV)(GLuint index, GLuint64EXT x);
void (*glVertexAttribL2ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y);
void (*glVertexAttribL3ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void (*glVertexAttribL4ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void (*glVertexAttribL1ui64vNV)(GLuint index, const GLuint64EXT *v);
void (*glVertexAttribL2ui64vNV)(GLuint index, const GLuint64EXT *v);
void (*glVertexAttribL3ui64vNV)(GLuint index, const GLuint64EXT *v);
void (*glVertexAttribL4ui64vNV)(GLuint index, const GLuint64EXT *v);
void (*glGetVertexAttribLi64vNV)(GLuint index, GLenum pname, GLint64EXT *params);
void (*glGetVertexAttribLui64vNV)(GLuint index, GLenum pname, GLuint64EXT *params);
void (*glVertexAttribLFormatNV)(GLuint index, GLint size, GLenum type, GLsizei stride);
void (*glBufferAddressRangeNV)(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
void (*glVertexFormatNV)(GLint size, GLenum type, GLsizei stride);
void (*glNormalFormatNV)(GLenum type, GLsizei stride);
void (*glColorFormatNV)(GLint size, GLenum type, GLsizei stride);
void (*glIndexFormatNV)(GLenum type, GLsizei stride);
void (*glTexCoordFormatNV)(GLint size, GLenum type, GLsizei stride);
void (*glEdgeFlagFormatNV)(GLsizei stride);
void (*glSecondaryColorFormatNV)(GLint size, GLenum type, GLsizei stride);
void (*glFogCoordFormatNV)(GLenum type, GLsizei stride);
void (*glVertexAttribFormatNV)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
void (*glVertexAttribIFormatNV)(GLuint index, GLint size, GLenum type, GLsizei stride);
void (*glGetIntegerui64i_vNV)(GLenum value, GLuint index, GLuint64EXT *result);
GLboolean (*glAreProgramsResidentNV)(GLsizei n, const GLuint *programs, GLboolean *residences);
void (*glBindProgramNV)(GLenum target, GLuint id);
void (*glDeleteProgramsNV)(GLsizei n, const GLuint *programs);
void (*glExecuteProgramNV)(GLenum target, GLuint id, const GLfloat *params);
void (*glGenProgramsNV)(GLsizei n, GLuint *programs);
void (*glGetProgramParameterdvNV)(GLenum target, GLuint index, GLenum pname, GLdouble *params);
void (*glGetProgramParameterfvNV)(GLenum target, GLuint index, GLenum pname, GLfloat *params);
void (*glGetProgramivNV)(GLuint id, GLenum pname, GLint *params);
void (*glGetProgramStringNV)(GLuint id, GLenum pname, GLubyte *program);
void (*glGetTrackMatrixivNV)(GLenum target, GLuint address, GLenum pname, GLint *params);
void (*glGetVertexAttribdvNV)(GLuint index, GLenum pname, GLdouble *params);
void (*glGetVertexAttribfvNV)(GLuint index, GLenum pname, GLfloat *params);
void (*glGetVertexAttribivNV)(GLuint index, GLenum pname, GLint *params);
void (*glGetVertexAttribPointervNV)(GLuint index, GLenum pname, void **pointer);
GLboolean (*glIsProgramNV)(GLuint id);
void (*glLoadProgramNV)(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
void (*glProgramParameter4dNV)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glProgramParameter4dvNV)(GLenum target, GLuint index, const GLdouble *v);
void (*glProgramParameter4fNV)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glProgramParameter4fvNV)(GLenum target, GLuint index, const GLfloat *v);
void (*glProgramParameters4dvNV)(GLenum target, GLuint index, GLsizei count, const GLdouble *v);
void (*glProgramParameters4fvNV)(GLenum target, GLuint index, GLsizei count, const GLfloat *v);
void (*glRequestResidentProgramsNV)(GLsizei n, const GLuint *programs);
void (*glTrackMatrixNV)(GLenum target, GLuint address, GLenum matrix, GLenum transform);
void (*glVertexAttribPointerNV)(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);
void (*glVertexAttrib1dNV)(GLuint index, GLdouble x);
void (*glVertexAttrib1dvNV)(GLuint index, const GLdouble *v);
void (*glVertexAttrib1fNV)(GLuint index, GLfloat x);
void (*glVertexAttrib1fvNV)(GLuint index, const GLfloat *v);
void (*glVertexAttrib1sNV)(GLuint index, GLshort x);
void (*glVertexAttrib1svNV)(GLuint index, const GLshort *v);
void (*glVertexAttrib2dNV)(GLuint index, GLdouble x, GLdouble y);
void (*glVertexAttrib2dvNV)(GLuint index, const GLdouble *v);
void (*glVertexAttrib2fNV)(GLuint index, GLfloat x, GLfloat y);
void (*glVertexAttrib2fvNV)(GLuint index, const GLfloat *v);
void (*glVertexAttrib2sNV)(GLuint index, GLshort x, GLshort y);
void (*glVertexAttrib2svNV)(GLuint index, const GLshort *v);
void (*glVertexAttrib3dNV)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void (*glVertexAttrib3dvNV)(GLuint index, const GLdouble *v);
void (*glVertexAttrib3fNV)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void (*glVertexAttrib3fvNV)(GLuint index, const GLfloat *v);
void (*glVertexAttrib3sNV)(GLuint index, GLshort x, GLshort y, GLshort z);
void (*glVertexAttrib3svNV)(GLuint index, const GLshort *v);
void (*glVertexAttrib4dNV)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void (*glVertexAttrib4dvNV)(GLuint index, const GLdouble *v);
void (*glVertexAttrib4fNV)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glVertexAttrib4fvNV)(GLuint index, const GLfloat *v);
void (*glVertexAttrib4sNV)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void (*glVertexAttrib4svNV)(GLuint index, const GLshort *v);
void (*glVertexAttrib4ubNV)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void (*glVertexAttrib4ubvNV)(GLuint index, const GLubyte *v);
void (*glVertexAttribs1dvNV)(GLuint index, GLsizei count, const GLdouble *v);
void (*glVertexAttribs1fvNV)(GLuint index, GLsizei count, const GLfloat *v);
void (*glVertexAttribs1svNV)(GLuint index, GLsizei count, const GLshort *v);
void (*glVertexAttribs2dvNV)(GLuint index, GLsizei count, const GLdouble *v);
void (*glVertexAttribs2fvNV)(GLuint index, GLsizei count, const GLfloat *v);
void (*glVertexAttribs2svNV)(GLuint index, GLsizei count, const GLshort *v);
void (*glVertexAttribs3dvNV)(GLuint index, GLsizei count, const GLdouble *v);
void (*glVertexAttribs3fvNV)(GLuint index, GLsizei count, const GLfloat *v);
void (*glVertexAttribs3svNV)(GLuint index, GLsizei count, const GLshort *v);
void (*glVertexAttribs4dvNV)(GLuint index, GLsizei count, const GLdouble *v);
void (*glVertexAttribs4fvNV)(GLuint index, GLsizei count, const GLfloat *v);
void (*glVertexAttribs4svNV)(GLuint index, GLsizei count, const GLshort *v);
void (*glVertexAttribs4ubvNV)(GLuint index, GLsizei count, const GLubyte *v);
void (*glVertexAttribI1iEXT)(GLuint index, GLint x);
void (*glVertexAttribI2iEXT)(GLuint index, GLint x, GLint y);
void (*glVertexAttribI3iEXT)(GLuint index, GLint x, GLint y, GLint z);
void (*glVertexAttribI4iEXT)(GLuint index, GLint x, GLint y, GLint z, GLint w);
void (*glVertexAttribI1uiEXT)(GLuint index, GLuint x);
void (*glVertexAttribI2uiEXT)(GLuint index, GLuint x, GLuint y);
void (*glVertexAttribI3uiEXT)(GLuint index, GLuint x, GLuint y, GLuint z);
void (*glVertexAttribI4uiEXT)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void (*glVertexAttribI1ivEXT)(GLuint index, const GLint *v);
void (*glVertexAttribI2ivEXT)(GLuint index, const GLint *v);
void (*glVertexAttribI3ivEXT)(GLuint index, const GLint *v);
void (*glVertexAttribI4ivEXT)(GLuint index, const GLint *v);
void (*glVertexAttribI1uivEXT)(GLuint index, const GLuint *v);
void (*glVertexAttribI2uivEXT)(GLuint index, const GLuint *v);
void (*glVertexAttribI3uivEXT)(GLuint index, const GLuint *v);
void (*glVertexAttribI4uivEXT)(GLuint index, const GLuint *v);
void (*glVertexAttribI4bvEXT)(GLuint index, const GLbyte *v);
void (*glVertexAttribI4svEXT)(GLuint index, const GLshort *v);
void (*glVertexAttribI4ubvEXT)(GLuint index, const GLubyte *v);
void (*glVertexAttribI4usvEXT)(GLuint index, const GLushort *v);
void (*glVertexAttribIPointerEXT)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
void (*glGetVertexAttribIivEXT)(GLuint index, GLenum pname, GLint *params);
void (*glGetVertexAttribIuivEXT)(GLuint index, GLenum pname, GLuint *params);
void (*glBeginVideoCaptureNV)(GLuint video_capture_slot);
void (*glBindVideoCaptureStreamBufferNV)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
void (*glBindVideoCaptureStreamTextureNV)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
void (*glEndVideoCaptureNV)(GLuint video_capture_slot);
void (*glGetVideoCaptureivNV)(GLuint video_capture_slot, GLenum pname, GLint *params);
void (*glGetVideoCaptureStreamivNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);
void (*glGetVideoCaptureStreamfvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);
void (*glGetVideoCaptureStreamdvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);
GLenum (*glVideoCaptureNV)(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);
void (*glVideoCaptureStreamParameterivNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);
void (*glVideoCaptureStreamParameterfvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);
void (*glVideoCaptureStreamParameterdvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);
void (*glHintPGI)(GLenum target, GLint mode);
void (*glDetailTexFuncSGIS)(GLenum target, GLsizei n, const GLfloat *points);
void (*glGetDetailTexFuncSGIS)(GLenum target, GLfloat *points);
void (*glFogFuncSGIS)(GLsizei n, const GLfloat *points);
void (*glGetFogFuncSGIS)(GLfloat *points);
void (*glSampleMaskSGIS)(GLclampf value, GLboolean invert);
void (*glSamplePatternSGIS)(GLenum pattern);
void (*glPixelTexGenParameteriSGIS)(GLenum pname, GLint param);
void (*glPixelTexGenParameterivSGIS)(GLenum pname, const GLint *params);
void (*glPixelTexGenParameterfSGIS)(GLenum pname, GLfloat param);
void (*glPixelTexGenParameterfvSGIS)(GLenum pname, const GLfloat *params);
void (*glGetPixelTexGenParameterivSGIS)(GLenum pname, GLint *params);
void (*glGetPixelTexGenParameterfvSGIS)(GLenum pname, GLfloat *params);
void (*glPointParameterfSGIS)(GLenum pname, GLfloat param);
void (*glPointParameterfvSGIS)(GLenum pname, const GLfloat *params);
void (*glSharpenTexFuncSGIS)(GLenum target, GLsizei n, const GLfloat *points);
void (*glGetSharpenTexFuncSGIS)(GLenum target, GLfloat *points);
void (*glTexImage4DSGIS)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);
void (*glTexSubImage4DSGIS)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);
void (*glTextureColorMaskSGIS)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void (*glGetTexFilterFuncSGIS)(GLenum target, GLenum filter, GLfloat *weights);
void (*glTexFilterFuncSGIS)(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);
void (*glAsyncMarkerSGIX)(GLuint marker);
GLint (*glFinishAsyncSGIX)(GLuint *markerp);
GLint (*glPollAsyncSGIX)(GLuint *markerp);
GLuint (*glGenAsyncMarkersSGIX)(GLsizei range);
void (*glDeleteAsyncMarkersSGIX)(GLuint marker, GLsizei range);
GLboolean (*glIsAsyncMarkerSGIX)(GLuint marker);
void (*glFlushRasterSGIX)(void);
void (*glFragmentColorMaterialSGIX)(GLenum face, GLenum mode);
void (*glFragmentLightfSGIX)(GLenum light, GLenum pname, GLfloat param);
void (*glFragmentLightfvSGIX)(GLenum light, GLenum pname, const GLfloat *params);
void (*glFragmentLightiSGIX)(GLenum light, GLenum pname, GLint param);
void (*glFragmentLightivSGIX)(GLenum light, GLenum pname, const GLint *params);
void (*glFragmentLightModelfSGIX)(GLenum pname, GLfloat param);
void (*glFragmentLightModelfvSGIX)(GLenum pname, const GLfloat *params);
void (*glFragmentLightModeliSGIX)(GLenum pname, GLint param);
void (*glFragmentLightModelivSGIX)(GLenum pname, const GLint *params);
void (*glFragmentMaterialfSGIX)(GLenum face, GLenum pname, GLfloat param);
void (*glFragmentMaterialfvSGIX)(GLenum face, GLenum pname, const GLfloat *params);
void (*glFragmentMaterialiSGIX)(GLenum face, GLenum pname, GLint param);
void (*glFragmentMaterialivSGIX)(GLenum face, GLenum pname, const GLint *params);
void (*glGetFragmentLightfvSGIX)(GLenum light, GLenum pname, GLfloat *params);
void (*glGetFragmentLightivSGIX)(GLenum light, GLenum pname, GLint *params);
void (*glGetFragmentMaterialfvSGIX)(GLenum face, GLenum pname, GLfloat *params);
void (*glGetFragmentMaterialivSGIX)(GLenum face, GLenum pname, GLint *params);
void (*glLightEnviSGIX)(GLenum pname, GLint param);
void (*glFrameZoomSGIX)(GLint factor);
void (*glIglooInterfaceSGIX)(GLenum pname, const void *params);
GLint (*glGetInstrumentsSGIX)(void);
void (*glInstrumentsBufferSGIX)(GLsizei size, GLint *buffer);
GLint (*glPollInstrumentsSGIX)(GLint *marker_p);
void (*glReadInstrumentsSGIX)(GLint marker);
void (*glStartInstrumentsSGIX)(void);
void (*glStopInstrumentsSGIX)(GLint marker);
void (*glGetListParameterfvSGIX)(GLuint list, GLenum pname, GLfloat *params);
void (*glGetListParameterivSGIX)(GLuint list, GLenum pname, GLint *params);
void (*glListParameterfSGIX)(GLuint list, GLenum pname, GLfloat param);
void (*glListParameterfvSGIX)(GLuint list, GLenum pname, const GLfloat *params);
void (*glListParameteriSGIX)(GLuint list, GLenum pname, GLint param);
void (*glListParameterivSGIX)(GLuint list, GLenum pname, const GLint *params);
void (*glPixelTexGenSGIX)(GLenum mode);
void (*glDeformationMap3dSGIX)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);
void (*glDeformationMap3fSGIX)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);
void (*glDeformSGIX)(GLbitfield mask);
void (*glLoadIdentityDeformationMapSGIX)(GLbitfield mask);
void (*glReferencePlaneSGIX)(const GLdouble *equation);
void (*glSpriteParameterfSGIX)(GLenum pname, GLfloat param);
void (*glSpriteParameterfvSGIX)(GLenum pname, const GLfloat *params);
void (*glSpriteParameteriSGIX)(GLenum pname, GLint param);
void (*glSpriteParameterivSGIX)(GLenum pname, const GLint *params);
void (*glTagSampleBufferSGIX)(void);
void (*glColorTableSGI)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
void (*glColorTableParameterfvSGI)(GLenum target, GLenum pname, const GLfloat *params);
void (*glColorTableParameterivSGI)(GLenum target, GLenum pname, const GLint *params);
void (*glCopyColorTableSGI)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void (*glGetColorTableSGI)(GLenum target, GLenum format, GLenum type, void *table);
void (*glGetColorTableParameterfvSGI)(GLenum target, GLenum pname, GLfloat *params);
void (*glGetColorTableParameterivSGI)(GLenum target, GLenum pname, GLint *params);
void (*glFinishTextureSUNX)(void);
void (*glGlobalAlphaFactorbSUN)(GLbyte factor);
void (*glGlobalAlphaFactorsSUN)(GLshort factor);
void (*glGlobalAlphaFactoriSUN)(GLint factor);
void (*glGlobalAlphaFactorfSUN)(GLfloat factor);
void (*glGlobalAlphaFactordSUN)(GLdouble factor);
void (*glGlobalAlphaFactorubSUN)(GLubyte factor);
void (*glGlobalAlphaFactorusSUN)(GLushort factor);
void (*glGlobalAlphaFactoruiSUN)(GLuint factor);
void (*glDrawMeshArraysSUN)(GLenum mode, GLint first, GLsizei count, GLsizei width);
void (*glReplacementCodeuiSUN)(GLuint code);
void (*glReplacementCodeusSUN)(GLushort code);
void (*glReplacementCodeubSUN)(GLubyte code);
void (*glReplacementCodeuivSUN)(const GLuint *code);
void (*glReplacementCodeusvSUN)(const GLushort *code);
void (*glReplacementCodeubvSUN)(const GLubyte *code);
void (*glReplacementCodePointerSUN)(GLenum type, GLsizei stride, const void **pointer);
void (*glColor4ubVertex2fSUN)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
void (*glColor4ubVertex2fvSUN)(const GLubyte *c, const GLfloat *v);
void (*glColor4ubVertex3fSUN)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
void (*glColor4ubVertex3fvSUN)(const GLubyte *c, const GLfloat *v);
void (*glColor3fVertex3fSUN)(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
void (*glColor3fVertex3fvSUN)(const GLfloat *c, const GLfloat *v);
void (*glNormal3fVertex3fSUN)(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void (*glNormal3fVertex3fvSUN)(const GLfloat *n, const GLfloat *v);
void (*glColor4fNormal3fVertex3fSUN)(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void (*glColor4fNormal3fVertex3fvSUN)(const GLfloat *c, const GLfloat *n, const GLfloat *v);
void (*glTexCoord2fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
void (*glTexCoord2fVertex3fvSUN)(const GLfloat *tc, const GLfloat *v);
void (*glTexCoord4fVertex4fSUN)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glTexCoord4fVertex4fvSUN)(const GLfloat *tc, const GLfloat *v);
void (*glTexCoord2fColor4ubVertex3fSUN)(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
void (*glTexCoord2fColor4ubVertex3fvSUN)(const GLfloat *tc, const GLubyte *c, const GLfloat *v);
void (*glTexCoord2fColor3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
void (*glTexCoord2fColor3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *v);
void (*glTexCoord2fNormal3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void (*glTexCoord2fNormal3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *n, const GLfloat *v);
void (*glTexCoord2fColor4fNormal3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void (*glTexCoord2fColor4fNormal3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
void (*glTexCoord4fColor4fNormal3fVertex4fSUN)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (*glTexCoord4fColor4fNormal3fVertex4fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
void (*glReplacementCodeuiVertex3fSUN)(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
void (*glReplacementCodeuiVertex3fvSUN)(const GLuint *rc, const GLfloat *v);
void (*glReplacementCodeuiColor4ubVertex3fSUN)(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
void (*glReplacementCodeuiColor4ubVertex3fvSUN)(const GLuint *rc, const GLubyte *c, const GLfloat *v);
void (*glReplacementCodeuiColor3fVertex3fSUN)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
void (*glReplacementCodeuiColor3fVertex3fvSUN)(const GLuint *rc, const GLfloat *c, const GLfloat *v);
void (*glReplacementCodeuiNormal3fVertex3fSUN)(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void (*glReplacementCodeuiNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *n, const GLfloat *v);
void (*glReplacementCodeuiColor4fNormal3fVertex3fSUN)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void (*glReplacementCodeuiColor4fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
void (*glReplacementCodeuiTexCoord2fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
void (*glReplacementCodeuiTexCoord2fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *v);
void (*glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void (*glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
void (*glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void (*glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
void WGLGrabberInit()
{
	glDrawRangeElements = (void (*)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))wglGetProcAddress("glDrawRangeElements");
	glTexImage3D = (void (*)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTexImage3D");
	glTexSubImage3D = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTexSubImage3D");
	glCopyTexSubImage3D = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyTexSubImage3D");
	glActiveTexture = (void (*)(GLenum texture))wglGetProcAddress("glActiveTexture");
	glSampleCoverage = (void (*)(GLfloat value, GLboolean invert))wglGetProcAddress("glSampleCoverage");
	glCompressedTexImage3D = (void (*)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexImage3D");
	glCompressedTexImage2D = (void (*)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexImage2D");
	glCompressedTexImage1D = (void (*)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexImage1D");
	glCompressedTexSubImage3D = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexSubImage3D");
	glCompressedTexSubImage2D = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexSubImage2D");
	glCompressedTexSubImage1D = (void (*)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexSubImage1D");
	glGetCompressedTexImage = (void (*)(GLenum target, GLint level, void *img))wglGetProcAddress("glGetCompressedTexImage");
	glClientActiveTexture = (void (*)(GLenum texture))wglGetProcAddress("glClientActiveTexture");
	glMultiTexCoord1d = (void (*)(GLenum target, GLdouble s))wglGetProcAddress("glMultiTexCoord1d");
	glMultiTexCoord1dv = (void (*)(GLenum target, const GLdouble *v))wglGetProcAddress("glMultiTexCoord1dv");
	glMultiTexCoord1f = (void (*)(GLenum target, GLfloat s))wglGetProcAddress("glMultiTexCoord1f");
	glMultiTexCoord1fv = (void (*)(GLenum target, const GLfloat *v))wglGetProcAddress("glMultiTexCoord1fv");
	glMultiTexCoord1i = (void (*)(GLenum target, GLint s))wglGetProcAddress("glMultiTexCoord1i");
	glMultiTexCoord1iv = (void (*)(GLenum target, const GLint *v))wglGetProcAddress("glMultiTexCoord1iv");
	glMultiTexCoord1s = (void (*)(GLenum target, GLshort s))wglGetProcAddress("glMultiTexCoord1s");
	glMultiTexCoord1sv = (void (*)(GLenum target, const GLshort *v))wglGetProcAddress("glMultiTexCoord1sv");
	glMultiTexCoord2d = (void (*)(GLenum target, GLdouble s, GLdouble t))wglGetProcAddress("glMultiTexCoord2d");
	glMultiTexCoord2dv = (void (*)(GLenum target, const GLdouble *v))wglGetProcAddress("glMultiTexCoord2dv");
	glMultiTexCoord2f = (void (*)(GLenum target, GLfloat s, GLfloat t))wglGetProcAddress("glMultiTexCoord2f");
	glMultiTexCoord2fv = (void (*)(GLenum target, const GLfloat *v))wglGetProcAddress("glMultiTexCoord2fv");
	glMultiTexCoord2i = (void (*)(GLenum target, GLint s, GLint t))wglGetProcAddress("glMultiTexCoord2i");
	glMultiTexCoord2iv = (void (*)(GLenum target, const GLint *v))wglGetProcAddress("glMultiTexCoord2iv");
	glMultiTexCoord2s = (void (*)(GLenum target, GLshort s, GLshort t))wglGetProcAddress("glMultiTexCoord2s");
	glMultiTexCoord2sv = (void (*)(GLenum target, const GLshort *v))wglGetProcAddress("glMultiTexCoord2sv");
	glMultiTexCoord3d = (void (*)(GLenum target, GLdouble s, GLdouble t, GLdouble r))wglGetProcAddress("glMultiTexCoord3d");
	glMultiTexCoord3dv = (void (*)(GLenum target, const GLdouble *v))wglGetProcAddress("glMultiTexCoord3dv");
	glMultiTexCoord3f = (void (*)(GLenum target, GLfloat s, GLfloat t, GLfloat r))wglGetProcAddress("glMultiTexCoord3f");
	glMultiTexCoord3fv = (void (*)(GLenum target, const GLfloat *v))wglGetProcAddress("glMultiTexCoord3fv");
	glMultiTexCoord3i = (void (*)(GLenum target, GLint s, GLint t, GLint r))wglGetProcAddress("glMultiTexCoord3i");
	glMultiTexCoord3iv = (void (*)(GLenum target, const GLint *v))wglGetProcAddress("glMultiTexCoord3iv");
	glMultiTexCoord3s = (void (*)(GLenum target, GLshort s, GLshort t, GLshort r))wglGetProcAddress("glMultiTexCoord3s");
	glMultiTexCoord3sv = (void (*)(GLenum target, const GLshort *v))wglGetProcAddress("glMultiTexCoord3sv");
	glMultiTexCoord4d = (void (*)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q))wglGetProcAddress("glMultiTexCoord4d");
	glMultiTexCoord4dv = (void (*)(GLenum target, const GLdouble *v))wglGetProcAddress("glMultiTexCoord4dv");
	glMultiTexCoord4f = (void (*)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q))wglGetProcAddress("glMultiTexCoord4f");
	glMultiTexCoord4fv = (void (*)(GLenum target, const GLfloat *v))wglGetProcAddress("glMultiTexCoord4fv");
	glMultiTexCoord4i = (void (*)(GLenum target, GLint s, GLint t, GLint r, GLint q))wglGetProcAddress("glMultiTexCoord4i");
	glMultiTexCoord4iv = (void (*)(GLenum target, const GLint *v))wglGetProcAddress("glMultiTexCoord4iv");
	glMultiTexCoord4s = (void (*)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q))wglGetProcAddress("glMultiTexCoord4s");
	glMultiTexCoord4sv = (void (*)(GLenum target, const GLshort *v))wglGetProcAddress("glMultiTexCoord4sv");
	glLoadTransposeMatrixf = (void (*)(const GLfloat *m))wglGetProcAddress("glLoadTransposeMatrixf");
	glLoadTransposeMatrixd = (void (*)(const GLdouble *m))wglGetProcAddress("glLoadTransposeMatrixd");
	glMultTransposeMatrixf = (void (*)(const GLfloat *m))wglGetProcAddress("glMultTransposeMatrixf");
	glMultTransposeMatrixd = (void (*)(const GLdouble *m))wglGetProcAddress("glMultTransposeMatrixd");
	glBlendFuncSeparate = (void (*)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))wglGetProcAddress("glBlendFuncSeparate");
	glMultiDrawArrays = (void (*)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount))wglGetProcAddress("glMultiDrawArrays");
	glMultiDrawElements = (void (*)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount))wglGetProcAddress("glMultiDrawElements");
	glPointParameterf = (void (*)(GLenum pname, GLfloat param))wglGetProcAddress("glPointParameterf");
	glPointParameterfv = (void (*)(GLenum pname, const GLfloat *params))wglGetProcAddress("glPointParameterfv");
	glPointParameteri = (void (*)(GLenum pname, GLint param))wglGetProcAddress("glPointParameteri");
	glPointParameteriv = (void (*)(GLenum pname, const GLint *params))wglGetProcAddress("glPointParameteriv");
	glFogCoordf = (void (*)(GLfloat coord))wglGetProcAddress("glFogCoordf");
	glFogCoordfv = (void (*)(const GLfloat *coord))wglGetProcAddress("glFogCoordfv");
	glFogCoordd = (void (*)(GLdouble coord))wglGetProcAddress("glFogCoordd");
	glFogCoorddv = (void (*)(const GLdouble *coord))wglGetProcAddress("glFogCoorddv");
	glFogCoordPointer = (void (*)(GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glFogCoordPointer");
	glSecondaryColor3b = (void (*)(GLbyte red, GLbyte green, GLbyte blue))wglGetProcAddress("glSecondaryColor3b");
	glSecondaryColor3bv = (void (*)(const GLbyte *v))wglGetProcAddress("glSecondaryColor3bv");
	glSecondaryColor3d = (void (*)(GLdouble red, GLdouble green, GLdouble blue))wglGetProcAddress("glSecondaryColor3d");
	glSecondaryColor3dv = (void (*)(const GLdouble *v))wglGetProcAddress("glSecondaryColor3dv");
	glSecondaryColor3f = (void (*)(GLfloat red, GLfloat green, GLfloat blue))wglGetProcAddress("glSecondaryColor3f");
	glSecondaryColor3fv = (void (*)(const GLfloat *v))wglGetProcAddress("glSecondaryColor3fv");
	glSecondaryColor3i = (void (*)(GLint red, GLint green, GLint blue))wglGetProcAddress("glSecondaryColor3i");
	glSecondaryColor3iv = (void (*)(const GLint *v))wglGetProcAddress("glSecondaryColor3iv");
	glSecondaryColor3s = (void (*)(GLshort red, GLshort green, GLshort blue))wglGetProcAddress("glSecondaryColor3s");
	glSecondaryColor3sv = (void (*)(const GLshort *v))wglGetProcAddress("glSecondaryColor3sv");
	glSecondaryColor3ub = (void (*)(GLubyte red, GLubyte green, GLubyte blue))wglGetProcAddress("glSecondaryColor3ub");
	glSecondaryColor3ubv = (void (*)(const GLubyte *v))wglGetProcAddress("glSecondaryColor3ubv");
	glSecondaryColor3ui = (void (*)(GLuint red, GLuint green, GLuint blue))wglGetProcAddress("glSecondaryColor3ui");
	glSecondaryColor3uiv = (void (*)(const GLuint *v))wglGetProcAddress("glSecondaryColor3uiv");
	glSecondaryColor3us = (void (*)(GLushort red, GLushort green, GLushort blue))wglGetProcAddress("glSecondaryColor3us");
	glSecondaryColor3usv = (void (*)(const GLushort *v))wglGetProcAddress("glSecondaryColor3usv");
	glSecondaryColorPointer = (void (*)(GLint size, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glSecondaryColorPointer");
	glWindowPos2d = (void (*)(GLdouble x, GLdouble y))wglGetProcAddress("glWindowPos2d");
	glWindowPos2dv = (void (*)(const GLdouble *v))wglGetProcAddress("glWindowPos2dv");
	glWindowPos2f = (void (*)(GLfloat x, GLfloat y))wglGetProcAddress("glWindowPos2f");
	glWindowPos2fv = (void (*)(const GLfloat *v))wglGetProcAddress("glWindowPos2fv");
	glWindowPos2i = (void (*)(GLint x, GLint y))wglGetProcAddress("glWindowPos2i");
	glWindowPos2iv = (void (*)(const GLint *v))wglGetProcAddress("glWindowPos2iv");
	glWindowPos2s = (void (*)(GLshort x, GLshort y))wglGetProcAddress("glWindowPos2s");
	glWindowPos2sv = (void (*)(const GLshort *v))wglGetProcAddress("glWindowPos2sv");
	glWindowPos3d = (void (*)(GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glWindowPos3d");
	glWindowPos3dv = (void (*)(const GLdouble *v))wglGetProcAddress("glWindowPos3dv");
	glWindowPos3f = (void (*)(GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glWindowPos3f");
	glWindowPos3fv = (void (*)(const GLfloat *v))wglGetProcAddress("glWindowPos3fv");
	glWindowPos3i = (void (*)(GLint x, GLint y, GLint z))wglGetProcAddress("glWindowPos3i");
	glWindowPos3iv = (void (*)(const GLint *v))wglGetProcAddress("glWindowPos3iv");
	glWindowPos3s = (void (*)(GLshort x, GLshort y, GLshort z))wglGetProcAddress("glWindowPos3s");
	glWindowPos3sv = (void (*)(const GLshort *v))wglGetProcAddress("glWindowPos3sv");
	glBlendColor = (void (*)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))wglGetProcAddress("glBlendColor");
	glBlendEquation = (void (*)(GLenum mode))wglGetProcAddress("glBlendEquation");
	glGenQueries = (void (*)(GLsizei n, GLuint *ids))wglGetProcAddress("glGenQueries");
	glDeleteQueries = (void (*)(GLsizei n, const GLuint *ids))wglGetProcAddress("glDeleteQueries");
	glIsQuery = (GLboolean (*)(GLuint id))wglGetProcAddress("glIsQuery");
	glBeginQuery = (void (*)(GLenum target, GLuint id))wglGetProcAddress("glBeginQuery");
	glEndQuery = (void (*)(GLenum target))wglGetProcAddress("glEndQuery");
	glGetQueryiv = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetQueryiv");
	glGetQueryObjectiv = (void (*)(GLuint id, GLenum pname, GLint *params))wglGetProcAddress("glGetQueryObjectiv");
	glGetQueryObjectuiv = (void (*)(GLuint id, GLenum pname, GLuint *params))wglGetProcAddress("glGetQueryObjectuiv");
	glBindBuffer = (void (*)(GLenum target, GLuint buffer))wglGetProcAddress("glBindBuffer");
	glDeleteBuffers = (void (*)(GLsizei n, const GLuint *buffers))wglGetProcAddress("glDeleteBuffers");
	glGenBuffers = (void (*)(GLsizei n, GLuint *buffers))wglGetProcAddress("glGenBuffers");
	glIsBuffer = (GLboolean (*)(GLuint buffer))wglGetProcAddress("glIsBuffer");
	glBufferData = (void (*)(GLenum target, GLsizeiptr size, const void *data, GLenum usage))wglGetProcAddress("glBufferData");
	glBufferSubData = (void (*)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data))wglGetProcAddress("glBufferSubData");
	glGetBufferSubData = (void (*)(GLenum target, GLintptr offset, GLsizeiptr size, void *data))wglGetProcAddress("glGetBufferSubData");
	glUnmapBuffer = (GLboolean (*)(GLenum target))wglGetProcAddress("glUnmapBuffer");
	glGetBufferParameteriv = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetBufferParameteriv");
	glGetBufferPointerv = (void (*)(GLenum target, GLenum pname, void **params))wglGetProcAddress("glGetBufferPointerv");
	glBlendEquationSeparate = (void (*)(GLenum modeRGB, GLenum modeAlpha))wglGetProcAddress("glBlendEquationSeparate");
	glDrawBuffers = (void (*)(GLsizei n, const GLenum *bufs))wglGetProcAddress("glDrawBuffers");
	glStencilOpSeparate = (void (*)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))wglGetProcAddress("glStencilOpSeparate");
	glStencilFuncSeparate = (void (*)(GLenum face, GLenum func, GLint ref, GLuint mask))wglGetProcAddress("glStencilFuncSeparate");
	glStencilMaskSeparate = (void (*)(GLenum face, GLuint mask))wglGetProcAddress("glStencilMaskSeparate");
	glAttachShader = (void (*)(GLuint program, GLuint shader))wglGetProcAddress("glAttachShader");
	glBindAttribLocation = (void (*)(GLuint program, GLuint index, const GLchar *name))wglGetProcAddress("glBindAttribLocation");
	glCompileShader = (void (*)(GLuint shader))wglGetProcAddress("glCompileShader");
	glCreateProgram = (GLuint (*)(void))wglGetProcAddress("glCreateProgram");
	glCreateShader = (GLuint (*)(GLenum type))wglGetProcAddress("glCreateShader");
	glDeleteProgram = (void (*)(GLuint program))wglGetProcAddress("glDeleteProgram");
	glDeleteShader = (void (*)(GLuint shader))wglGetProcAddress("glDeleteShader");
	glDetachShader = (void (*)(GLuint program, GLuint shader))wglGetProcAddress("glDetachShader");
	glDisableVertexAttribArray = (void (*)(GLuint index))wglGetProcAddress("glDisableVertexAttribArray");
	glEnableVertexAttribArray = (void (*)(GLuint index))wglGetProcAddress("glEnableVertexAttribArray");
	glGetActiveAttrib = (void (*)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))wglGetProcAddress("glGetActiveAttrib");
	glGetActiveUniform = (void (*)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))wglGetProcAddress("glGetActiveUniform");
	glGetAttachedShaders = (void (*)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))wglGetProcAddress("glGetAttachedShaders");
	glGetAttribLocation = (GLint (*)(GLuint program, const GLchar *name))wglGetProcAddress("glGetAttribLocation");
	glGetProgramiv = (void (*)(GLuint program, GLenum pname, GLint *params))wglGetProcAddress("glGetProgramiv");
	glGetProgramInfoLog = (void (*)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))wglGetProcAddress("glGetProgramInfoLog");
	glGetShaderiv = (void (*)(GLuint shader, GLenum pname, GLint *params))wglGetProcAddress("glGetShaderiv");
	glGetShaderInfoLog = (void (*)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))wglGetProcAddress("glGetShaderInfoLog");
	glGetShaderSource = (void (*)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))wglGetProcAddress("glGetShaderSource");
	glGetUniformLocation = (GLint (*)(GLuint program, const GLchar *name))wglGetProcAddress("glGetUniformLocation");
	glGetUniformfv = (void (*)(GLuint program, GLint location, GLfloat *params))wglGetProcAddress("glGetUniformfv");
	glGetUniformiv = (void (*)(GLuint program, GLint location, GLint *params))wglGetProcAddress("glGetUniformiv");
	glGetVertexAttribdv = (void (*)(GLuint index, GLenum pname, GLdouble *params))wglGetProcAddress("glGetVertexAttribdv");
	glGetVertexAttribfv = (void (*)(GLuint index, GLenum pname, GLfloat *params))wglGetProcAddress("glGetVertexAttribfv");
	glGetVertexAttribiv = (void (*)(GLuint index, GLenum pname, GLint *params))wglGetProcAddress("glGetVertexAttribiv");
	glGetVertexAttribPointerv = (void (*)(GLuint index, GLenum pname, void **pointer))wglGetProcAddress("glGetVertexAttribPointerv");
	glIsProgram = (GLboolean (*)(GLuint program))wglGetProcAddress("glIsProgram");
	glIsShader = (GLboolean (*)(GLuint shader))wglGetProcAddress("glIsShader");
	glLinkProgram = (void (*)(GLuint program))wglGetProcAddress("glLinkProgram");
	glShaderSource = (void (*)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))wglGetProcAddress("glShaderSource");
	glUseProgram = (void (*)(GLuint program))wglGetProcAddress("glUseProgram");
	glUniform1f = (void (*)(GLint location, GLfloat v0))wglGetProcAddress("glUniform1f");
	glUniform2f = (void (*)(GLint location, GLfloat v0, GLfloat v1))wglGetProcAddress("glUniform2f");
	glUniform3f = (void (*)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2))wglGetProcAddress("glUniform3f");
	glUniform4f = (void (*)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))wglGetProcAddress("glUniform4f");
	glUniform1i = (void (*)(GLint location, GLint v0))wglGetProcAddress("glUniform1i");
	glUniform2i = (void (*)(GLint location, GLint v0, GLint v1))wglGetProcAddress("glUniform2i");
	glUniform3i = (void (*)(GLint location, GLint v0, GLint v1, GLint v2))wglGetProcAddress("glUniform3i");
	glUniform4i = (void (*)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3))wglGetProcAddress("glUniform4i");
	glUniform1fv = (void (*)(GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glUniform1fv");
	glUniform2fv = (void (*)(GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glUniform2fv");
	glUniform3fv = (void (*)(GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glUniform3fv");
	glUniform4fv = (void (*)(GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glUniform4fv");
	glUniform1iv = (void (*)(GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glUniform1iv");
	glUniform2iv = (void (*)(GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glUniform2iv");
	glUniform3iv = (void (*)(GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glUniform3iv");
	glUniform4iv = (void (*)(GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glUniform4iv");
	glUniformMatrix2fv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix2fv");
	glUniformMatrix3fv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix3fv");
	glUniformMatrix4fv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix4fv");
	glValidateProgram = (void (*)(GLuint program))wglGetProcAddress("glValidateProgram");
	glVertexAttrib1d = (void (*)(GLuint index, GLdouble x))wglGetProcAddress("glVertexAttrib1d");
	glVertexAttrib1dv = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib1dv");
	glVertexAttrib1f = (void (*)(GLuint index, GLfloat x))wglGetProcAddress("glVertexAttrib1f");
	glVertexAttrib1fv = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib1fv");
	glVertexAttrib1s = (void (*)(GLuint index, GLshort x))wglGetProcAddress("glVertexAttrib1s");
	glVertexAttrib1sv = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib1sv");
	glVertexAttrib2d = (void (*)(GLuint index, GLdouble x, GLdouble y))wglGetProcAddress("glVertexAttrib2d");
	glVertexAttrib2dv = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib2dv");
	glVertexAttrib2f = (void (*)(GLuint index, GLfloat x, GLfloat y))wglGetProcAddress("glVertexAttrib2f");
	glVertexAttrib2fv = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib2fv");
	glVertexAttrib2s = (void (*)(GLuint index, GLshort x, GLshort y))wglGetProcAddress("glVertexAttrib2s");
	glVertexAttrib2sv = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib2sv");
	glVertexAttrib3d = (void (*)(GLuint index, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glVertexAttrib3d");
	glVertexAttrib3dv = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib3dv");
	glVertexAttrib3f = (void (*)(GLuint index, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glVertexAttrib3f");
	glVertexAttrib3fv = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib3fv");
	glVertexAttrib3s = (void (*)(GLuint index, GLshort x, GLshort y, GLshort z))wglGetProcAddress("glVertexAttrib3s");
	glVertexAttrib3sv = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib3sv");
	glVertexAttrib4Nbv = (void (*)(GLuint index, const GLbyte *v))wglGetProcAddress("glVertexAttrib4Nbv");
	glVertexAttrib4Niv = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttrib4Niv");
	glVertexAttrib4Nsv = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib4Nsv");
	glVertexAttrib4Nub = (void (*)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w))wglGetProcAddress("glVertexAttrib4Nub");
	glVertexAttrib4Nubv = (void (*)(GLuint index, const GLubyte *v))wglGetProcAddress("glVertexAttrib4Nubv");
	glVertexAttrib4Nuiv = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttrib4Nuiv");
	glVertexAttrib4Nusv = (void (*)(GLuint index, const GLushort *v))wglGetProcAddress("glVertexAttrib4Nusv");
	glVertexAttrib4bv = (void (*)(GLuint index, const GLbyte *v))wglGetProcAddress("glVertexAttrib4bv");
	glVertexAttrib4d = (void (*)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glVertexAttrib4d");
	glVertexAttrib4dv = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib4dv");
	glVertexAttrib4f = (void (*)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glVertexAttrib4f");
	glVertexAttrib4fv = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib4fv");
	glVertexAttrib4iv = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttrib4iv");
	glVertexAttrib4s = (void (*)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w))wglGetProcAddress("glVertexAttrib4s");
	glVertexAttrib4sv = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib4sv");
	glVertexAttrib4ubv = (void (*)(GLuint index, const GLubyte *v))wglGetProcAddress("glVertexAttrib4ubv");
	glVertexAttrib4uiv = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttrib4uiv");
	glVertexAttrib4usv = (void (*)(GLuint index, const GLushort *v))wglGetProcAddress("glVertexAttrib4usv");
	glVertexAttribPointer = (void (*)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))wglGetProcAddress("glVertexAttribPointer");
	glUniformMatrix2x3fv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix2x3fv");
	glUniformMatrix3x2fv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix3x2fv");
	glUniformMatrix2x4fv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix2x4fv");
	glUniformMatrix4x2fv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix4x2fv");
	glUniformMatrix3x4fv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix3x4fv");
	glUniformMatrix4x3fv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix4x3fv");
	glColorMaski = (void (*)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))wglGetProcAddress("glColorMaski");
	glGetBooleani_v = (void (*)(GLenum target, GLuint index, GLboolean *data))wglGetProcAddress("glGetBooleani_v");
	glGetIntegeri_v = (void (*)(GLenum target, GLuint index, GLint *data))wglGetProcAddress("glGetIntegeri_v");
	glEnablei = (void (*)(GLenum target, GLuint index))wglGetProcAddress("glEnablei");
	glDisablei = (void (*)(GLenum target, GLuint index))wglGetProcAddress("glDisablei");
	glIsEnabledi = (GLboolean (*)(GLenum target, GLuint index))wglGetProcAddress("glIsEnabledi");
	glBeginTransformFeedback = (void (*)(GLenum primitiveMode))wglGetProcAddress("glBeginTransformFeedback");
	glEndTransformFeedback = (void (*)(void))wglGetProcAddress("glEndTransformFeedback");
	glBindBufferRange = (void (*)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))wglGetProcAddress("glBindBufferRange");
	glBindBufferBase = (void (*)(GLenum target, GLuint index, GLuint buffer))wglGetProcAddress("glBindBufferBase");
	glTransformFeedbackVaryings = (void (*)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))wglGetProcAddress("glTransformFeedbackVaryings");
	glGetTransformFeedbackVarying = (void (*)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))wglGetProcAddress("glGetTransformFeedbackVarying");
	glClampColor = (void (*)(GLenum target, GLenum clamp))wglGetProcAddress("glClampColor");
	glBeginConditionalRender = (void (*)(GLuint id, GLenum mode))wglGetProcAddress("glBeginConditionalRender");
	glEndConditionalRender = (void (*)(void))wglGetProcAddress("glEndConditionalRender");
	glVertexAttribIPointer = (void (*)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glVertexAttribIPointer");
	glGetVertexAttribIiv = (void (*)(GLuint index, GLenum pname, GLint *params))wglGetProcAddress("glGetVertexAttribIiv");
	glGetVertexAttribIuiv = (void (*)(GLuint index, GLenum pname, GLuint *params))wglGetProcAddress("glGetVertexAttribIuiv");
	glVertexAttribI1i = (void (*)(GLuint index, GLint x))wglGetProcAddress("glVertexAttribI1i");
	glVertexAttribI2i = (void (*)(GLuint index, GLint x, GLint y))wglGetProcAddress("glVertexAttribI2i");
	glVertexAttribI3i = (void (*)(GLuint index, GLint x, GLint y, GLint z))wglGetProcAddress("glVertexAttribI3i");
	glVertexAttribI4i = (void (*)(GLuint index, GLint x, GLint y, GLint z, GLint w))wglGetProcAddress("glVertexAttribI4i");
	glVertexAttribI1ui = (void (*)(GLuint index, GLuint x))wglGetProcAddress("glVertexAttribI1ui");
	glVertexAttribI2ui = (void (*)(GLuint index, GLuint x, GLuint y))wglGetProcAddress("glVertexAttribI2ui");
	glVertexAttribI3ui = (void (*)(GLuint index, GLuint x, GLuint y, GLuint z))wglGetProcAddress("glVertexAttribI3ui");
	glVertexAttribI4ui = (void (*)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))wglGetProcAddress("glVertexAttribI4ui");
	glVertexAttribI1iv = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttribI1iv");
	glVertexAttribI2iv = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttribI2iv");
	glVertexAttribI3iv = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttribI3iv");
	glVertexAttribI4iv = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttribI4iv");
	glVertexAttribI1uiv = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttribI1uiv");
	glVertexAttribI2uiv = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttribI2uiv");
	glVertexAttribI3uiv = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttribI3uiv");
	glVertexAttribI4uiv = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttribI4uiv");
	glVertexAttribI4bv = (void (*)(GLuint index, const GLbyte *v))wglGetProcAddress("glVertexAttribI4bv");
	glVertexAttribI4sv = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttribI4sv");
	glVertexAttribI4ubv = (void (*)(GLuint index, const GLubyte *v))wglGetProcAddress("glVertexAttribI4ubv");
	glVertexAttribI4usv = (void (*)(GLuint index, const GLushort *v))wglGetProcAddress("glVertexAttribI4usv");
	glGetUniformuiv = (void (*)(GLuint program, GLint location, GLuint *params))wglGetProcAddress("glGetUniformuiv");
	glBindFragDataLocation = (void (*)(GLuint program, GLuint color, const GLchar *name))wglGetProcAddress("glBindFragDataLocation");
	glGetFragDataLocation = (GLint (*)(GLuint program, const GLchar *name))wglGetProcAddress("glGetFragDataLocation");
	glUniform1ui = (void (*)(GLint location, GLuint v0))wglGetProcAddress("glUniform1ui");
	glUniform2ui = (void (*)(GLint location, GLuint v0, GLuint v1))wglGetProcAddress("glUniform2ui");
	glUniform3ui = (void (*)(GLint location, GLuint v0, GLuint v1, GLuint v2))wglGetProcAddress("glUniform3ui");
	glUniform4ui = (void (*)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))wglGetProcAddress("glUniform4ui");
	glUniform1uiv = (void (*)(GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glUniform1uiv");
	glUniform2uiv = (void (*)(GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glUniform2uiv");
	glUniform3uiv = (void (*)(GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glUniform3uiv");
	glUniform4uiv = (void (*)(GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glUniform4uiv");
	glTexParameterIiv = (void (*)(GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glTexParameterIiv");
	glTexParameterIuiv = (void (*)(GLenum target, GLenum pname, const GLuint *params))wglGetProcAddress("glTexParameterIuiv");
	glGetTexParameterIiv = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetTexParameterIiv");
	glGetTexParameterIuiv = (void (*)(GLenum target, GLenum pname, GLuint *params))wglGetProcAddress("glGetTexParameterIuiv");
	glClearBufferiv = (void (*)(GLenum buffer, GLint drawbuffer, const GLint *value))wglGetProcAddress("glClearBufferiv");
	glClearBufferuiv = (void (*)(GLenum buffer, GLint drawbuffer, const GLuint *value))wglGetProcAddress("glClearBufferuiv");
	glClearBufferfv = (void (*)(GLenum buffer, GLint drawbuffer, const GLfloat *value))wglGetProcAddress("glClearBufferfv");
	glClearBufferfi = (void (*)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))wglGetProcAddress("glClearBufferfi");
	glIsRenderbuffer = (GLboolean (*)(GLuint renderbuffer))wglGetProcAddress("glIsRenderbuffer");
	glBindRenderbuffer = (void (*)(GLenum target, GLuint renderbuffer))wglGetProcAddress("glBindRenderbuffer");
	glDeleteRenderbuffers = (void (*)(GLsizei n, const GLuint *renderbuffers))wglGetProcAddress("glDeleteRenderbuffers");
	glGenRenderbuffers = (void (*)(GLsizei n, GLuint *renderbuffers))wglGetProcAddress("glGenRenderbuffers");
	glRenderbufferStorage = (void (*)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glRenderbufferStorage");
	glGetRenderbufferParameteriv = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetRenderbufferParameteriv");
	glIsFramebuffer = (GLboolean (*)(GLuint framebuffer))wglGetProcAddress("glIsFramebuffer");
	glBindFramebuffer = (void (*)(GLenum target, GLuint framebuffer))wglGetProcAddress("glBindFramebuffer");
	glDeleteFramebuffers = (void (*)(GLsizei n, const GLuint *framebuffers))wglGetProcAddress("glDeleteFramebuffers");
	glGenFramebuffers = (void (*)(GLsizei n, GLuint *framebuffers))wglGetProcAddress("glGenFramebuffers");
	glCheckFramebufferStatus = (GLenum (*)(GLenum target))wglGetProcAddress("glCheckFramebufferStatus");
	glFramebufferTexture1D = (void (*)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))wglGetProcAddress("glFramebufferTexture1D");
	glFramebufferTexture2D = (void (*)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))wglGetProcAddress("glFramebufferTexture2D");
	glFramebufferTexture3D = (void (*)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))wglGetProcAddress("glFramebufferTexture3D");
	glFramebufferRenderbuffer = (void (*)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))wglGetProcAddress("glFramebufferRenderbuffer");
	glGetFramebufferAttachmentParameteriv = (void (*)(GLenum target, GLenum attachment, GLenum pname, GLint *params))wglGetProcAddress("glGetFramebufferAttachmentParameteriv");
	glGenerateMipmap = (void (*)(GLenum target))wglGetProcAddress("glGenerateMipmap");
	glBlitFramebuffer = (void (*)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))wglGetProcAddress("glBlitFramebuffer");
	glRenderbufferStorageMultisample = (void (*)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glRenderbufferStorageMultisample");
	glFramebufferTextureLayer = (void (*)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))wglGetProcAddress("glFramebufferTextureLayer");
	glFlushMappedBufferRange = (void (*)(GLenum target, GLintptr offset, GLsizeiptr length))wglGetProcAddress("glFlushMappedBufferRange");
	glBindVertexArray = (void (*)(GLuint array))wglGetProcAddress("glBindVertexArray");
	glDeleteVertexArrays = (void (*)(GLsizei n, const GLuint *arrays))wglGetProcAddress("glDeleteVertexArrays");
	glGenVertexArrays = (void (*)(GLsizei n, GLuint *arrays))wglGetProcAddress("glGenVertexArrays");
	glIsVertexArray = (GLboolean (*)(GLuint array))wglGetProcAddress("glIsVertexArray");
	glDrawArraysInstanced = (void (*)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount))wglGetProcAddress("glDrawArraysInstanced");
	glDrawElementsInstanced = (void (*)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount))wglGetProcAddress("glDrawElementsInstanced");
	glTexBuffer = (void (*)(GLenum target, GLenum internalformat, GLuint buffer))wglGetProcAddress("glTexBuffer");
	glPrimitiveRestartIndex = (void (*)(GLuint index))wglGetProcAddress("glPrimitiveRestartIndex");
	glCopyBufferSubData = (void (*)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))wglGetProcAddress("glCopyBufferSubData");
	glGetUniformIndices = (void (*)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices))wglGetProcAddress("glGetUniformIndices");
	glGetActiveUniformsiv = (void (*)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params))wglGetProcAddress("glGetActiveUniformsiv");
	glGetActiveUniformName = (void (*)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName))wglGetProcAddress("glGetActiveUniformName");
	glGetUniformBlockIndex = (GLuint (*)(GLuint program, const GLchar *uniformBlockName))wglGetProcAddress("glGetUniformBlockIndex");
	glGetActiveUniformBlockiv = (void (*)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params))wglGetProcAddress("glGetActiveUniformBlockiv");
	glGetActiveUniformBlockName = (void (*)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName))wglGetProcAddress("glGetActiveUniformBlockName");
	glUniformBlockBinding = (void (*)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding))wglGetProcAddress("glUniformBlockBinding");
	glDrawElementsBaseVertex = (void (*)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex))wglGetProcAddress("glDrawElementsBaseVertex");
	glDrawRangeElementsBaseVertex = (void (*)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex))wglGetProcAddress("glDrawRangeElementsBaseVertex");
	glDrawElementsInstancedBaseVertex = (void (*)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex))wglGetProcAddress("glDrawElementsInstancedBaseVertex");
	glMultiDrawElementsBaseVertex = (void (*)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex))wglGetProcAddress("glMultiDrawElementsBaseVertex");
	glProvokingVertex = (void (*)(GLenum mode))wglGetProcAddress("glProvokingVertex");
	glFenceSync = (GLsync (*)(GLenum condition, GLbitfield flags))wglGetProcAddress("glFenceSync");
	glIsSync = (GLboolean (*)(GLsync sync))wglGetProcAddress("glIsSync");
	glDeleteSync = (void (*)(GLsync sync))wglGetProcAddress("glDeleteSync");
	glClientWaitSync = (GLenum (*)(GLsync sync, GLbitfield flags, GLuint64 timeout))wglGetProcAddress("glClientWaitSync");
	glWaitSync = (void (*)(GLsync sync, GLbitfield flags, GLuint64 timeout))wglGetProcAddress("glWaitSync");
	glGetInteger64v = (void (*)(GLenum pname, GLint64 *data))wglGetProcAddress("glGetInteger64v");
	glGetSynciv = (void (*)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))wglGetProcAddress("glGetSynciv");
	glGetInteger64i_v = (void (*)(GLenum target, GLuint index, GLint64 *data))wglGetProcAddress("glGetInteger64i_v");
	glGetBufferParameteri64v = (void (*)(GLenum target, GLenum pname, GLint64 *params))wglGetProcAddress("glGetBufferParameteri64v");
	glFramebufferTexture = (void (*)(GLenum target, GLenum attachment, GLuint texture, GLint level))wglGetProcAddress("glFramebufferTexture");
	glTexImage2DMultisample = (void (*)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))wglGetProcAddress("glTexImage2DMultisample");
	glTexImage3DMultisample = (void (*)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))wglGetProcAddress("glTexImage3DMultisample");
	glGetMultisamplefv = (void (*)(GLenum pname, GLuint index, GLfloat *val))wglGetProcAddress("glGetMultisamplefv");
	glSampleMaski = (void (*)(GLuint maskNumber, GLbitfield mask))wglGetProcAddress("glSampleMaski");
	glBindFragDataLocationIndexed = (void (*)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name))wglGetProcAddress("glBindFragDataLocationIndexed");
	glGetFragDataIndex = (GLint (*)(GLuint program, const GLchar *name))wglGetProcAddress("glGetFragDataIndex");
	glGenSamplers = (void (*)(GLsizei count, GLuint *samplers))wglGetProcAddress("glGenSamplers");
	glDeleteSamplers = (void (*)(GLsizei count, const GLuint *samplers))wglGetProcAddress("glDeleteSamplers");
	glIsSampler = (GLboolean (*)(GLuint sampler))wglGetProcAddress("glIsSampler");
	glBindSampler = (void (*)(GLuint unit, GLuint sampler))wglGetProcAddress("glBindSampler");
	glSamplerParameteri = (void (*)(GLuint sampler, GLenum pname, GLint param))wglGetProcAddress("glSamplerParameteri");
	glSamplerParameteriv = (void (*)(GLuint sampler, GLenum pname, const GLint *param))wglGetProcAddress("glSamplerParameteriv");
	glSamplerParameterf = (void (*)(GLuint sampler, GLenum pname, GLfloat param))wglGetProcAddress("glSamplerParameterf");
	glSamplerParameterfv = (void (*)(GLuint sampler, GLenum pname, const GLfloat *param))wglGetProcAddress("glSamplerParameterfv");
	glSamplerParameterIiv = (void (*)(GLuint sampler, GLenum pname, const GLint *param))wglGetProcAddress("glSamplerParameterIiv");
	glSamplerParameterIuiv = (void (*)(GLuint sampler, GLenum pname, const GLuint *param))wglGetProcAddress("glSamplerParameterIuiv");
	glGetSamplerParameteriv = (void (*)(GLuint sampler, GLenum pname, GLint *params))wglGetProcAddress("glGetSamplerParameteriv");
	glGetSamplerParameterIiv = (void (*)(GLuint sampler, GLenum pname, GLint *params))wglGetProcAddress("glGetSamplerParameterIiv");
	glGetSamplerParameterfv = (void (*)(GLuint sampler, GLenum pname, GLfloat *params))wglGetProcAddress("glGetSamplerParameterfv");
	glGetSamplerParameterIuiv = (void (*)(GLuint sampler, GLenum pname, GLuint *params))wglGetProcAddress("glGetSamplerParameterIuiv");
	glQueryCounter = (void (*)(GLuint id, GLenum target))wglGetProcAddress("glQueryCounter");
	glGetQueryObjecti64v = (void (*)(GLuint id, GLenum pname, GLint64 *params))wglGetProcAddress("glGetQueryObjecti64v");
	glGetQueryObjectui64v = (void (*)(GLuint id, GLenum pname, GLuint64 *params))wglGetProcAddress("glGetQueryObjectui64v");
	glVertexAttribDivisor = (void (*)(GLuint index, GLuint divisor))wglGetProcAddress("glVertexAttribDivisor");
	glVertexAttribP1ui = (void (*)(GLuint index, GLenum type, GLboolean normalized, GLuint value))wglGetProcAddress("glVertexAttribP1ui");
	glVertexAttribP1uiv = (void (*)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value))wglGetProcAddress("glVertexAttribP1uiv");
	glVertexAttribP2ui = (void (*)(GLuint index, GLenum type, GLboolean normalized, GLuint value))wglGetProcAddress("glVertexAttribP2ui");
	glVertexAttribP2uiv = (void (*)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value))wglGetProcAddress("glVertexAttribP2uiv");
	glVertexAttribP3ui = (void (*)(GLuint index, GLenum type, GLboolean normalized, GLuint value))wglGetProcAddress("glVertexAttribP3ui");
	glVertexAttribP3uiv = (void (*)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value))wglGetProcAddress("glVertexAttribP3uiv");
	glVertexAttribP4ui = (void (*)(GLuint index, GLenum type, GLboolean normalized, GLuint value))wglGetProcAddress("glVertexAttribP4ui");
	glVertexAttribP4uiv = (void (*)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value))wglGetProcAddress("glVertexAttribP4uiv");
	glVertexP2ui = (void (*)(GLenum type, GLuint value))wglGetProcAddress("glVertexP2ui");
	glVertexP2uiv = (void (*)(GLenum type, const GLuint *value))wglGetProcAddress("glVertexP2uiv");
	glVertexP3ui = (void (*)(GLenum type, GLuint value))wglGetProcAddress("glVertexP3ui");
	glVertexP3uiv = (void (*)(GLenum type, const GLuint *value))wglGetProcAddress("glVertexP3uiv");
	glVertexP4ui = (void (*)(GLenum type, GLuint value))wglGetProcAddress("glVertexP4ui");
	glVertexP4uiv = (void (*)(GLenum type, const GLuint *value))wglGetProcAddress("glVertexP4uiv");
	glTexCoordP1ui = (void (*)(GLenum type, GLuint coords))wglGetProcAddress("glTexCoordP1ui");
	glTexCoordP1uiv = (void (*)(GLenum type, const GLuint *coords))wglGetProcAddress("glTexCoordP1uiv");
	glTexCoordP2ui = (void (*)(GLenum type, GLuint coords))wglGetProcAddress("glTexCoordP2ui");
	glTexCoordP2uiv = (void (*)(GLenum type, const GLuint *coords))wglGetProcAddress("glTexCoordP2uiv");
	glTexCoordP3ui = (void (*)(GLenum type, GLuint coords))wglGetProcAddress("glTexCoordP3ui");
	glTexCoordP3uiv = (void (*)(GLenum type, const GLuint *coords))wglGetProcAddress("glTexCoordP3uiv");
	glTexCoordP4ui = (void (*)(GLenum type, GLuint coords))wglGetProcAddress("glTexCoordP4ui");
	glTexCoordP4uiv = (void (*)(GLenum type, const GLuint *coords))wglGetProcAddress("glTexCoordP4uiv");
	glMultiTexCoordP1ui = (void (*)(GLenum texture, GLenum type, GLuint coords))wglGetProcAddress("glMultiTexCoordP1ui");
	glMultiTexCoordP1uiv = (void (*)(GLenum texture, GLenum type, const GLuint *coords))wglGetProcAddress("glMultiTexCoordP1uiv");
	glMultiTexCoordP2ui = (void (*)(GLenum texture, GLenum type, GLuint coords))wglGetProcAddress("glMultiTexCoordP2ui");
	glMultiTexCoordP2uiv = (void (*)(GLenum texture, GLenum type, const GLuint *coords))wglGetProcAddress("glMultiTexCoordP2uiv");
	glMultiTexCoordP3ui = (void (*)(GLenum texture, GLenum type, GLuint coords))wglGetProcAddress("glMultiTexCoordP3ui");
	glMultiTexCoordP3uiv = (void (*)(GLenum texture, GLenum type, const GLuint *coords))wglGetProcAddress("glMultiTexCoordP3uiv");
	glMultiTexCoordP4ui = (void (*)(GLenum texture, GLenum type, GLuint coords))wglGetProcAddress("glMultiTexCoordP4ui");
	glMultiTexCoordP4uiv = (void (*)(GLenum texture, GLenum type, const GLuint *coords))wglGetProcAddress("glMultiTexCoordP4uiv");
	glNormalP3ui = (void (*)(GLenum type, GLuint coords))wglGetProcAddress("glNormalP3ui");
	glNormalP3uiv = (void (*)(GLenum type, const GLuint *coords))wglGetProcAddress("glNormalP3uiv");
	glColorP3ui = (void (*)(GLenum type, GLuint color))wglGetProcAddress("glColorP3ui");
	glColorP3uiv = (void (*)(GLenum type, const GLuint *color))wglGetProcAddress("glColorP3uiv");
	glColorP4ui = (void (*)(GLenum type, GLuint color))wglGetProcAddress("glColorP4ui");
	glColorP4uiv = (void (*)(GLenum type, const GLuint *color))wglGetProcAddress("glColorP4uiv");
	glSecondaryColorP3ui = (void (*)(GLenum type, GLuint color))wglGetProcAddress("glSecondaryColorP3ui");
	glSecondaryColorP3uiv = (void (*)(GLenum type, const GLuint *color))wglGetProcAddress("glSecondaryColorP3uiv");
	glMinSampleShading = (void (*)(GLfloat value))wglGetProcAddress("glMinSampleShading");
	glBlendEquationi = (void (*)(GLuint buf, GLenum mode))wglGetProcAddress("glBlendEquationi");
	glBlendEquationSeparatei = (void (*)(GLuint buf, GLenum modeRGB, GLenum modeAlpha))wglGetProcAddress("glBlendEquationSeparatei");
	glBlendFunci = (void (*)(GLuint buf, GLenum src, GLenum dst))wglGetProcAddress("glBlendFunci");
	glBlendFuncSeparatei = (void (*)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))wglGetProcAddress("glBlendFuncSeparatei");
	glDrawArraysIndirect = (void (*)(GLenum mode, const void *indirect))wglGetProcAddress("glDrawArraysIndirect");
	glDrawElementsIndirect = (void (*)(GLenum mode, GLenum type, const void *indirect))wglGetProcAddress("glDrawElementsIndirect");
	glUniform1d = (void (*)(GLint location, GLdouble x))wglGetProcAddress("glUniform1d");
	glUniform2d = (void (*)(GLint location, GLdouble x, GLdouble y))wglGetProcAddress("glUniform2d");
	glUniform3d = (void (*)(GLint location, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glUniform3d");
	glUniform4d = (void (*)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glUniform4d");
	glUniform1dv = (void (*)(GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glUniform1dv");
	glUniform2dv = (void (*)(GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glUniform2dv");
	glUniform3dv = (void (*)(GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glUniform3dv");
	glUniform4dv = (void (*)(GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glUniform4dv");
	glUniformMatrix2dv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glUniformMatrix2dv");
	glUniformMatrix3dv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glUniformMatrix3dv");
	glUniformMatrix4dv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glUniformMatrix4dv");
	glUniformMatrix2x3dv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glUniformMatrix2x3dv");
	glUniformMatrix2x4dv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glUniformMatrix2x4dv");
	glUniformMatrix3x2dv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glUniformMatrix3x2dv");
	glUniformMatrix3x4dv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glUniformMatrix3x4dv");
	glUniformMatrix4x2dv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glUniformMatrix4x2dv");
	glUniformMatrix4x3dv = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glUniformMatrix4x3dv");
	glGetUniformdv = (void (*)(GLuint program, GLint location, GLdouble *params))wglGetProcAddress("glGetUniformdv");
	glGetSubroutineUniformLocation = (GLint (*)(GLuint program, GLenum shadertype, const GLchar *name))wglGetProcAddress("glGetSubroutineUniformLocation");
	glGetSubroutineIndex = (GLuint (*)(GLuint program, GLenum shadertype, const GLchar *name))wglGetProcAddress("glGetSubroutineIndex");
	glGetActiveSubroutineUniformiv = (void (*)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values))wglGetProcAddress("glGetActiveSubroutineUniformiv");
	glGetActiveSubroutineUniformName = (void (*)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name))wglGetProcAddress("glGetActiveSubroutineUniformName");
	glGetActiveSubroutineName = (void (*)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name))wglGetProcAddress("glGetActiveSubroutineName");
	glUniformSubroutinesuiv = (void (*)(GLenum shadertype, GLsizei count, const GLuint *indices))wglGetProcAddress("glUniformSubroutinesuiv");
	glGetUniformSubroutineuiv = (void (*)(GLenum shadertype, GLint location, GLuint *params))wglGetProcAddress("glGetUniformSubroutineuiv");
	glGetProgramStageiv = (void (*)(GLuint program, GLenum shadertype, GLenum pname, GLint *values))wglGetProcAddress("glGetProgramStageiv");
	glPatchParameteri = (void (*)(GLenum pname, GLint value))wglGetProcAddress("glPatchParameteri");
	glPatchParameterfv = (void (*)(GLenum pname, const GLfloat *values))wglGetProcAddress("glPatchParameterfv");
	glBindTransformFeedback = (void (*)(GLenum target, GLuint id))wglGetProcAddress("glBindTransformFeedback");
	glDeleteTransformFeedbacks = (void (*)(GLsizei n, const GLuint *ids))wglGetProcAddress("glDeleteTransformFeedbacks");
	glGenTransformFeedbacks = (void (*)(GLsizei n, GLuint *ids))wglGetProcAddress("glGenTransformFeedbacks");
	glIsTransformFeedback = (GLboolean (*)(GLuint id))wglGetProcAddress("glIsTransformFeedback");
	glPauseTransformFeedback = (void (*)(void))wglGetProcAddress("glPauseTransformFeedback");
	glResumeTransformFeedback = (void (*)(void))wglGetProcAddress("glResumeTransformFeedback");
	glDrawTransformFeedback = (void (*)(GLenum mode, GLuint id))wglGetProcAddress("glDrawTransformFeedback");
	glDrawTransformFeedbackStream = (void (*)(GLenum mode, GLuint id, GLuint stream))wglGetProcAddress("glDrawTransformFeedbackStream");
	glBeginQueryIndexed = (void (*)(GLenum target, GLuint index, GLuint id))wglGetProcAddress("glBeginQueryIndexed");
	glEndQueryIndexed = (void (*)(GLenum target, GLuint index))wglGetProcAddress("glEndQueryIndexed");
	glGetQueryIndexediv = (void (*)(GLenum target, GLuint index, GLenum pname, GLint *params))wglGetProcAddress("glGetQueryIndexediv");
	glReleaseShaderCompiler = (void (*)(void))wglGetProcAddress("glReleaseShaderCompiler");
	glShaderBinary = (void (*)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))wglGetProcAddress("glShaderBinary");
	glGetShaderPrecisionFormat = (void (*)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))wglGetProcAddress("glGetShaderPrecisionFormat");
	glDepthRangef = (void (*)(GLfloat n, GLfloat f))wglGetProcAddress("glDepthRangef");
	glClearDepthf = (void (*)(GLfloat d))wglGetProcAddress("glClearDepthf");
	glGetProgramBinary = (void (*)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))wglGetProcAddress("glGetProgramBinary");
	glProgramBinary = (void (*)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length))wglGetProcAddress("glProgramBinary");
	glProgramParameteri = (void (*)(GLuint program, GLenum pname, GLint value))wglGetProcAddress("glProgramParameteri");
	glUseProgramStages = (void (*)(GLuint pipeline, GLbitfield stages, GLuint program))wglGetProcAddress("glUseProgramStages");
	glActiveShaderProgram = (void (*)(GLuint pipeline, GLuint program))wglGetProcAddress("glActiveShaderProgram");
	glCreateShaderProgramv = (GLuint (*)(GLenum type, GLsizei count, const GLchar *const*strings))wglGetProcAddress("glCreateShaderProgramv");
	glBindProgramPipeline = (void (*)(GLuint pipeline))wglGetProcAddress("glBindProgramPipeline");
	glDeleteProgramPipelines = (void (*)(GLsizei n, const GLuint *pipelines))wglGetProcAddress("glDeleteProgramPipelines");
	glGenProgramPipelines = (void (*)(GLsizei n, GLuint *pipelines))wglGetProcAddress("glGenProgramPipelines");
	glIsProgramPipeline = (GLboolean (*)(GLuint pipeline))wglGetProcAddress("glIsProgramPipeline");
	glGetProgramPipelineiv = (void (*)(GLuint pipeline, GLenum pname, GLint *params))wglGetProcAddress("glGetProgramPipelineiv");
	glProgramUniform1i = (void (*)(GLuint program, GLint location, GLint v0))wglGetProcAddress("glProgramUniform1i");
	glProgramUniform1iv = (void (*)(GLuint program, GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glProgramUniform1iv");
	glProgramUniform1f = (void (*)(GLuint program, GLint location, GLfloat v0))wglGetProcAddress("glProgramUniform1f");
	glProgramUniform1fv = (void (*)(GLuint program, GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glProgramUniform1fv");
	glProgramUniform1d = (void (*)(GLuint program, GLint location, GLdouble v0))wglGetProcAddress("glProgramUniform1d");
	glProgramUniform1dv = (void (*)(GLuint program, GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glProgramUniform1dv");
	glProgramUniform1ui = (void (*)(GLuint program, GLint location, GLuint v0))wglGetProcAddress("glProgramUniform1ui");
	glProgramUniform1uiv = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glProgramUniform1uiv");
	glProgramUniform2i = (void (*)(GLuint program, GLint location, GLint v0, GLint v1))wglGetProcAddress("glProgramUniform2i");
	glProgramUniform2iv = (void (*)(GLuint program, GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glProgramUniform2iv");
	glProgramUniform2f = (void (*)(GLuint program, GLint location, GLfloat v0, GLfloat v1))wglGetProcAddress("glProgramUniform2f");
	glProgramUniform2fv = (void (*)(GLuint program, GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glProgramUniform2fv");
	glProgramUniform2d = (void (*)(GLuint program, GLint location, GLdouble v0, GLdouble v1))wglGetProcAddress("glProgramUniform2d");
	glProgramUniform2dv = (void (*)(GLuint program, GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glProgramUniform2dv");
	glProgramUniform2ui = (void (*)(GLuint program, GLint location, GLuint v0, GLuint v1))wglGetProcAddress("glProgramUniform2ui");
	glProgramUniform2uiv = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glProgramUniform2uiv");
	glProgramUniform3i = (void (*)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2))wglGetProcAddress("glProgramUniform3i");
	glProgramUniform3iv = (void (*)(GLuint program, GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glProgramUniform3iv");
	glProgramUniform3f = (void (*)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))wglGetProcAddress("glProgramUniform3f");
	glProgramUniform3fv = (void (*)(GLuint program, GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glProgramUniform3fv");
	glProgramUniform3d = (void (*)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2))wglGetProcAddress("glProgramUniform3d");
	glProgramUniform3dv = (void (*)(GLuint program, GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glProgramUniform3dv");
	glProgramUniform3ui = (void (*)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))wglGetProcAddress("glProgramUniform3ui");
	glProgramUniform3uiv = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glProgramUniform3uiv");
	glProgramUniform4i = (void (*)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))wglGetProcAddress("glProgramUniform4i");
	glProgramUniform4iv = (void (*)(GLuint program, GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glProgramUniform4iv");
	glProgramUniform4f = (void (*)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))wglGetProcAddress("glProgramUniform4f");
	glProgramUniform4fv = (void (*)(GLuint program, GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glProgramUniform4fv");
	glProgramUniform4d = (void (*)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3))wglGetProcAddress("glProgramUniform4d");
	glProgramUniform4dv = (void (*)(GLuint program, GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glProgramUniform4dv");
	glProgramUniform4ui = (void (*)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))wglGetProcAddress("glProgramUniform4ui");
	glProgramUniform4uiv = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glProgramUniform4uiv");
	glProgramUniformMatrix2fv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix2fv");
	glProgramUniformMatrix3fv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix3fv");
	glProgramUniformMatrix4fv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix4fv");
	glProgramUniformMatrix2dv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix2dv");
	glProgramUniformMatrix3dv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix3dv");
	glProgramUniformMatrix4dv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix4dv");
	glProgramUniformMatrix2x3fv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix2x3fv");
	glProgramUniformMatrix3x2fv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix3x2fv");
	glProgramUniformMatrix2x4fv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix2x4fv");
	glProgramUniformMatrix4x2fv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix4x2fv");
	glProgramUniformMatrix3x4fv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix3x4fv");
	glProgramUniformMatrix4x3fv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix4x3fv");
	glProgramUniformMatrix2x3dv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix2x3dv");
	glProgramUniformMatrix3x2dv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix3x2dv");
	glProgramUniformMatrix2x4dv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix2x4dv");
	glProgramUniformMatrix4x2dv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix4x2dv");
	glProgramUniformMatrix3x4dv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix3x4dv");
	glProgramUniformMatrix4x3dv = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix4x3dv");
	glValidateProgramPipeline = (void (*)(GLuint pipeline))wglGetProcAddress("glValidateProgramPipeline");
	glGetProgramPipelineInfoLog = (void (*)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog))wglGetProcAddress("glGetProgramPipelineInfoLog");
	glVertexAttribL1d = (void (*)(GLuint index, GLdouble x))wglGetProcAddress("glVertexAttribL1d");
	glVertexAttribL2d = (void (*)(GLuint index, GLdouble x, GLdouble y))wglGetProcAddress("glVertexAttribL2d");
	glVertexAttribL3d = (void (*)(GLuint index, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glVertexAttribL3d");
	glVertexAttribL4d = (void (*)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glVertexAttribL4d");
	glVertexAttribL1dv = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttribL1dv");
	glVertexAttribL2dv = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttribL2dv");
	glVertexAttribL3dv = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttribL3dv");
	glVertexAttribL4dv = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttribL4dv");
	glVertexAttribLPointer = (void (*)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glVertexAttribLPointer");
	glGetVertexAttribLdv = (void (*)(GLuint index, GLenum pname, GLdouble *params))wglGetProcAddress("glGetVertexAttribLdv");
	glViewportArrayv = (void (*)(GLuint first, GLsizei count, const GLfloat *v))wglGetProcAddress("glViewportArrayv");
	glViewportIndexedf = (void (*)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h))wglGetProcAddress("glViewportIndexedf");
	glViewportIndexedfv = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glViewportIndexedfv");
	glScissorArrayv = (void (*)(GLuint first, GLsizei count, const GLint *v))wglGetProcAddress("glScissorArrayv");
	glScissorIndexed = (void (*)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height))wglGetProcAddress("glScissorIndexed");
	glScissorIndexedv = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glScissorIndexedv");
	glDepthRangeArrayv = (void (*)(GLuint first, GLsizei count, const GLdouble *v))wglGetProcAddress("glDepthRangeArrayv");
	glDepthRangeIndexed = (void (*)(GLuint index, GLdouble n, GLdouble f))wglGetProcAddress("glDepthRangeIndexed");
	glGetFloati_v = (void (*)(GLenum target, GLuint index, GLfloat *data))wglGetProcAddress("glGetFloati_v");
	glGetDoublei_v = (void (*)(GLenum target, GLuint index, GLdouble *data))wglGetProcAddress("glGetDoublei_v");
	glDrawArraysInstancedBaseInstance = (void (*)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance))wglGetProcAddress("glDrawArraysInstancedBaseInstance");
	glDrawElementsInstancedBaseInstance = (void (*)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance))wglGetProcAddress("glDrawElementsInstancedBaseInstance");
	glDrawElementsInstancedBaseVertexBaseInstance = (void (*)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance))wglGetProcAddress("glDrawElementsInstancedBaseVertexBaseInstance");
	glGetInternalformativ = (void (*)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params))wglGetProcAddress("glGetInternalformativ");
	glGetActiveAtomicCounterBufferiv = (void (*)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params))wglGetProcAddress("glGetActiveAtomicCounterBufferiv");
	glBindImageTexture = (void (*)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format))wglGetProcAddress("glBindImageTexture");
	glMemoryBarrier = (void (*)(GLbitfield barriers))wglGetProcAddress("glMemoryBarrier");
	glTexStorage1D = (void (*)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))wglGetProcAddress("glTexStorage1D");
	glTexStorage2D = (void (*)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glTexStorage2D");
	glTexStorage3D = (void (*)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))wglGetProcAddress("glTexStorage3D");
	glDrawTransformFeedbackInstanced = (void (*)(GLenum mode, GLuint id, GLsizei instancecount))wglGetProcAddress("glDrawTransformFeedbackInstanced");
	glDrawTransformFeedbackStreamInstanced = (void (*)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount))wglGetProcAddress("glDrawTransformFeedbackStreamInstanced");
	glClearBufferData = (void (*)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data))wglGetProcAddress("glClearBufferData");
	glClearBufferSubData = (void (*)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data))wglGetProcAddress("glClearBufferSubData");
	glDispatchCompute = (void (*)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z))wglGetProcAddress("glDispatchCompute");
	glDispatchComputeIndirect = (void (*)(GLintptr indirect))wglGetProcAddress("glDispatchComputeIndirect");
	glCopyImageSubData = (void (*)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))wglGetProcAddress("glCopyImageSubData");
	glFramebufferParameteri = (void (*)(GLenum target, GLenum pname, GLint param))wglGetProcAddress("glFramebufferParameteri");
	glGetFramebufferParameteriv = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetFramebufferParameteriv");
	glGetInternalformati64v = (void (*)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params))wglGetProcAddress("glGetInternalformati64v");
	glInvalidateTexSubImage = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth))wglGetProcAddress("glInvalidateTexSubImage");
	glInvalidateTexImage = (void (*)(GLuint texture, GLint level))wglGetProcAddress("glInvalidateTexImage");
	glInvalidateBufferSubData = (void (*)(GLuint buffer, GLintptr offset, GLsizeiptr length))wglGetProcAddress("glInvalidateBufferSubData");
	glInvalidateBufferData = (void (*)(GLuint buffer))wglGetProcAddress("glInvalidateBufferData");
	glInvalidateFramebuffer = (void (*)(GLenum target, GLsizei numAttachments, const GLenum *attachments))wglGetProcAddress("glInvalidateFramebuffer");
	glInvalidateSubFramebuffer = (void (*)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glInvalidateSubFramebuffer");
	glMultiDrawArraysIndirect = (void (*)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride))wglGetProcAddress("glMultiDrawArraysIndirect");
	glMultiDrawElementsIndirect = (void (*)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride))wglGetProcAddress("glMultiDrawElementsIndirect");
	glGetProgramInterfaceiv = (void (*)(GLuint program, GLenum programInterface, GLenum pname, GLint *params))wglGetProcAddress("glGetProgramInterfaceiv");
	glGetProgramResourceIndex = (GLuint (*)(GLuint program, GLenum programInterface, const GLchar *name))wglGetProcAddress("glGetProgramResourceIndex");
	glGetProgramResourceName = (void (*)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name))wglGetProcAddress("glGetProgramResourceName");
	glGetProgramResourceiv = (void (*)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params))wglGetProcAddress("glGetProgramResourceiv");
	glGetProgramResourceLocation = (GLint (*)(GLuint program, GLenum programInterface, const GLchar *name))wglGetProcAddress("glGetProgramResourceLocation");
	glGetProgramResourceLocationIndex = (GLint (*)(GLuint program, GLenum programInterface, const GLchar *name))wglGetProcAddress("glGetProgramResourceLocationIndex");
	glShaderStorageBlockBinding = (void (*)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding))wglGetProcAddress("glShaderStorageBlockBinding");
	glTexBufferRange = (void (*)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))wglGetProcAddress("glTexBufferRange");
	glTexStorage2DMultisample = (void (*)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))wglGetProcAddress("glTexStorage2DMultisample");
	glTexStorage3DMultisample = (void (*)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))wglGetProcAddress("glTexStorage3DMultisample");
	glTextureView = (void (*)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers))wglGetProcAddress("glTextureView");
	glBindVertexBuffer = (void (*)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))wglGetProcAddress("glBindVertexBuffer");
	glVertexAttribFormat = (void (*)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))wglGetProcAddress("glVertexAttribFormat");
	glVertexAttribIFormat = (void (*)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))wglGetProcAddress("glVertexAttribIFormat");
	glVertexAttribLFormat = (void (*)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))wglGetProcAddress("glVertexAttribLFormat");
	glVertexAttribBinding = (void (*)(GLuint attribindex, GLuint bindingindex))wglGetProcAddress("glVertexAttribBinding");
	glVertexBindingDivisor = (void (*)(GLuint bindingindex, GLuint divisor))wglGetProcAddress("glVertexBindingDivisor");
	glDebugMessageControl = (void (*)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))wglGetProcAddress("glDebugMessageControl");
	glDebugMessageInsert = (void (*)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))wglGetProcAddress("glDebugMessageInsert");
	glDebugMessageCallback = (void (*)(GLDEBUGPROC callback, const void *userParam))wglGetProcAddress("glDebugMessageCallback");
	glGetDebugMessageLog = (GLuint (*)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))wglGetProcAddress("glGetDebugMessageLog");
	glPushDebugGroup = (void (*)(GLenum source, GLuint id, GLsizei length, const GLchar *message))wglGetProcAddress("glPushDebugGroup");
	glPopDebugGroup = (void (*)(void))wglGetProcAddress("glPopDebugGroup");
	glObjectLabel = (void (*)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label))wglGetProcAddress("glObjectLabel");
	glGetObjectLabel = (void (*)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label))wglGetProcAddress("glGetObjectLabel");
	glObjectPtrLabel = (void (*)(const void *ptr, GLsizei length, const GLchar *label))wglGetProcAddress("glObjectPtrLabel");
	glGetObjectPtrLabel = (void (*)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label))wglGetProcAddress("glGetObjectPtrLabel");
	glBufferStorage = (void (*)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags))wglGetProcAddress("glBufferStorage");
	glClearTexImage = (void (*)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data))wglGetProcAddress("glClearTexImage");
	glClearTexSubImage = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data))wglGetProcAddress("glClearTexSubImage");
	glBindBuffersBase = (void (*)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers))wglGetProcAddress("glBindBuffersBase");
	glBindBuffersRange = (void (*)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes))wglGetProcAddress("glBindBuffersRange");
	glBindTextures = (void (*)(GLuint first, GLsizei count, const GLuint *textures))wglGetProcAddress("glBindTextures");
	glBindSamplers = (void (*)(GLuint first, GLsizei count, const GLuint *samplers))wglGetProcAddress("glBindSamplers");
	glBindImageTextures = (void (*)(GLuint first, GLsizei count, const GLuint *textures))wglGetProcAddress("glBindImageTextures");
	glBindVertexBuffers = (void (*)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides))wglGetProcAddress("glBindVertexBuffers");
	glClipControl = (void (*)(GLenum origin, GLenum depth))wglGetProcAddress("glClipControl");
	glCreateTransformFeedbacks = (void (*)(GLsizei n, GLuint *ids))wglGetProcAddress("glCreateTransformFeedbacks");
	glTransformFeedbackBufferBase = (void (*)(GLuint xfb, GLuint index, GLuint buffer))wglGetProcAddress("glTransformFeedbackBufferBase");
	glTransformFeedbackBufferRange = (void (*)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizei size))wglGetProcAddress("glTransformFeedbackBufferRange");
	glGetTransformFeedbackiv = (void (*)(GLuint xfb, GLenum pname, GLint *param))wglGetProcAddress("glGetTransformFeedbackiv");
	glGetTransformFeedbacki_v = (void (*)(GLuint xfb, GLenum pname, GLuint index, GLint *param))wglGetProcAddress("glGetTransformFeedbacki_v");
	glGetTransformFeedbacki64_v = (void (*)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param))wglGetProcAddress("glGetTransformFeedbacki64_v");
	glCreateBuffers = (void (*)(GLsizei n, GLuint *buffers))wglGetProcAddress("glCreateBuffers");
	glNamedBufferStorage = (void (*)(GLuint buffer, GLsizei size, const void *data, GLbitfield flags))wglGetProcAddress("glNamedBufferStorage");
	glNamedBufferData = (void (*)(GLuint buffer, GLsizei size, const void *data, GLenum usage))wglGetProcAddress("glNamedBufferData");
	glNamedBufferSubData = (void (*)(GLuint buffer, GLintptr offset, GLsizei size, const void *data))wglGetProcAddress("glNamedBufferSubData");
	glCopyNamedBufferSubData = (void (*)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizei size))wglGetProcAddress("glCopyNamedBufferSubData");
	glClearNamedBufferData = (void (*)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data))wglGetProcAddress("glClearNamedBufferData");
	glClearNamedBufferSubData = (void (*)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizei size, GLenum format, GLenum type, const void *data))wglGetProcAddress("glClearNamedBufferSubData");
	glUnmapNamedBuffer = (GLboolean (*)(GLuint buffer))wglGetProcAddress("glUnmapNamedBuffer");
	glFlushMappedNamedBufferRange = (void (*)(GLuint buffer, GLintptr offset, GLsizei length))wglGetProcAddress("glFlushMappedNamedBufferRange");
	glGetNamedBufferParameteriv = (void (*)(GLuint buffer, GLenum pname, GLint *params))wglGetProcAddress("glGetNamedBufferParameteriv");
	glGetNamedBufferParameteri64v = (void (*)(GLuint buffer, GLenum pname, GLint64 *params))wglGetProcAddress("glGetNamedBufferParameteri64v");
	glGetNamedBufferPointerv = (void (*)(GLuint buffer, GLenum pname, void **params))wglGetProcAddress("glGetNamedBufferPointerv");
	glGetNamedBufferSubData = (void (*)(GLuint buffer, GLintptr offset, GLsizei size, void *data))wglGetProcAddress("glGetNamedBufferSubData");
	glCreateFramebuffers = (void (*)(GLsizei n, GLuint *framebuffers))wglGetProcAddress("glCreateFramebuffers");
	glNamedFramebufferRenderbuffer = (void (*)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))wglGetProcAddress("glNamedFramebufferRenderbuffer");
	glNamedFramebufferParameteri = (void (*)(GLuint framebuffer, GLenum pname, GLint param))wglGetProcAddress("glNamedFramebufferParameteri");
	glNamedFramebufferTexture = (void (*)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level))wglGetProcAddress("glNamedFramebufferTexture");
	glNamedFramebufferTextureLayer = (void (*)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer))wglGetProcAddress("glNamedFramebufferTextureLayer");
	glNamedFramebufferDrawBuffer = (void (*)(GLuint framebuffer, GLenum buf))wglGetProcAddress("glNamedFramebufferDrawBuffer");
	glNamedFramebufferDrawBuffers = (void (*)(GLuint framebuffer, GLsizei n, const GLenum *bufs))wglGetProcAddress("glNamedFramebufferDrawBuffers");
	glNamedFramebufferReadBuffer = (void (*)(GLuint framebuffer, GLenum src))wglGetProcAddress("glNamedFramebufferReadBuffer");
	glInvalidateNamedFramebufferData = (void (*)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments))wglGetProcAddress("glInvalidateNamedFramebufferData");
	glInvalidateNamedFramebufferSubData = (void (*)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glInvalidateNamedFramebufferSubData");
	glClearNamedFramebufferiv = (void (*)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value))wglGetProcAddress("glClearNamedFramebufferiv");
	glClearNamedFramebufferuiv = (void (*)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value))wglGetProcAddress("glClearNamedFramebufferuiv");
	glClearNamedFramebufferfv = (void (*)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value))wglGetProcAddress("glClearNamedFramebufferfv");
	glClearNamedFramebufferfi = (void (*)(GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil))wglGetProcAddress("glClearNamedFramebufferfi");
	glBlitNamedFramebuffer = (void (*)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))wglGetProcAddress("glBlitNamedFramebuffer");
	glCheckNamedFramebufferStatus = (GLenum (*)(GLuint framebuffer, GLenum target))wglGetProcAddress("glCheckNamedFramebufferStatus");
	glGetNamedFramebufferParameteriv = (void (*)(GLuint framebuffer, GLenum pname, GLint *param))wglGetProcAddress("glGetNamedFramebufferParameteriv");
	glGetNamedFramebufferAttachmentParameteriv = (void (*)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params))wglGetProcAddress("glGetNamedFramebufferAttachmentParameteriv");
	glCreateRenderbuffers = (void (*)(GLsizei n, GLuint *renderbuffers))wglGetProcAddress("glCreateRenderbuffers");
	glNamedRenderbufferStorage = (void (*)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glNamedRenderbufferStorage");
	glNamedRenderbufferStorageMultisample = (void (*)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glNamedRenderbufferStorageMultisample");
	glGetNamedRenderbufferParameteriv = (void (*)(GLuint renderbuffer, GLenum pname, GLint *params))wglGetProcAddress("glGetNamedRenderbufferParameteriv");
	glCreateTextures = (void (*)(GLenum target, GLsizei n, GLuint *textures))wglGetProcAddress("glCreateTextures");
	glTextureBuffer = (void (*)(GLuint texture, GLenum internalformat, GLuint buffer))wglGetProcAddress("glTextureBuffer");
	glTextureBufferRange = (void (*)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizei size))wglGetProcAddress("glTextureBufferRange");
	glTextureStorage1D = (void (*)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width))wglGetProcAddress("glTextureStorage1D");
	glTextureStorage2D = (void (*)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glTextureStorage2D");
	glTextureStorage3D = (void (*)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))wglGetProcAddress("glTextureStorage3D");
	glTextureStorage2DMultisample = (void (*)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))wglGetProcAddress("glTextureStorage2DMultisample");
	glTextureStorage3DMultisample = (void (*)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))wglGetProcAddress("glTextureStorage3DMultisample");
	glTextureSubImage1D = (void (*)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTextureSubImage1D");
	glTextureSubImage2D = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTextureSubImage2D");
	glTextureSubImage3D = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTextureSubImage3D");
	glCompressedTextureSubImage1D = (void (*)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTextureSubImage1D");
	glCompressedTextureSubImage2D = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTextureSubImage2D");
	glCompressedTextureSubImage3D = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTextureSubImage3D");
	glCopyTextureSubImage1D = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))wglGetProcAddress("glCopyTextureSubImage1D");
	glCopyTextureSubImage2D = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyTextureSubImage2D");
	glCopyTextureSubImage3D = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyTextureSubImage3D");
	glTextureParameterf = (void (*)(GLuint texture, GLenum pname, GLfloat param))wglGetProcAddress("glTextureParameterf");
	glTextureParameterfv = (void (*)(GLuint texture, GLenum pname, const GLfloat *param))wglGetProcAddress("glTextureParameterfv");
	glTextureParameteri = (void (*)(GLuint texture, GLenum pname, GLint param))wglGetProcAddress("glTextureParameteri");
	glTextureParameterIiv = (void (*)(GLuint texture, GLenum pname, const GLint *params))wglGetProcAddress("glTextureParameterIiv");
	glTextureParameterIuiv = (void (*)(GLuint texture, GLenum pname, const GLuint *params))wglGetProcAddress("glTextureParameterIuiv");
	glTextureParameteriv = (void (*)(GLuint texture, GLenum pname, const GLint *param))wglGetProcAddress("glTextureParameteriv");
	glGenerateTextureMipmap = (void (*)(GLuint texture))wglGetProcAddress("glGenerateTextureMipmap");
	glBindTextureUnit = (void (*)(GLuint unit, GLuint texture))wglGetProcAddress("glBindTextureUnit");
	glGetTextureImage = (void (*)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels))wglGetProcAddress("glGetTextureImage");
	glGetCompressedTextureImage = (void (*)(GLuint texture, GLint level, GLsizei bufSize, void *pixels))wglGetProcAddress("glGetCompressedTextureImage");
	glGetTextureLevelParameterfv = (void (*)(GLuint texture, GLint level, GLenum pname, GLfloat *params))wglGetProcAddress("glGetTextureLevelParameterfv");
	glGetTextureLevelParameteriv = (void (*)(GLuint texture, GLint level, GLenum pname, GLint *params))wglGetProcAddress("glGetTextureLevelParameteriv");
	glGetTextureParameterfv = (void (*)(GLuint texture, GLenum pname, GLfloat *params))wglGetProcAddress("glGetTextureParameterfv");
	glGetTextureParameterIiv = (void (*)(GLuint texture, GLenum pname, GLint *params))wglGetProcAddress("glGetTextureParameterIiv");
	glGetTextureParameterIuiv = (void (*)(GLuint texture, GLenum pname, GLuint *params))wglGetProcAddress("glGetTextureParameterIuiv");
	glGetTextureParameteriv = (void (*)(GLuint texture, GLenum pname, GLint *params))wglGetProcAddress("glGetTextureParameteriv");
	glCreateVertexArrays = (void (*)(GLsizei n, GLuint *arrays))wglGetProcAddress("glCreateVertexArrays");
	glDisableVertexArrayAttrib = (void (*)(GLuint vaobj, GLuint index))wglGetProcAddress("glDisableVertexArrayAttrib");
	glEnableVertexArrayAttrib = (void (*)(GLuint vaobj, GLuint index))wglGetProcAddress("glEnableVertexArrayAttrib");
	glVertexArrayElementBuffer = (void (*)(GLuint vaobj, GLuint buffer))wglGetProcAddress("glVertexArrayElementBuffer");
	glVertexArrayVertexBuffer = (void (*)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))wglGetProcAddress("glVertexArrayVertexBuffer");
	glVertexArrayVertexBuffers = (void (*)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides))wglGetProcAddress("glVertexArrayVertexBuffers");
	glVertexArrayAttribBinding = (void (*)(GLuint vaobj, GLuint attribindex, GLuint bindingindex))wglGetProcAddress("glVertexArrayAttribBinding");
	glVertexArrayAttribFormat = (void (*)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))wglGetProcAddress("glVertexArrayAttribFormat");
	glVertexArrayAttribIFormat = (void (*)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))wglGetProcAddress("glVertexArrayAttribIFormat");
	glVertexArrayAttribLFormat = (void (*)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))wglGetProcAddress("glVertexArrayAttribLFormat");
	glVertexArrayBindingDivisor = (void (*)(GLuint vaobj, GLuint bindingindex, GLuint divisor))wglGetProcAddress("glVertexArrayBindingDivisor");
	glGetVertexArrayiv = (void (*)(GLuint vaobj, GLenum pname, GLint *param))wglGetProcAddress("glGetVertexArrayiv");
	glGetVertexArrayIndexediv = (void (*)(GLuint vaobj, GLuint index, GLenum pname, GLint *param))wglGetProcAddress("glGetVertexArrayIndexediv");
	glGetVertexArrayIndexed64iv = (void (*)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param))wglGetProcAddress("glGetVertexArrayIndexed64iv");
	glCreateSamplers = (void (*)(GLsizei n, GLuint *samplers))wglGetProcAddress("glCreateSamplers");
	glCreateProgramPipelines = (void (*)(GLsizei n, GLuint *pipelines))wglGetProcAddress("glCreateProgramPipelines");
	glCreateQueries = (void (*)(GLenum target, GLsizei n, GLuint *ids))wglGetProcAddress("glCreateQueries");
	glGetQueryBufferObjecti64v = (void (*)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset))wglGetProcAddress("glGetQueryBufferObjecti64v");
	glGetQueryBufferObjectiv = (void (*)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset))wglGetProcAddress("glGetQueryBufferObjectiv");
	glGetQueryBufferObjectui64v = (void (*)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset))wglGetProcAddress("glGetQueryBufferObjectui64v");
	glGetQueryBufferObjectuiv = (void (*)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset))wglGetProcAddress("glGetQueryBufferObjectuiv");
	glMemoryBarrierByRegion = (void (*)(GLbitfield barriers))wglGetProcAddress("glMemoryBarrierByRegion");
	glGetTextureSubImage = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels))wglGetProcAddress("glGetTextureSubImage");
	glGetCompressedTextureSubImage = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels))wglGetProcAddress("glGetCompressedTextureSubImage");
	glGetGraphicsResetStatus = (GLenum (*)(void))wglGetProcAddress("glGetGraphicsResetStatus");
	glGetnCompressedTexImage = (void (*)(GLenum target, GLint lod, GLsizei bufSize, void *pixels))wglGetProcAddress("glGetnCompressedTexImage");
	glGetnTexImage = (void (*)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels))wglGetProcAddress("glGetnTexImage");
	glGetnUniformdv = (void (*)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params))wglGetProcAddress("glGetnUniformdv");
	glGetnUniformfv = (void (*)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params))wglGetProcAddress("glGetnUniformfv");
	glGetnUniformiv = (void (*)(GLuint program, GLint location, GLsizei bufSize, GLint *params))wglGetProcAddress("glGetnUniformiv");
	glGetnUniformuiv = (void (*)(GLuint program, GLint location, GLsizei bufSize, GLuint *params))wglGetProcAddress("glGetnUniformuiv");
	glReadnPixels = (void (*)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))wglGetProcAddress("glReadnPixels");
	glGetnMapdv = (void (*)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v))wglGetProcAddress("glGetnMapdv");
	glGetnMapfv = (void (*)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v))wglGetProcAddress("glGetnMapfv");
	glGetnMapiv = (void (*)(GLenum target, GLenum query, GLsizei bufSize, GLint *v))wglGetProcAddress("glGetnMapiv");
	glGetnPixelMapfv = (void (*)(GLenum map, GLsizei bufSize, GLfloat *values))wglGetProcAddress("glGetnPixelMapfv");
	glGetnPixelMapuiv = (void (*)(GLenum map, GLsizei bufSize, GLuint *values))wglGetProcAddress("glGetnPixelMapuiv");
	glGetnPixelMapusv = (void (*)(GLenum map, GLsizei bufSize, GLushort *values))wglGetProcAddress("glGetnPixelMapusv");
	glGetnPolygonStipple = (void (*)(GLsizei bufSize, GLubyte *pattern))wglGetProcAddress("glGetnPolygonStipple");
	glGetnColorTable = (void (*)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table))wglGetProcAddress("glGetnColorTable");
	glGetnConvolutionFilter = (void (*)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image))wglGetProcAddress("glGetnConvolutionFilter");
	glGetnSeparableFilter = (void (*)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span))wglGetProcAddress("glGetnSeparableFilter");
	glGetnHistogram = (void (*)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values))wglGetProcAddress("glGetnHistogram");
	glGetnMinmax = (void (*)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values))wglGetProcAddress("glGetnMinmax");
	glTextureBarrier = (void (*)(void))wglGetProcAddress("glTextureBarrier");
	glGetTextureHandleARB = (GLuint64 (*)(GLuint texture))wglGetProcAddress("glGetTextureHandleARB");
	glGetTextureSamplerHandleARB = (GLuint64 (*)(GLuint texture, GLuint sampler))wglGetProcAddress("glGetTextureSamplerHandleARB");
	glMakeTextureHandleResidentARB = (void (*)(GLuint64 handle))wglGetProcAddress("glMakeTextureHandleResidentARB");
	glMakeTextureHandleNonResidentARB = (void (*)(GLuint64 handle))wglGetProcAddress("glMakeTextureHandleNonResidentARB");
	glGetImageHandleARB = (GLuint64 (*)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format))wglGetProcAddress("glGetImageHandleARB");
	glMakeImageHandleResidentARB = (void (*)(GLuint64 handle, GLenum access))wglGetProcAddress("glMakeImageHandleResidentARB");
	glMakeImageHandleNonResidentARB = (void (*)(GLuint64 handle))wglGetProcAddress("glMakeImageHandleNonResidentARB");
	glUniformHandleui64ARB = (void (*)(GLint location, GLuint64 value))wglGetProcAddress("glUniformHandleui64ARB");
	glUniformHandleui64vARB = (void (*)(GLint location, GLsizei count, const GLuint64 *value))wglGetProcAddress("glUniformHandleui64vARB");
	glProgramUniformHandleui64ARB = (void (*)(GLuint program, GLint location, GLuint64 value))wglGetProcAddress("glProgramUniformHandleui64ARB");
	glProgramUniformHandleui64vARB = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint64 *values))wglGetProcAddress("glProgramUniformHandleui64vARB");
	glIsTextureHandleResidentARB = (GLboolean (*)(GLuint64 handle))wglGetProcAddress("glIsTextureHandleResidentARB");
	glIsImageHandleResidentARB = (GLboolean (*)(GLuint64 handle))wglGetProcAddress("glIsImageHandleResidentARB");
	glVertexAttribL1ui64ARB = (void (*)(GLuint index, GLuint64EXT x))wglGetProcAddress("glVertexAttribL1ui64ARB");
	glVertexAttribL1ui64vARB = (void (*)(GLuint index, const GLuint64EXT *v))wglGetProcAddress("glVertexAttribL1ui64vARB");
	glGetVertexAttribLui64vARB = (void (*)(GLuint index, GLenum pname, GLuint64EXT *params))wglGetProcAddress("glGetVertexAttribLui64vARB");
	glCreateSyncFromCLeventARB = (GLsync (*)(struct _cl_context *context, struct _cl_event *event, GLbitfield flags))wglGetProcAddress("glCreateSyncFromCLeventARB");
	glClampColorARB = (void (*)(GLenum target, GLenum clamp))wglGetProcAddress("glClampColorARB");
	glDispatchComputeGroupSizeARB = (void (*)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z))wglGetProcAddress("glDispatchComputeGroupSizeARB");
	glDebugMessageControlARB = (void (*)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))wglGetProcAddress("glDebugMessageControlARB");
	glDebugMessageInsertARB = (void (*)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))wglGetProcAddress("glDebugMessageInsertARB");
	glDebugMessageCallbackARB = (void (*)(GLDEBUGPROCARB callback, const void *userParam))wglGetProcAddress("glDebugMessageCallbackARB");
	glGetDebugMessageLogARB = (GLuint (*)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))wglGetProcAddress("glGetDebugMessageLogARB");
	glDrawBuffersARB = (void (*)(GLsizei n, const GLenum *bufs))wglGetProcAddress("glDrawBuffersARB");
	glBlendEquationiARB = (void (*)(GLuint buf, GLenum mode))wglGetProcAddress("glBlendEquationiARB");
	glBlendEquationSeparateiARB = (void (*)(GLuint buf, GLenum modeRGB, GLenum modeAlpha))wglGetProcAddress("glBlendEquationSeparateiARB");
	glBlendFunciARB = (void (*)(GLuint buf, GLenum src, GLenum dst))wglGetProcAddress("glBlendFunciARB");
	glBlendFuncSeparateiARB = (void (*)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))wglGetProcAddress("glBlendFuncSeparateiARB");
	glDrawArraysInstancedARB = (void (*)(GLenum mode, GLint first, GLsizei count, GLsizei primcount))wglGetProcAddress("glDrawArraysInstancedARB");
	glDrawElementsInstancedARB = (void (*)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))wglGetProcAddress("glDrawElementsInstancedARB");
	glProgramStringARB = (void (*)(GLenum target, GLenum format, GLsizei len, const void *string))wglGetProcAddress("glProgramStringARB");
	glBindProgramARB = (void (*)(GLenum target, GLuint program))wglGetProcAddress("glBindProgramARB");
	glDeleteProgramsARB = (void (*)(GLsizei n, const GLuint *programs))wglGetProcAddress("glDeleteProgramsARB");
	glGenProgramsARB = (void (*)(GLsizei n, GLuint *programs))wglGetProcAddress("glGenProgramsARB");
	glProgramEnvParameter4dARB = (void (*)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glProgramEnvParameter4dARB");
	glProgramEnvParameter4dvARB = (void (*)(GLenum target, GLuint index, const GLdouble *params))wglGetProcAddress("glProgramEnvParameter4dvARB");
	glProgramEnvParameter4fARB = (void (*)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glProgramEnvParameter4fARB");
	glProgramEnvParameter4fvARB = (void (*)(GLenum target, GLuint index, const GLfloat *params))wglGetProcAddress("glProgramEnvParameter4fvARB");
	glProgramLocalParameter4dARB = (void (*)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glProgramLocalParameter4dARB");
	glProgramLocalParameter4dvARB = (void (*)(GLenum target, GLuint index, const GLdouble *params))wglGetProcAddress("glProgramLocalParameter4dvARB");
	glProgramLocalParameter4fARB = (void (*)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glProgramLocalParameter4fARB");
	glProgramLocalParameter4fvARB = (void (*)(GLenum target, GLuint index, const GLfloat *params))wglGetProcAddress("glProgramLocalParameter4fvARB");
	glGetProgramEnvParameterdvARB = (void (*)(GLenum target, GLuint index, GLdouble *params))wglGetProcAddress("glGetProgramEnvParameterdvARB");
	glGetProgramEnvParameterfvARB = (void (*)(GLenum target, GLuint index, GLfloat *params))wglGetProcAddress("glGetProgramEnvParameterfvARB");
	glGetProgramLocalParameterdvARB = (void (*)(GLenum target, GLuint index, GLdouble *params))wglGetProcAddress("glGetProgramLocalParameterdvARB");
	glGetProgramLocalParameterfvARB = (void (*)(GLenum target, GLuint index, GLfloat *params))wglGetProcAddress("glGetProgramLocalParameterfvARB");
	glGetProgramivARB = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetProgramivARB");
	glGetProgramStringARB = (void (*)(GLenum target, GLenum pname, void *string))wglGetProcAddress("glGetProgramStringARB");
	glIsProgramARB = (GLboolean (*)(GLuint program))wglGetProcAddress("glIsProgramARB");
	glProgramParameteriARB = (void (*)(GLuint program, GLenum pname, GLint value))wglGetProcAddress("glProgramParameteriARB");
	glFramebufferTextureARB = (void (*)(GLenum target, GLenum attachment, GLuint texture, GLint level))wglGetProcAddress("glFramebufferTextureARB");
	glFramebufferTextureLayerARB = (void (*)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))wglGetProcAddress("glFramebufferTextureLayerARB");
	glFramebufferTextureFaceARB = (void (*)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face))wglGetProcAddress("glFramebufferTextureFaceARB");
	glColorTable = (void (*)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table))wglGetProcAddress("glColorTable");
	glColorTableParameterfv = (void (*)(GLenum target, GLenum pname, const GLfloat *params))wglGetProcAddress("glColorTableParameterfv");
	glColorTableParameteriv = (void (*)(GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glColorTableParameteriv");
	glCopyColorTable = (void (*)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width))wglGetProcAddress("glCopyColorTable");
	glGetColorTable = (void (*)(GLenum target, GLenum format, GLenum type, void *table))wglGetProcAddress("glGetColorTable");
	glGetColorTableParameterfv = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetColorTableParameterfv");
	glGetColorTableParameteriv = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetColorTableParameteriv");
	glColorSubTable = (void (*)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data))wglGetProcAddress("glColorSubTable");
	glCopyColorSubTable = (void (*)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width))wglGetProcAddress("glCopyColorSubTable");
	glConvolutionFilter1D = (void (*)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image))wglGetProcAddress("glConvolutionFilter1D");
	glConvolutionFilter2D = (void (*)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image))wglGetProcAddress("glConvolutionFilter2D");
	glConvolutionParameterf = (void (*)(GLenum target, GLenum pname, GLfloat params))wglGetProcAddress("glConvolutionParameterf");
	glConvolutionParameterfv = (void (*)(GLenum target, GLenum pname, const GLfloat *params))wglGetProcAddress("glConvolutionParameterfv");
	glConvolutionParameteri = (void (*)(GLenum target, GLenum pname, GLint params))wglGetProcAddress("glConvolutionParameteri");
	glConvolutionParameteriv = (void (*)(GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glConvolutionParameteriv");
	glCopyConvolutionFilter1D = (void (*)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width))wglGetProcAddress("glCopyConvolutionFilter1D");
	glCopyConvolutionFilter2D = (void (*)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyConvolutionFilter2D");
	glGetConvolutionFilter = (void (*)(GLenum target, GLenum format, GLenum type, void *image))wglGetProcAddress("glGetConvolutionFilter");
	glGetConvolutionParameterfv = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetConvolutionParameterfv");
	glGetConvolutionParameteriv = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetConvolutionParameteriv");
	glGetSeparableFilter = (void (*)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span))wglGetProcAddress("glGetSeparableFilter");
	glSeparableFilter2D = (void (*)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column))wglGetProcAddress("glSeparableFilter2D");
	glGetHistogram = (void (*)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values))wglGetProcAddress("glGetHistogram");
	glGetHistogramParameterfv = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetHistogramParameterfv");
	glGetHistogramParameteriv = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetHistogramParameteriv");
	glGetMinmax = (void (*)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values))wglGetProcAddress("glGetMinmax");
	glGetMinmaxParameterfv = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetMinmaxParameterfv");
	glGetMinmaxParameteriv = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetMinmaxParameteriv");
	glHistogram = (void (*)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink))wglGetProcAddress("glHistogram");
	glMinmax = (void (*)(GLenum target, GLenum internalformat, GLboolean sink))wglGetProcAddress("glMinmax");
	glResetHistogram = (void (*)(GLenum target))wglGetProcAddress("glResetHistogram");
	glResetMinmax = (void (*)(GLenum target))wglGetProcAddress("glResetMinmax");
	glMultiDrawArraysIndirectCountARB = (void (*)(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))wglGetProcAddress("glMultiDrawArraysIndirectCountARB");
	glMultiDrawElementsIndirectCountARB = (void (*)(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))wglGetProcAddress("glMultiDrawElementsIndirectCountARB");
	glVertexAttribDivisorARB = (void (*)(GLuint index, GLuint divisor))wglGetProcAddress("glVertexAttribDivisorARB");
	glCurrentPaletteMatrixARB = (void (*)(GLint index))wglGetProcAddress("glCurrentPaletteMatrixARB");
	glMatrixIndexubvARB = (void (*)(GLint size, const GLubyte *indices))wglGetProcAddress("glMatrixIndexubvARB");
	glMatrixIndexusvARB = (void (*)(GLint size, const GLushort *indices))wglGetProcAddress("glMatrixIndexusvARB");
	glMatrixIndexuivARB = (void (*)(GLint size, const GLuint *indices))wglGetProcAddress("glMatrixIndexuivARB");
	glMatrixIndexPointerARB = (void (*)(GLint size, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glMatrixIndexPointerARB");
	glSampleCoverageARB = (void (*)(GLfloat value, GLboolean invert))wglGetProcAddress("glSampleCoverageARB");
	glActiveTextureARB = (void (*)(GLenum texture))wglGetProcAddress("glActiveTextureARB");
	glClientActiveTextureARB = (void (*)(GLenum texture))wglGetProcAddress("glClientActiveTextureARB");
	glMultiTexCoord1dARB = (void (*)(GLenum target, GLdouble s))wglGetProcAddress("glMultiTexCoord1dARB");
	glMultiTexCoord1dvARB = (void (*)(GLenum target, const GLdouble *v))wglGetProcAddress("glMultiTexCoord1dvARB");
	glMultiTexCoord1fARB = (void (*)(GLenum target, GLfloat s))wglGetProcAddress("glMultiTexCoord1fARB");
	glMultiTexCoord1fvARB = (void (*)(GLenum target, const GLfloat *v))wglGetProcAddress("glMultiTexCoord1fvARB");
	glMultiTexCoord1iARB = (void (*)(GLenum target, GLint s))wglGetProcAddress("glMultiTexCoord1iARB");
	glMultiTexCoord1ivARB = (void (*)(GLenum target, const GLint *v))wglGetProcAddress("glMultiTexCoord1ivARB");
	glMultiTexCoord1sARB = (void (*)(GLenum target, GLshort s))wglGetProcAddress("glMultiTexCoord1sARB");
	glMultiTexCoord1svARB = (void (*)(GLenum target, const GLshort *v))wglGetProcAddress("glMultiTexCoord1svARB");
	glMultiTexCoord2dARB = (void (*)(GLenum target, GLdouble s, GLdouble t))wglGetProcAddress("glMultiTexCoord2dARB");
	glMultiTexCoord2dvARB = (void (*)(GLenum target, const GLdouble *v))wglGetProcAddress("glMultiTexCoord2dvARB");
	glMultiTexCoord2fARB = (void (*)(GLenum target, GLfloat s, GLfloat t))wglGetProcAddress("glMultiTexCoord2fARB");
	glMultiTexCoord2fvARB = (void (*)(GLenum target, const GLfloat *v))wglGetProcAddress("glMultiTexCoord2fvARB");
	glMultiTexCoord2iARB = (void (*)(GLenum target, GLint s, GLint t))wglGetProcAddress("glMultiTexCoord2iARB");
	glMultiTexCoord2ivARB = (void (*)(GLenum target, const GLint *v))wglGetProcAddress("glMultiTexCoord2ivARB");
	glMultiTexCoord2sARB = (void (*)(GLenum target, GLshort s, GLshort t))wglGetProcAddress("glMultiTexCoord2sARB");
	glMultiTexCoord2svARB = (void (*)(GLenum target, const GLshort *v))wglGetProcAddress("glMultiTexCoord2svARB");
	glMultiTexCoord3dARB = (void (*)(GLenum target, GLdouble s, GLdouble t, GLdouble r))wglGetProcAddress("glMultiTexCoord3dARB");
	glMultiTexCoord3dvARB = (void (*)(GLenum target, const GLdouble *v))wglGetProcAddress("glMultiTexCoord3dvARB");
	glMultiTexCoord3fARB = (void (*)(GLenum target, GLfloat s, GLfloat t, GLfloat r))wglGetProcAddress("glMultiTexCoord3fARB");
	glMultiTexCoord3fvARB = (void (*)(GLenum target, const GLfloat *v))wglGetProcAddress("glMultiTexCoord3fvARB");
	glMultiTexCoord3iARB = (void (*)(GLenum target, GLint s, GLint t, GLint r))wglGetProcAddress("glMultiTexCoord3iARB");
	glMultiTexCoord3ivARB = (void (*)(GLenum target, const GLint *v))wglGetProcAddress("glMultiTexCoord3ivARB");
	glMultiTexCoord3sARB = (void (*)(GLenum target, GLshort s, GLshort t, GLshort r))wglGetProcAddress("glMultiTexCoord3sARB");
	glMultiTexCoord3svARB = (void (*)(GLenum target, const GLshort *v))wglGetProcAddress("glMultiTexCoord3svARB");
	glMultiTexCoord4dARB = (void (*)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q))wglGetProcAddress("glMultiTexCoord4dARB");
	glMultiTexCoord4dvARB = (void (*)(GLenum target, const GLdouble *v))wglGetProcAddress("glMultiTexCoord4dvARB");
	glMultiTexCoord4fARB = (void (*)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q))wglGetProcAddress("glMultiTexCoord4fARB");
	glMultiTexCoord4fvARB = (void (*)(GLenum target, const GLfloat *v))wglGetProcAddress("glMultiTexCoord4fvARB");
	glMultiTexCoord4iARB = (void (*)(GLenum target, GLint s, GLint t, GLint r, GLint q))wglGetProcAddress("glMultiTexCoord4iARB");
	glMultiTexCoord4ivARB = (void (*)(GLenum target, const GLint *v))wglGetProcAddress("glMultiTexCoord4ivARB");
	glMultiTexCoord4sARB = (void (*)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q))wglGetProcAddress("glMultiTexCoord4sARB");
	glMultiTexCoord4svARB = (void (*)(GLenum target, const GLshort *v))wglGetProcAddress("glMultiTexCoord4svARB");
	glGenQueriesARB = (void (*)(GLsizei n, GLuint *ids))wglGetProcAddress("glGenQueriesARB");
	glDeleteQueriesARB = (void (*)(GLsizei n, const GLuint *ids))wglGetProcAddress("glDeleteQueriesARB");
	glIsQueryARB = (GLboolean (*)(GLuint id))wglGetProcAddress("glIsQueryARB");
	glBeginQueryARB = (void (*)(GLenum target, GLuint id))wglGetProcAddress("glBeginQueryARB");
	glEndQueryARB = (void (*)(GLenum target))wglGetProcAddress("glEndQueryARB");
	glGetQueryivARB = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetQueryivARB");
	glGetQueryObjectivARB = (void (*)(GLuint id, GLenum pname, GLint *params))wglGetProcAddress("glGetQueryObjectivARB");
	glGetQueryObjectuivARB = (void (*)(GLuint id, GLenum pname, GLuint *params))wglGetProcAddress("glGetQueryObjectuivARB");
	glPointParameterfARB = (void (*)(GLenum pname, GLfloat param))wglGetProcAddress("glPointParameterfARB");
	glPointParameterfvARB = (void (*)(GLenum pname, const GLfloat *params))wglGetProcAddress("glPointParameterfvARB");
	glGetGraphicsResetStatusARB = (GLenum (*)(void))wglGetProcAddress("glGetGraphicsResetStatusARB");
	glGetnTexImageARB = (void (*)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img))wglGetProcAddress("glGetnTexImageARB");
	glReadnPixelsARB = (void (*)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))wglGetProcAddress("glReadnPixelsARB");
	glGetnCompressedTexImageARB = (void (*)(GLenum target, GLint lod, GLsizei bufSize, void *img))wglGetProcAddress("glGetnCompressedTexImageARB");
	glGetnUniformfvARB = (void (*)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params))wglGetProcAddress("glGetnUniformfvARB");
	glGetnUniformivARB = (void (*)(GLuint program, GLint location, GLsizei bufSize, GLint *params))wglGetProcAddress("glGetnUniformivARB");
	glGetnUniformuivARB = (void (*)(GLuint program, GLint location, GLsizei bufSize, GLuint *params))wglGetProcAddress("glGetnUniformuivARB");
	glGetnUniformdvARB = (void (*)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params))wglGetProcAddress("glGetnUniformdvARB");
	glGetnMapdvARB = (void (*)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v))wglGetProcAddress("glGetnMapdvARB");
	glGetnMapfvARB = (void (*)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v))wglGetProcAddress("glGetnMapfvARB");
	glGetnMapivARB = (void (*)(GLenum target, GLenum query, GLsizei bufSize, GLint *v))wglGetProcAddress("glGetnMapivARB");
	glGetnPixelMapfvARB = (void (*)(GLenum map, GLsizei bufSize, GLfloat *values))wglGetProcAddress("glGetnPixelMapfvARB");
	glGetnPixelMapuivARB = (void (*)(GLenum map, GLsizei bufSize, GLuint *values))wglGetProcAddress("glGetnPixelMapuivARB");
	glGetnPixelMapusvARB = (void (*)(GLenum map, GLsizei bufSize, GLushort *values))wglGetProcAddress("glGetnPixelMapusvARB");
	glGetnPolygonStippleARB = (void (*)(GLsizei bufSize, GLubyte *pattern))wglGetProcAddress("glGetnPolygonStippleARB");
	glGetnColorTableARB = (void (*)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table))wglGetProcAddress("glGetnColorTableARB");
	glGetnConvolutionFilterARB = (void (*)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image))wglGetProcAddress("glGetnConvolutionFilterARB");
	glGetnSeparableFilterARB = (void (*)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span))wglGetProcAddress("glGetnSeparableFilterARB");
	glGetnHistogramARB = (void (*)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values))wglGetProcAddress("glGetnHistogramARB");
	glGetnMinmaxARB = (void (*)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values))wglGetProcAddress("glGetnMinmaxARB");
	glMinSampleShadingARB = (void (*)(GLfloat value))wglGetProcAddress("glMinSampleShadingARB");
	glDeleteObjectARB = (void (*)(GLhandleARB obj))wglGetProcAddress("glDeleteObjectARB");
	glGetHandleARB = (GLhandleARB (*)(GLenum pname))wglGetProcAddress("glGetHandleARB");
	glDetachObjectARB = (void (*)(GLhandleARB containerObj, GLhandleARB attachedObj))wglGetProcAddress("glDetachObjectARB");
	glCreateShaderObjectARB = (GLhandleARB (*)(GLenum shaderType))wglGetProcAddress("glCreateShaderObjectARB");
	glShaderSourceARB = (void (*)(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length))wglGetProcAddress("glShaderSourceARB");
	glCompileShaderARB = (void (*)(GLhandleARB shaderObj))wglGetProcAddress("glCompileShaderARB");
	glCreateProgramObjectARB = (GLhandleARB (*)(void))wglGetProcAddress("glCreateProgramObjectARB");
	glAttachObjectARB = (void (*)(GLhandleARB containerObj, GLhandleARB obj))wglGetProcAddress("glAttachObjectARB");
	glLinkProgramARB = (void (*)(GLhandleARB programObj))wglGetProcAddress("glLinkProgramARB");
	glUseProgramObjectARB = (void (*)(GLhandleARB programObj))wglGetProcAddress("glUseProgramObjectARB");
	glValidateProgramARB = (void (*)(GLhandleARB programObj))wglGetProcAddress("glValidateProgramARB");
	glUniform1fARB = (void (*)(GLint location, GLfloat v0))wglGetProcAddress("glUniform1fARB");
	glUniform2fARB = (void (*)(GLint location, GLfloat v0, GLfloat v1))wglGetProcAddress("glUniform2fARB");
	glUniform3fARB = (void (*)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2))wglGetProcAddress("glUniform3fARB");
	glUniform4fARB = (void (*)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))wglGetProcAddress("glUniform4fARB");
	glUniform1iARB = (void (*)(GLint location, GLint v0))wglGetProcAddress("glUniform1iARB");
	glUniform2iARB = (void (*)(GLint location, GLint v0, GLint v1))wglGetProcAddress("glUniform2iARB");
	glUniform3iARB = (void (*)(GLint location, GLint v0, GLint v1, GLint v2))wglGetProcAddress("glUniform3iARB");
	glUniform4iARB = (void (*)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3))wglGetProcAddress("glUniform4iARB");
	glUniform1fvARB = (void (*)(GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glUniform1fvARB");
	glUniform2fvARB = (void (*)(GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glUniform2fvARB");
	glUniform3fvARB = (void (*)(GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glUniform3fvARB");
	glUniform4fvARB = (void (*)(GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glUniform4fvARB");
	glUniform1ivARB = (void (*)(GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glUniform1ivARB");
	glUniform2ivARB = (void (*)(GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glUniform2ivARB");
	glUniform3ivARB = (void (*)(GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glUniform3ivARB");
	glUniform4ivARB = (void (*)(GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glUniform4ivARB");
	glUniformMatrix2fvARB = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix2fvARB");
	glUniformMatrix3fvARB = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix3fvARB");
	glUniformMatrix4fvARB = (void (*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glUniformMatrix4fvARB");
	glGetObjectParameterfvARB = (void (*)(GLhandleARB obj, GLenum pname, GLfloat *params))wglGetProcAddress("glGetObjectParameterfvARB");
	glGetObjectParameterivARB = (void (*)(GLhandleARB obj, GLenum pname, GLint *params))wglGetProcAddress("glGetObjectParameterivARB");
	glGetInfoLogARB = (void (*)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog))wglGetProcAddress("glGetInfoLogARB");
	glGetAttachedObjectsARB = (void (*)(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj))wglGetProcAddress("glGetAttachedObjectsARB");
	glGetUniformLocationARB = (GLint (*)(GLhandleARB programObj, const GLcharARB *name))wglGetProcAddress("glGetUniformLocationARB");
	glGetActiveUniformARB = (void (*)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name))wglGetProcAddress("glGetActiveUniformARB");
	glGetUniformfvARB = (void (*)(GLhandleARB programObj, GLint location, GLfloat *params))wglGetProcAddress("glGetUniformfvARB");
	glGetUniformivARB = (void (*)(GLhandleARB programObj, GLint location, GLint *params))wglGetProcAddress("glGetUniformivARB");
	glGetShaderSourceARB = (void (*)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source))wglGetProcAddress("glGetShaderSourceARB");
	glNamedStringARB = (void (*)(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string))wglGetProcAddress("glNamedStringARB");
	glDeleteNamedStringARB = (void (*)(GLint namelen, const GLchar *name))wglGetProcAddress("glDeleteNamedStringARB");
	glCompileShaderIncludeARB = (void (*)(GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length))wglGetProcAddress("glCompileShaderIncludeARB");
	glIsNamedStringARB = (GLboolean (*)(GLint namelen, const GLchar *name))wglGetProcAddress("glIsNamedStringARB");
	glGetNamedStringARB = (void (*)(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string))wglGetProcAddress("glGetNamedStringARB");
	glGetNamedStringivARB = (void (*)(GLint namelen, const GLchar *name, GLenum pname, GLint *params))wglGetProcAddress("glGetNamedStringivARB");
	glBufferPageCommitmentARB = (void (*)(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit))wglGetProcAddress("glBufferPageCommitmentARB");
	glNamedBufferPageCommitmentEXT = (void (*)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit))wglGetProcAddress("glNamedBufferPageCommitmentEXT");
	glNamedBufferPageCommitmentARB = (void (*)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit))wglGetProcAddress("glNamedBufferPageCommitmentARB");
	glTexPageCommitmentARB = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident))wglGetProcAddress("glTexPageCommitmentARB");
	glTexBufferARB = (void (*)(GLenum target, GLenum internalformat, GLuint buffer))wglGetProcAddress("glTexBufferARB");
	glCompressedTexImage3DARB = (void (*)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexImage3DARB");
	glCompressedTexImage2DARB = (void (*)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexImage2DARB");
	glCompressedTexImage1DARB = (void (*)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexImage1DARB");
	glCompressedTexSubImage3DARB = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexSubImage3DARB");
	glCompressedTexSubImage2DARB = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexSubImage2DARB");
	glCompressedTexSubImage1DARB = (void (*)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data))wglGetProcAddress("glCompressedTexSubImage1DARB");
	glGetCompressedTexImageARB = (void (*)(GLenum target, GLint level, void *img))wglGetProcAddress("glGetCompressedTexImageARB");
	glLoadTransposeMatrixfARB = (void (*)(const GLfloat *m))wglGetProcAddress("glLoadTransposeMatrixfARB");
	glLoadTransposeMatrixdARB = (void (*)(const GLdouble *m))wglGetProcAddress("glLoadTransposeMatrixdARB");
	glMultTransposeMatrixfARB = (void (*)(const GLfloat *m))wglGetProcAddress("glMultTransposeMatrixfARB");
	glMultTransposeMatrixdARB = (void (*)(const GLdouble *m))wglGetProcAddress("glMultTransposeMatrixdARB");
	glWeightbvARB = (void (*)(GLint size, const GLbyte *weights))wglGetProcAddress("glWeightbvARB");
	glWeightsvARB = (void (*)(GLint size, const GLshort *weights))wglGetProcAddress("glWeightsvARB");
	glWeightivARB = (void (*)(GLint size, const GLint *weights))wglGetProcAddress("glWeightivARB");
	glWeightfvARB = (void (*)(GLint size, const GLfloat *weights))wglGetProcAddress("glWeightfvARB");
	glWeightdvARB = (void (*)(GLint size, const GLdouble *weights))wglGetProcAddress("glWeightdvARB");
	glWeightubvARB = (void (*)(GLint size, const GLubyte *weights))wglGetProcAddress("glWeightubvARB");
	glWeightusvARB = (void (*)(GLint size, const GLushort *weights))wglGetProcAddress("glWeightusvARB");
	glWeightuivARB = (void (*)(GLint size, const GLuint *weights))wglGetProcAddress("glWeightuivARB");
	glWeightPointerARB = (void (*)(GLint size, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glWeightPointerARB");
	glVertexBlendARB = (void (*)(GLint count))wglGetProcAddress("glVertexBlendARB");
	glBindBufferARB = (void (*)(GLenum target, GLuint buffer))wglGetProcAddress("glBindBufferARB");
	glDeleteBuffersARB = (void (*)(GLsizei n, const GLuint *buffers))wglGetProcAddress("glDeleteBuffersARB");
	glGenBuffersARB = (void (*)(GLsizei n, GLuint *buffers))wglGetProcAddress("glGenBuffersARB");
	glIsBufferARB = (GLboolean (*)(GLuint buffer))wglGetProcAddress("glIsBufferARB");
	glBufferDataARB = (void (*)(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage))wglGetProcAddress("glBufferDataARB");
	glBufferSubDataARB = (void (*)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data))wglGetProcAddress("glBufferSubDataARB");
	glGetBufferSubDataARB = (void (*)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data))wglGetProcAddress("glGetBufferSubDataARB");
	glUnmapBufferARB = (GLboolean (*)(GLenum target))wglGetProcAddress("glUnmapBufferARB");
	glGetBufferParameterivARB = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetBufferParameterivARB");
	glGetBufferPointervARB = (void (*)(GLenum target, GLenum pname, void **params))wglGetProcAddress("glGetBufferPointervARB");
	glVertexAttrib1dARB = (void (*)(GLuint index, GLdouble x))wglGetProcAddress("glVertexAttrib1dARB");
	glVertexAttrib1dvARB = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib1dvARB");
	glVertexAttrib1fARB = (void (*)(GLuint index, GLfloat x))wglGetProcAddress("glVertexAttrib1fARB");
	glVertexAttrib1fvARB = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib1fvARB");
	glVertexAttrib1sARB = (void (*)(GLuint index, GLshort x))wglGetProcAddress("glVertexAttrib1sARB");
	glVertexAttrib1svARB = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib1svARB");
	glVertexAttrib2dARB = (void (*)(GLuint index, GLdouble x, GLdouble y))wglGetProcAddress("glVertexAttrib2dARB");
	glVertexAttrib2dvARB = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib2dvARB");
	glVertexAttrib2fARB = (void (*)(GLuint index, GLfloat x, GLfloat y))wglGetProcAddress("glVertexAttrib2fARB");
	glVertexAttrib2fvARB = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib2fvARB");
	glVertexAttrib2sARB = (void (*)(GLuint index, GLshort x, GLshort y))wglGetProcAddress("glVertexAttrib2sARB");
	glVertexAttrib2svARB = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib2svARB");
	glVertexAttrib3dARB = (void (*)(GLuint index, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glVertexAttrib3dARB");
	glVertexAttrib3dvARB = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib3dvARB");
	glVertexAttrib3fARB = (void (*)(GLuint index, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glVertexAttrib3fARB");
	glVertexAttrib3fvARB = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib3fvARB");
	glVertexAttrib3sARB = (void (*)(GLuint index, GLshort x, GLshort y, GLshort z))wglGetProcAddress("glVertexAttrib3sARB");
	glVertexAttrib3svARB = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib3svARB");
	glVertexAttrib4NbvARB = (void (*)(GLuint index, const GLbyte *v))wglGetProcAddress("glVertexAttrib4NbvARB");
	glVertexAttrib4NivARB = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttrib4NivARB");
	glVertexAttrib4NsvARB = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib4NsvARB");
	glVertexAttrib4NubARB = (void (*)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w))wglGetProcAddress("glVertexAttrib4NubARB");
	glVertexAttrib4NubvARB = (void (*)(GLuint index, const GLubyte *v))wglGetProcAddress("glVertexAttrib4NubvARB");
	glVertexAttrib4NuivARB = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttrib4NuivARB");
	glVertexAttrib4NusvARB = (void (*)(GLuint index, const GLushort *v))wglGetProcAddress("glVertexAttrib4NusvARB");
	glVertexAttrib4bvARB = (void (*)(GLuint index, const GLbyte *v))wglGetProcAddress("glVertexAttrib4bvARB");
	glVertexAttrib4dARB = (void (*)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glVertexAttrib4dARB");
	glVertexAttrib4dvARB = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib4dvARB");
	glVertexAttrib4fARB = (void (*)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glVertexAttrib4fARB");
	glVertexAttrib4fvARB = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib4fvARB");
	glVertexAttrib4ivARB = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttrib4ivARB");
	glVertexAttrib4sARB = (void (*)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w))wglGetProcAddress("glVertexAttrib4sARB");
	glVertexAttrib4svARB = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib4svARB");
	glVertexAttrib4ubvARB = (void (*)(GLuint index, const GLubyte *v))wglGetProcAddress("glVertexAttrib4ubvARB");
	glVertexAttrib4uivARB = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttrib4uivARB");
	glVertexAttrib4usvARB = (void (*)(GLuint index, const GLushort *v))wglGetProcAddress("glVertexAttrib4usvARB");
	glVertexAttribPointerARB = (void (*)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))wglGetProcAddress("glVertexAttribPointerARB");
	glEnableVertexAttribArrayARB = (void (*)(GLuint index))wglGetProcAddress("glEnableVertexAttribArrayARB");
	glDisableVertexAttribArrayARB = (void (*)(GLuint index))wglGetProcAddress("glDisableVertexAttribArrayARB");
	glGetVertexAttribdvARB = (void (*)(GLuint index, GLenum pname, GLdouble *params))wglGetProcAddress("glGetVertexAttribdvARB");
	glGetVertexAttribfvARB = (void (*)(GLuint index, GLenum pname, GLfloat *params))wglGetProcAddress("glGetVertexAttribfvARB");
	glGetVertexAttribivARB = (void (*)(GLuint index, GLenum pname, GLint *params))wglGetProcAddress("glGetVertexAttribivARB");
	glGetVertexAttribPointervARB = (void (*)(GLuint index, GLenum pname, void **pointer))wglGetProcAddress("glGetVertexAttribPointervARB");
	glBindAttribLocationARB = (void (*)(GLhandleARB programObj, GLuint index, const GLcharARB *name))wglGetProcAddress("glBindAttribLocationARB");
	glGetActiveAttribARB = (void (*)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name))wglGetProcAddress("glGetActiveAttribARB");
	glGetAttribLocationARB = (GLint (*)(GLhandleARB programObj, const GLcharARB *name))wglGetProcAddress("glGetAttribLocationARB");
	glWindowPos2dARB = (void (*)(GLdouble x, GLdouble y))wglGetProcAddress("glWindowPos2dARB");
	glWindowPos2dvARB = (void (*)(const GLdouble *v))wglGetProcAddress("glWindowPos2dvARB");
	glWindowPos2fARB = (void (*)(GLfloat x, GLfloat y))wglGetProcAddress("glWindowPos2fARB");
	glWindowPos2fvARB = (void (*)(const GLfloat *v))wglGetProcAddress("glWindowPos2fvARB");
	glWindowPos2iARB = (void (*)(GLint x, GLint y))wglGetProcAddress("glWindowPos2iARB");
	glWindowPos2ivARB = (void (*)(const GLint *v))wglGetProcAddress("glWindowPos2ivARB");
	glWindowPos2sARB = (void (*)(GLshort x, GLshort y))wglGetProcAddress("glWindowPos2sARB");
	glWindowPos2svARB = (void (*)(const GLshort *v))wglGetProcAddress("glWindowPos2svARB");
	glWindowPos3dARB = (void (*)(GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glWindowPos3dARB");
	glWindowPos3dvARB = (void (*)(const GLdouble *v))wglGetProcAddress("glWindowPos3dvARB");
	glWindowPos3fARB = (void (*)(GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glWindowPos3fARB");
	glWindowPos3fvARB = (void (*)(const GLfloat *v))wglGetProcAddress("glWindowPos3fvARB");
	glWindowPos3iARB = (void (*)(GLint x, GLint y, GLint z))wglGetProcAddress("glWindowPos3iARB");
	glWindowPos3ivARB = (void (*)(const GLint *v))wglGetProcAddress("glWindowPos3ivARB");
	glWindowPos3sARB = (void (*)(GLshort x, GLshort y, GLshort z))wglGetProcAddress("glWindowPos3sARB");
	glWindowPos3svARB = (void (*)(const GLshort *v))wglGetProcAddress("glWindowPos3svARB");
	glBlendBarrierKHR = (void (*)(void))wglGetProcAddress("glBlendBarrierKHR");
	glMultiTexCoord1bOES = (void (*)(GLenum texture, GLbyte s))wglGetProcAddress("glMultiTexCoord1bOES");
	glMultiTexCoord1bvOES = (void (*)(GLenum texture, const GLbyte *coords))wglGetProcAddress("glMultiTexCoord1bvOES");
	glMultiTexCoord2bOES = (void (*)(GLenum texture, GLbyte s, GLbyte t))wglGetProcAddress("glMultiTexCoord2bOES");
	glMultiTexCoord2bvOES = (void (*)(GLenum texture, const GLbyte *coords))wglGetProcAddress("glMultiTexCoord2bvOES");
	glMultiTexCoord3bOES = (void (*)(GLenum texture, GLbyte s, GLbyte t, GLbyte r))wglGetProcAddress("glMultiTexCoord3bOES");
	glMultiTexCoord3bvOES = (void (*)(GLenum texture, const GLbyte *coords))wglGetProcAddress("glMultiTexCoord3bvOES");
	glMultiTexCoord4bOES = (void (*)(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q))wglGetProcAddress("glMultiTexCoord4bOES");
	glMultiTexCoord4bvOES = (void (*)(GLenum texture, const GLbyte *coords))wglGetProcAddress("glMultiTexCoord4bvOES");
	glTexCoord1bOES = (void (*)(GLbyte s))wglGetProcAddress("glTexCoord1bOES");
	glTexCoord1bvOES = (void (*)(const GLbyte *coords))wglGetProcAddress("glTexCoord1bvOES");
	glTexCoord2bOES = (void (*)(GLbyte s, GLbyte t))wglGetProcAddress("glTexCoord2bOES");
	glTexCoord2bvOES = (void (*)(const GLbyte *coords))wglGetProcAddress("glTexCoord2bvOES");
	glTexCoord3bOES = (void (*)(GLbyte s, GLbyte t, GLbyte r))wglGetProcAddress("glTexCoord3bOES");
	glTexCoord3bvOES = (void (*)(const GLbyte *coords))wglGetProcAddress("glTexCoord3bvOES");
	glTexCoord4bOES = (void (*)(GLbyte s, GLbyte t, GLbyte r, GLbyte q))wglGetProcAddress("glTexCoord4bOES");
	glTexCoord4bvOES = (void (*)(const GLbyte *coords))wglGetProcAddress("glTexCoord4bvOES");
	glVertex2bOES = (void (*)(GLbyte x, GLbyte y))wglGetProcAddress("glVertex2bOES");
	glVertex2bvOES = (void (*)(const GLbyte *coords))wglGetProcAddress("glVertex2bvOES");
	glVertex3bOES = (void (*)(GLbyte x, GLbyte y, GLbyte z))wglGetProcAddress("glVertex3bOES");
	glVertex3bvOES = (void (*)(const GLbyte *coords))wglGetProcAddress("glVertex3bvOES");
	glVertex4bOES = (void (*)(GLbyte x, GLbyte y, GLbyte z, GLbyte w))wglGetProcAddress("glVertex4bOES");
	glVertex4bvOES = (void (*)(const GLbyte *coords))wglGetProcAddress("glVertex4bvOES");
	glAlphaFuncxOES = (void (*)(GLenum func, GLfixed ref))wglGetProcAddress("glAlphaFuncxOES");
	glClearColorxOES = (void (*)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha))wglGetProcAddress("glClearColorxOES");
	glClearDepthxOES = (void (*)(GLfixed depth))wglGetProcAddress("glClearDepthxOES");
	glClipPlanexOES = (void (*)(GLenum plane, const GLfixed *equation))wglGetProcAddress("glClipPlanexOES");
	glColor4xOES = (void (*)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha))wglGetProcAddress("glColor4xOES");
	glDepthRangexOES = (void (*)(GLfixed n, GLfixed f))wglGetProcAddress("glDepthRangexOES");
	glFogxOES = (void (*)(GLenum pname, GLfixed param))wglGetProcAddress("glFogxOES");
	glFogxvOES = (void (*)(GLenum pname, const GLfixed *param))wglGetProcAddress("glFogxvOES");
	glFrustumxOES = (void (*)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f))wglGetProcAddress("glFrustumxOES");
	glGetClipPlanexOES = (void (*)(GLenum plane, GLfixed *equation))wglGetProcAddress("glGetClipPlanexOES");
	glGetFixedvOES = (void (*)(GLenum pname, GLfixed *params))wglGetProcAddress("glGetFixedvOES");
	glGetTexEnvxvOES = (void (*)(GLenum target, GLenum pname, GLfixed *params))wglGetProcAddress("glGetTexEnvxvOES");
	glGetTexParameterxvOES = (void (*)(GLenum target, GLenum pname, GLfixed *params))wglGetProcAddress("glGetTexParameterxvOES");
	glLightModelxOES = (void (*)(GLenum pname, GLfixed param))wglGetProcAddress("glLightModelxOES");
	glLightModelxvOES = (void (*)(GLenum pname, const GLfixed *param))wglGetProcAddress("glLightModelxvOES");
	glLightxOES = (void (*)(GLenum light, GLenum pname, GLfixed param))wglGetProcAddress("glLightxOES");
	glLightxvOES = (void (*)(GLenum light, GLenum pname, const GLfixed *params))wglGetProcAddress("glLightxvOES");
	glLineWidthxOES = (void (*)(GLfixed width))wglGetProcAddress("glLineWidthxOES");
	glLoadMatrixxOES = (void (*)(const GLfixed *m))wglGetProcAddress("glLoadMatrixxOES");
	glMaterialxOES = (void (*)(GLenum face, GLenum pname, GLfixed param))wglGetProcAddress("glMaterialxOES");
	glMaterialxvOES = (void (*)(GLenum face, GLenum pname, const GLfixed *param))wglGetProcAddress("glMaterialxvOES");
	glMultMatrixxOES = (void (*)(const GLfixed *m))wglGetProcAddress("glMultMatrixxOES");
	glMultiTexCoord4xOES = (void (*)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q))wglGetProcAddress("glMultiTexCoord4xOES");
	glNormal3xOES = (void (*)(GLfixed nx, GLfixed ny, GLfixed nz))wglGetProcAddress("glNormal3xOES");
	glOrthoxOES = (void (*)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f))wglGetProcAddress("glOrthoxOES");
	glPointParameterxvOES = (void (*)(GLenum pname, const GLfixed *params))wglGetProcAddress("glPointParameterxvOES");
	glPointSizexOES = (void (*)(GLfixed size))wglGetProcAddress("glPointSizexOES");
	glPolygonOffsetxOES = (void (*)(GLfixed factor, GLfixed units))wglGetProcAddress("glPolygonOffsetxOES");
	glRotatexOES = (void (*)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z))wglGetProcAddress("glRotatexOES");
	glSampleCoverageOES = (void (*)(GLfixed value, GLboolean invert))wglGetProcAddress("glSampleCoverageOES");
	glScalexOES = (void (*)(GLfixed x, GLfixed y, GLfixed z))wglGetProcAddress("glScalexOES");
	glTexEnvxOES = (void (*)(GLenum target, GLenum pname, GLfixed param))wglGetProcAddress("glTexEnvxOES");
	glTexEnvxvOES = (void (*)(GLenum target, GLenum pname, const GLfixed *params))wglGetProcAddress("glTexEnvxvOES");
	glTexParameterxOES = (void (*)(GLenum target, GLenum pname, GLfixed param))wglGetProcAddress("glTexParameterxOES");
	glTexParameterxvOES = (void (*)(GLenum target, GLenum pname, const GLfixed *params))wglGetProcAddress("glTexParameterxvOES");
	glTranslatexOES = (void (*)(GLfixed x, GLfixed y, GLfixed z))wglGetProcAddress("glTranslatexOES");
	glAccumxOES = (void (*)(GLenum op, GLfixed value))wglGetProcAddress("glAccumxOES");
	glBitmapxOES = (void (*)(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap))wglGetProcAddress("glBitmapxOES");
	glBlendColorxOES = (void (*)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha))wglGetProcAddress("glBlendColorxOES");
	glClearAccumxOES = (void (*)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha))wglGetProcAddress("glClearAccumxOES");
	glColor3xOES = (void (*)(GLfixed red, GLfixed green, GLfixed blue))wglGetProcAddress("glColor3xOES");
	glColor3xvOES = (void (*)(const GLfixed *components))wglGetProcAddress("glColor3xvOES");
	glColor4xvOES = (void (*)(const GLfixed *components))wglGetProcAddress("glColor4xvOES");
	glConvolutionParameterxOES = (void (*)(GLenum target, GLenum pname, GLfixed param))wglGetProcAddress("glConvolutionParameterxOES");
	glConvolutionParameterxvOES = (void (*)(GLenum target, GLenum pname, const GLfixed *params))wglGetProcAddress("glConvolutionParameterxvOES");
	glEvalCoord1xOES = (void (*)(GLfixed u))wglGetProcAddress("glEvalCoord1xOES");
	glEvalCoord1xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glEvalCoord1xvOES");
	glEvalCoord2xOES = (void (*)(GLfixed u, GLfixed v))wglGetProcAddress("glEvalCoord2xOES");
	glEvalCoord2xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glEvalCoord2xvOES");
	glFeedbackBufferxOES = (void (*)(GLsizei n, GLenum type, const GLfixed *buffer))wglGetProcAddress("glFeedbackBufferxOES");
	glGetConvolutionParameterxvOES = (void (*)(GLenum target, GLenum pname, GLfixed *params))wglGetProcAddress("glGetConvolutionParameterxvOES");
	glGetHistogramParameterxvOES = (void (*)(GLenum target, GLenum pname, GLfixed *params))wglGetProcAddress("glGetHistogramParameterxvOES");
	glGetLightxOES = (void (*)(GLenum light, GLenum pname, GLfixed *params))wglGetProcAddress("glGetLightxOES");
	glGetMapxvOES = (void (*)(GLenum target, GLenum query, GLfixed *v))wglGetProcAddress("glGetMapxvOES");
	glGetMaterialxOES = (void (*)(GLenum face, GLenum pname, GLfixed param))wglGetProcAddress("glGetMaterialxOES");
	glGetPixelMapxv = (void (*)(GLenum map, GLint size, GLfixed *values))wglGetProcAddress("glGetPixelMapxv");
	glGetTexGenxvOES = (void (*)(GLenum coord, GLenum pname, GLfixed *params))wglGetProcAddress("glGetTexGenxvOES");
	glGetTexLevelParameterxvOES = (void (*)(GLenum target, GLint level, GLenum pname, GLfixed *params))wglGetProcAddress("glGetTexLevelParameterxvOES");
	glIndexxOES = (void (*)(GLfixed component))wglGetProcAddress("glIndexxOES");
	glIndexxvOES = (void (*)(const GLfixed *component))wglGetProcAddress("glIndexxvOES");
	glLoadTransposeMatrixxOES = (void (*)(const GLfixed *m))wglGetProcAddress("glLoadTransposeMatrixxOES");
	glMap1xOES = (void (*)(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points))wglGetProcAddress("glMap1xOES");
	glMap2xOES = (void (*)(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points))wglGetProcAddress("glMap2xOES");
	glMapGrid1xOES = (void (*)(GLint n, GLfixed u1, GLfixed u2))wglGetProcAddress("glMapGrid1xOES");
	glMapGrid2xOES = (void (*)(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2))wglGetProcAddress("glMapGrid2xOES");
	glMultTransposeMatrixxOES = (void (*)(const GLfixed *m))wglGetProcAddress("glMultTransposeMatrixxOES");
	glMultiTexCoord1xOES = (void (*)(GLenum texture, GLfixed s))wglGetProcAddress("glMultiTexCoord1xOES");
	glMultiTexCoord1xvOES = (void (*)(GLenum texture, const GLfixed *coords))wglGetProcAddress("glMultiTexCoord1xvOES");
	glMultiTexCoord2xOES = (void (*)(GLenum texture, GLfixed s, GLfixed t))wglGetProcAddress("glMultiTexCoord2xOES");
	glMultiTexCoord2xvOES = (void (*)(GLenum texture, const GLfixed *coords))wglGetProcAddress("glMultiTexCoord2xvOES");
	glMultiTexCoord3xOES = (void (*)(GLenum texture, GLfixed s, GLfixed t, GLfixed r))wglGetProcAddress("glMultiTexCoord3xOES");
	glMultiTexCoord3xvOES = (void (*)(GLenum texture, const GLfixed *coords))wglGetProcAddress("glMultiTexCoord3xvOES");
	glMultiTexCoord4xvOES = (void (*)(GLenum texture, const GLfixed *coords))wglGetProcAddress("glMultiTexCoord4xvOES");
	glNormal3xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glNormal3xvOES");
	glPassThroughxOES = (void (*)(GLfixed token))wglGetProcAddress("glPassThroughxOES");
	glPixelMapx = (void (*)(GLenum map, GLint size, const GLfixed *values))wglGetProcAddress("glPixelMapx");
	glPixelStorex = (void (*)(GLenum pname, GLfixed param))wglGetProcAddress("glPixelStorex");
	glPixelTransferxOES = (void (*)(GLenum pname, GLfixed param))wglGetProcAddress("glPixelTransferxOES");
	glPixelZoomxOES = (void (*)(GLfixed xfactor, GLfixed yfactor))wglGetProcAddress("glPixelZoomxOES");
	glPrioritizeTexturesxOES = (void (*)(GLsizei n, const GLuint *textures, const GLfixed *priorities))wglGetProcAddress("glPrioritizeTexturesxOES");
	glRasterPos2xOES = (void (*)(GLfixed x, GLfixed y))wglGetProcAddress("glRasterPos2xOES");
	glRasterPos2xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glRasterPos2xvOES");
	glRasterPos3xOES = (void (*)(GLfixed x, GLfixed y, GLfixed z))wglGetProcAddress("glRasterPos3xOES");
	glRasterPos3xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glRasterPos3xvOES");
	glRasterPos4xOES = (void (*)(GLfixed x, GLfixed y, GLfixed z, GLfixed w))wglGetProcAddress("glRasterPos4xOES");
	glRasterPos4xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glRasterPos4xvOES");
	glRectxOES = (void (*)(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2))wglGetProcAddress("glRectxOES");
	glRectxvOES = (void (*)(const GLfixed *v1, const GLfixed *v2))wglGetProcAddress("glRectxvOES");
	glTexCoord1xOES = (void (*)(GLfixed s))wglGetProcAddress("glTexCoord1xOES");
	glTexCoord1xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glTexCoord1xvOES");
	glTexCoord2xOES = (void (*)(GLfixed s, GLfixed t))wglGetProcAddress("glTexCoord2xOES");
	glTexCoord2xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glTexCoord2xvOES");
	glTexCoord3xOES = (void (*)(GLfixed s, GLfixed t, GLfixed r))wglGetProcAddress("glTexCoord3xOES");
	glTexCoord3xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glTexCoord3xvOES");
	glTexCoord4xOES = (void (*)(GLfixed s, GLfixed t, GLfixed r, GLfixed q))wglGetProcAddress("glTexCoord4xOES");
	glTexCoord4xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glTexCoord4xvOES");
	glTexGenxOES = (void (*)(GLenum coord, GLenum pname, GLfixed param))wglGetProcAddress("glTexGenxOES");
	glTexGenxvOES = (void (*)(GLenum coord, GLenum pname, const GLfixed *params))wglGetProcAddress("glTexGenxvOES");
	glVertex2xOES = (void (*)(GLfixed x))wglGetProcAddress("glVertex2xOES");
	glVertex2xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glVertex2xvOES");
	glVertex3xOES = (void (*)(GLfixed x, GLfixed y))wglGetProcAddress("glVertex3xOES");
	glVertex3xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glVertex3xvOES");
	glVertex4xOES = (void (*)(GLfixed x, GLfixed y, GLfixed z))wglGetProcAddress("glVertex4xOES");
	glVertex4xvOES = (void (*)(const GLfixed *coords))wglGetProcAddress("glVertex4xvOES");
	glQueryMatrixxOES = (GLbitfield (*)(GLfixed *mantissa, GLint *exponent))wglGetProcAddress("glQueryMatrixxOES");
	glClearDepthfOES = (void (*)(GLclampf depth))wglGetProcAddress("glClearDepthfOES");
	glClipPlanefOES = (void (*)(GLenum plane, const GLfloat *equation))wglGetProcAddress("glClipPlanefOES");
	glDepthRangefOES = (void (*)(GLclampf n, GLclampf f))wglGetProcAddress("glDepthRangefOES");
	glFrustumfOES = (void (*)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f))wglGetProcAddress("glFrustumfOES");
	glGetClipPlanefOES = (void (*)(GLenum plane, GLfloat *equation))wglGetProcAddress("glGetClipPlanefOES");
	glOrthofOES = (void (*)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f))wglGetProcAddress("glOrthofOES");
	glTbufferMask3DFX = (void (*)(GLuint mask))wglGetProcAddress("glTbufferMask3DFX");
	glDebugMessageEnableAMD = (void (*)(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))wglGetProcAddress("glDebugMessageEnableAMD");
	glDebugMessageInsertAMD = (void (*)(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf))wglGetProcAddress("glDebugMessageInsertAMD");
	glDebugMessageCallbackAMD = (void (*)(GLDEBUGPROCAMD callback, void *userParam))wglGetProcAddress("glDebugMessageCallbackAMD");
	glGetDebugMessageLogAMD = (GLuint (*)(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message))wglGetProcAddress("glGetDebugMessageLogAMD");
	glBlendFuncIndexedAMD = (void (*)(GLuint buf, GLenum src, GLenum dst))wglGetProcAddress("glBlendFuncIndexedAMD");
	glBlendFuncSeparateIndexedAMD = (void (*)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))wglGetProcAddress("glBlendFuncSeparateIndexedAMD");
	glBlendEquationIndexedAMD = (void (*)(GLuint buf, GLenum mode))wglGetProcAddress("glBlendEquationIndexedAMD");
	glBlendEquationSeparateIndexedAMD = (void (*)(GLuint buf, GLenum modeRGB, GLenum modeAlpha))wglGetProcAddress("glBlendEquationSeparateIndexedAMD");
	glUniform1i64NV = (void (*)(GLint location, GLint64EXT x))wglGetProcAddress("glUniform1i64NV");
	glUniform2i64NV = (void (*)(GLint location, GLint64EXT x, GLint64EXT y))wglGetProcAddress("glUniform2i64NV");
	glUniform3i64NV = (void (*)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z))wglGetProcAddress("glUniform3i64NV");
	glUniform4i64NV = (void (*)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))wglGetProcAddress("glUniform4i64NV");
	glUniform1i64vNV = (void (*)(GLint location, GLsizei count, const GLint64EXT *value))wglGetProcAddress("glUniform1i64vNV");
	glUniform2i64vNV = (void (*)(GLint location, GLsizei count, const GLint64EXT *value))wglGetProcAddress("glUniform2i64vNV");
	glUniform3i64vNV = (void (*)(GLint location, GLsizei count, const GLint64EXT *value))wglGetProcAddress("glUniform3i64vNV");
	glUniform4i64vNV = (void (*)(GLint location, GLsizei count, const GLint64EXT *value))wglGetProcAddress("glUniform4i64vNV");
	glUniform1ui64NV = (void (*)(GLint location, GLuint64EXT x))wglGetProcAddress("glUniform1ui64NV");
	glUniform2ui64NV = (void (*)(GLint location, GLuint64EXT x, GLuint64EXT y))wglGetProcAddress("glUniform2ui64NV");
	glUniform3ui64NV = (void (*)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))wglGetProcAddress("glUniform3ui64NV");
	glUniform4ui64NV = (void (*)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))wglGetProcAddress("glUniform4ui64NV");
	glUniform1ui64vNV = (void (*)(GLint location, GLsizei count, const GLuint64EXT *value))wglGetProcAddress("glUniform1ui64vNV");
	glUniform2ui64vNV = (void (*)(GLint location, GLsizei count, const GLuint64EXT *value))wglGetProcAddress("glUniform2ui64vNV");
	glUniform3ui64vNV = (void (*)(GLint location, GLsizei count, const GLuint64EXT *value))wglGetProcAddress("glUniform3ui64vNV");
	glUniform4ui64vNV = (void (*)(GLint location, GLsizei count, const GLuint64EXT *value))wglGetProcAddress("glUniform4ui64vNV");
	glGetUniformi64vNV = (void (*)(GLuint program, GLint location, GLint64EXT *params))wglGetProcAddress("glGetUniformi64vNV");
	glGetUniformui64vNV = (void (*)(GLuint program, GLint location, GLuint64EXT *params))wglGetProcAddress("glGetUniformui64vNV");
	glProgramUniform1i64NV = (void (*)(GLuint program, GLint location, GLint64EXT x))wglGetProcAddress("glProgramUniform1i64NV");
	glProgramUniform2i64NV = (void (*)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y))wglGetProcAddress("glProgramUniform2i64NV");
	glProgramUniform3i64NV = (void (*)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z))wglGetProcAddress("glProgramUniform3i64NV");
	glProgramUniform4i64NV = (void (*)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))wglGetProcAddress("glProgramUniform4i64NV");
	glProgramUniform1i64vNV = (void (*)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value))wglGetProcAddress("glProgramUniform1i64vNV");
	glProgramUniform2i64vNV = (void (*)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value))wglGetProcAddress("glProgramUniform2i64vNV");
	glProgramUniform3i64vNV = (void (*)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value))wglGetProcAddress("glProgramUniform3i64vNV");
	glProgramUniform4i64vNV = (void (*)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value))wglGetProcAddress("glProgramUniform4i64vNV");
	glProgramUniform1ui64NV = (void (*)(GLuint program, GLint location, GLuint64EXT x))wglGetProcAddress("glProgramUniform1ui64NV");
	glProgramUniform2ui64NV = (void (*)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y))wglGetProcAddress("glProgramUniform2ui64NV");
	glProgramUniform3ui64NV = (void (*)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))wglGetProcAddress("glProgramUniform3ui64NV");
	glProgramUniform4ui64NV = (void (*)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))wglGetProcAddress("glProgramUniform4ui64NV");
	glProgramUniform1ui64vNV = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))wglGetProcAddress("glProgramUniform1ui64vNV");
	glProgramUniform2ui64vNV = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))wglGetProcAddress("glProgramUniform2ui64vNV");
	glProgramUniform3ui64vNV = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))wglGetProcAddress("glProgramUniform3ui64vNV");
	glProgramUniform4ui64vNV = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))wglGetProcAddress("glProgramUniform4ui64vNV");
	glVertexAttribParameteriAMD = (void (*)(GLuint index, GLenum pname, GLint param))wglGetProcAddress("glVertexAttribParameteriAMD");
	glMultiDrawArraysIndirectAMD = (void (*)(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride))wglGetProcAddress("glMultiDrawArraysIndirectAMD");
	glMultiDrawElementsIndirectAMD = (void (*)(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride))wglGetProcAddress("glMultiDrawElementsIndirectAMD");
	glGenNamesAMD = (void (*)(GLenum identifier, GLuint num, GLuint *names))wglGetProcAddress("glGenNamesAMD");
	glDeleteNamesAMD = (void (*)(GLenum identifier, GLuint num, const GLuint *names))wglGetProcAddress("glDeleteNamesAMD");
	glIsNameAMD = (GLboolean (*)(GLenum identifier, GLuint name))wglGetProcAddress("glIsNameAMD");
	glQueryObjectParameteruiAMD = (void (*)(GLenum target, GLuint id, GLenum pname, GLuint param))wglGetProcAddress("glQueryObjectParameteruiAMD");
	glGetPerfMonitorGroupsAMD = (void (*)(GLint *numGroups, GLsizei groupsSize, GLuint *groups))wglGetProcAddress("glGetPerfMonitorGroupsAMD");
	glGetPerfMonitorCountersAMD = (void (*)(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters))wglGetProcAddress("glGetPerfMonitorCountersAMD");
	glGetPerfMonitorGroupStringAMD = (void (*)(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString))wglGetProcAddress("glGetPerfMonitorGroupStringAMD");
	glGetPerfMonitorCounterStringAMD = (void (*)(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString))wglGetProcAddress("glGetPerfMonitorCounterStringAMD");
	glGetPerfMonitorCounterInfoAMD = (void (*)(GLuint group, GLuint counter, GLenum pname, void *data))wglGetProcAddress("glGetPerfMonitorCounterInfoAMD");
	glGenPerfMonitorsAMD = (void (*)(GLsizei n, GLuint *monitors))wglGetProcAddress("glGenPerfMonitorsAMD");
	glDeletePerfMonitorsAMD = (void (*)(GLsizei n, GLuint *monitors))wglGetProcAddress("glDeletePerfMonitorsAMD");
	glSelectPerfMonitorCountersAMD = (void (*)(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList))wglGetProcAddress("glSelectPerfMonitorCountersAMD");
	glBeginPerfMonitorAMD = (void (*)(GLuint monitor))wglGetProcAddress("glBeginPerfMonitorAMD");
	glEndPerfMonitorAMD = (void (*)(GLuint monitor))wglGetProcAddress("glEndPerfMonitorAMD");
	glGetPerfMonitorCounterDataAMD = (void (*)(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten))wglGetProcAddress("glGetPerfMonitorCounterDataAMD");
	glSetMultisamplefvAMD = (void (*)(GLenum pname, GLuint index, const GLfloat *val))wglGetProcAddress("glSetMultisamplefvAMD");
	glTexStorageSparseAMD = (void (*)(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags))wglGetProcAddress("glTexStorageSparseAMD");
	glTextureStorageSparseAMD = (void (*)(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags))wglGetProcAddress("glTextureStorageSparseAMD");
	glStencilOpValueAMD = (void (*)(GLenum face, GLuint value))wglGetProcAddress("glStencilOpValueAMD");
	glTessellationFactorAMD = (void (*)(GLfloat factor))wglGetProcAddress("glTessellationFactorAMD");
	glTessellationModeAMD = (void (*)(GLenum mode))wglGetProcAddress("glTessellationModeAMD");
	glElementPointerAPPLE = (void (*)(GLenum type, const void *pointer))wglGetProcAddress("glElementPointerAPPLE");
	glDrawElementArrayAPPLE = (void (*)(GLenum mode, GLint first, GLsizei count))wglGetProcAddress("glDrawElementArrayAPPLE");
	glDrawRangeElementArrayAPPLE = (void (*)(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count))wglGetProcAddress("glDrawRangeElementArrayAPPLE");
	glMultiDrawElementArrayAPPLE = (void (*)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount))wglGetProcAddress("glMultiDrawElementArrayAPPLE");
	glMultiDrawRangeElementArrayAPPLE = (void (*)(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount))wglGetProcAddress("glMultiDrawRangeElementArrayAPPLE");
	glGenFencesAPPLE = (void (*)(GLsizei n, GLuint *fences))wglGetProcAddress("glGenFencesAPPLE");
	glDeleteFencesAPPLE = (void (*)(GLsizei n, const GLuint *fences))wglGetProcAddress("glDeleteFencesAPPLE");
	glSetFenceAPPLE = (void (*)(GLuint fence))wglGetProcAddress("glSetFenceAPPLE");
	glIsFenceAPPLE = (GLboolean (*)(GLuint fence))wglGetProcAddress("glIsFenceAPPLE");
	glTestFenceAPPLE = (GLboolean (*)(GLuint fence))wglGetProcAddress("glTestFenceAPPLE");
	glFinishFenceAPPLE = (void (*)(GLuint fence))wglGetProcAddress("glFinishFenceAPPLE");
	glTestObjectAPPLE = (GLboolean (*)(GLenum object, GLuint name))wglGetProcAddress("glTestObjectAPPLE");
	glFinishObjectAPPLE = (void (*)(GLenum object, GLint name))wglGetProcAddress("glFinishObjectAPPLE");
	glBufferParameteriAPPLE = (void (*)(GLenum target, GLenum pname, GLint param))wglGetProcAddress("glBufferParameteriAPPLE");
	glFlushMappedBufferRangeAPPLE = (void (*)(GLenum target, GLintptr offset, GLsizeiptr size))wglGetProcAddress("glFlushMappedBufferRangeAPPLE");
	glObjectPurgeableAPPLE = (GLenum (*)(GLenum objectType, GLuint name, GLenum option))wglGetProcAddress("glObjectPurgeableAPPLE");
	glObjectUnpurgeableAPPLE = (GLenum (*)(GLenum objectType, GLuint name, GLenum option))wglGetProcAddress("glObjectUnpurgeableAPPLE");
	glGetObjectParameterivAPPLE = (void (*)(GLenum objectType, GLuint name, GLenum pname, GLint *params))wglGetProcAddress("glGetObjectParameterivAPPLE");
	glTextureRangeAPPLE = (void (*)(GLenum target, GLsizei length, const void *pointer))wglGetProcAddress("glTextureRangeAPPLE");
	glGetTexParameterPointervAPPLE = (void (*)(GLenum target, GLenum pname, void **params))wglGetProcAddress("glGetTexParameterPointervAPPLE");
	glBindVertexArrayAPPLE = (void (*)(GLuint array))wglGetProcAddress("glBindVertexArrayAPPLE");
	glDeleteVertexArraysAPPLE = (void (*)(GLsizei n, const GLuint *arrays))wglGetProcAddress("glDeleteVertexArraysAPPLE");
	glGenVertexArraysAPPLE = (void (*)(GLsizei n, GLuint *arrays))wglGetProcAddress("glGenVertexArraysAPPLE");
	glIsVertexArrayAPPLE = (GLboolean (*)(GLuint array))wglGetProcAddress("glIsVertexArrayAPPLE");
	glVertexArrayRangeAPPLE = (void (*)(GLsizei length, void *pointer))wglGetProcAddress("glVertexArrayRangeAPPLE");
	glFlushVertexArrayRangeAPPLE = (void (*)(GLsizei length, void *pointer))wglGetProcAddress("glFlushVertexArrayRangeAPPLE");
	glVertexArrayParameteriAPPLE = (void (*)(GLenum pname, GLint param))wglGetProcAddress("glVertexArrayParameteriAPPLE");
	glEnableVertexAttribAPPLE = (void (*)(GLuint index, GLenum pname))wglGetProcAddress("glEnableVertexAttribAPPLE");
	glDisableVertexAttribAPPLE = (void (*)(GLuint index, GLenum pname))wglGetProcAddress("glDisableVertexAttribAPPLE");
	glIsVertexAttribEnabledAPPLE = (GLboolean (*)(GLuint index, GLenum pname))wglGetProcAddress("glIsVertexAttribEnabledAPPLE");
	glMapVertexAttrib1dAPPLE = (void (*)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points))wglGetProcAddress("glMapVertexAttrib1dAPPLE");
	glMapVertexAttrib1fAPPLE = (void (*)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points))wglGetProcAddress("glMapVertexAttrib1fAPPLE");
	glMapVertexAttrib2dAPPLE = (void (*)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points))wglGetProcAddress("glMapVertexAttrib2dAPPLE");
	glMapVertexAttrib2fAPPLE = (void (*)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points))wglGetProcAddress("glMapVertexAttrib2fAPPLE");
	glDrawBuffersATI = (void (*)(GLsizei n, const GLenum *bufs))wglGetProcAddress("glDrawBuffersATI");
	glElementPointerATI = (void (*)(GLenum type, const void *pointer))wglGetProcAddress("glElementPointerATI");
	glDrawElementArrayATI = (void (*)(GLenum mode, GLsizei count))wglGetProcAddress("glDrawElementArrayATI");
	glDrawRangeElementArrayATI = (void (*)(GLenum mode, GLuint start, GLuint end, GLsizei count))wglGetProcAddress("glDrawRangeElementArrayATI");
	glTexBumpParameterivATI = (void (*)(GLenum pname, const GLint *param))wglGetProcAddress("glTexBumpParameterivATI");
	glTexBumpParameterfvATI = (void (*)(GLenum pname, const GLfloat *param))wglGetProcAddress("glTexBumpParameterfvATI");
	glGetTexBumpParameterivATI = (void (*)(GLenum pname, GLint *param))wglGetProcAddress("glGetTexBumpParameterivATI");
	glGetTexBumpParameterfvATI = (void (*)(GLenum pname, GLfloat *param))wglGetProcAddress("glGetTexBumpParameterfvATI");
	glGenFragmentShadersATI = (GLuint (*)(GLuint range))wglGetProcAddress("glGenFragmentShadersATI");
	glBindFragmentShaderATI = (void (*)(GLuint id))wglGetProcAddress("glBindFragmentShaderATI");
	glDeleteFragmentShaderATI = (void (*)(GLuint id))wglGetProcAddress("glDeleteFragmentShaderATI");
	glBeginFragmentShaderATI = (void (*)(void))wglGetProcAddress("glBeginFragmentShaderATI");
	glEndFragmentShaderATI = (void (*)(void))wglGetProcAddress("glEndFragmentShaderATI");
	glPassTexCoordATI = (void (*)(GLuint dst, GLuint coord, GLenum swizzle))wglGetProcAddress("glPassTexCoordATI");
	glSampleMapATI = (void (*)(GLuint dst, GLuint interp, GLenum swizzle))wglGetProcAddress("glSampleMapATI");
	glColorFragmentOp1ATI = (void (*)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod))wglGetProcAddress("glColorFragmentOp1ATI");
	glColorFragmentOp2ATI = (void (*)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod))wglGetProcAddress("glColorFragmentOp2ATI");
	glColorFragmentOp3ATI = (void (*)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod))wglGetProcAddress("glColorFragmentOp3ATI");
	glAlphaFragmentOp1ATI = (void (*)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod))wglGetProcAddress("glAlphaFragmentOp1ATI");
	glAlphaFragmentOp2ATI = (void (*)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod))wglGetProcAddress("glAlphaFragmentOp2ATI");
	glAlphaFragmentOp3ATI = (void (*)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod))wglGetProcAddress("glAlphaFragmentOp3ATI");
	glSetFragmentShaderConstantATI = (void (*)(GLuint dst, const GLfloat *value))wglGetProcAddress("glSetFragmentShaderConstantATI");
	glUnmapObjectBufferATI = (void (*)(GLuint buffer))wglGetProcAddress("glUnmapObjectBufferATI");
	glPNTrianglesiATI = (void (*)(GLenum pname, GLint param))wglGetProcAddress("glPNTrianglesiATI");
	glPNTrianglesfATI = (void (*)(GLenum pname, GLfloat param))wglGetProcAddress("glPNTrianglesfATI");
	glStencilOpSeparateATI = (void (*)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))wglGetProcAddress("glStencilOpSeparateATI");
	glStencilFuncSeparateATI = (void (*)(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask))wglGetProcAddress("glStencilFuncSeparateATI");
	glNewObjectBufferATI = (GLuint (*)(GLsizei size, const void *pointer, GLenum usage))wglGetProcAddress("glNewObjectBufferATI");
	glIsObjectBufferATI = (GLboolean (*)(GLuint buffer))wglGetProcAddress("glIsObjectBufferATI");
	glUpdateObjectBufferATI = (void (*)(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve))wglGetProcAddress("glUpdateObjectBufferATI");
	glGetObjectBufferfvATI = (void (*)(GLuint buffer, GLenum pname, GLfloat *params))wglGetProcAddress("glGetObjectBufferfvATI");
	glGetObjectBufferivATI = (void (*)(GLuint buffer, GLenum pname, GLint *params))wglGetProcAddress("glGetObjectBufferivATI");
	glFreeObjectBufferATI = (void (*)(GLuint buffer))wglGetProcAddress("glFreeObjectBufferATI");
	glArrayObjectATI = (void (*)(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset))wglGetProcAddress("glArrayObjectATI");
	glGetArrayObjectfvATI = (void (*)(GLenum array, GLenum pname, GLfloat *params))wglGetProcAddress("glGetArrayObjectfvATI");
	glGetArrayObjectivATI = (void (*)(GLenum array, GLenum pname, GLint *params))wglGetProcAddress("glGetArrayObjectivATI");
	glVariantArrayObjectATI = (void (*)(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset))wglGetProcAddress("glVariantArrayObjectATI");
	glGetVariantArrayObjectfvATI = (void (*)(GLuint id, GLenum pname, GLfloat *params))wglGetProcAddress("glGetVariantArrayObjectfvATI");
	glGetVariantArrayObjectivATI = (void (*)(GLuint id, GLenum pname, GLint *params))wglGetProcAddress("glGetVariantArrayObjectivATI");
	glVertexAttribArrayObjectATI = (void (*)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset))wglGetProcAddress("glVertexAttribArrayObjectATI");
	glGetVertexAttribArrayObjectfvATI = (void (*)(GLuint index, GLenum pname, GLfloat *params))wglGetProcAddress("glGetVertexAttribArrayObjectfvATI");
	glGetVertexAttribArrayObjectivATI = (void (*)(GLuint index, GLenum pname, GLint *params))wglGetProcAddress("glGetVertexAttribArrayObjectivATI");
	glVertexStream1sATI = (void (*)(GLenum stream, GLshort x))wglGetProcAddress("glVertexStream1sATI");
	glVertexStream1svATI = (void (*)(GLenum stream, const GLshort *coords))wglGetProcAddress("glVertexStream1svATI");
	glVertexStream1iATI = (void (*)(GLenum stream, GLint x))wglGetProcAddress("glVertexStream1iATI");
	glVertexStream1ivATI = (void (*)(GLenum stream, const GLint *coords))wglGetProcAddress("glVertexStream1ivATI");
	glVertexStream1fATI = (void (*)(GLenum stream, GLfloat x))wglGetProcAddress("glVertexStream1fATI");
	glVertexStream1fvATI = (void (*)(GLenum stream, const GLfloat *coords))wglGetProcAddress("glVertexStream1fvATI");
	glVertexStream1dATI = (void (*)(GLenum stream, GLdouble x))wglGetProcAddress("glVertexStream1dATI");
	glVertexStream1dvATI = (void (*)(GLenum stream, const GLdouble *coords))wglGetProcAddress("glVertexStream1dvATI");
	glVertexStream2sATI = (void (*)(GLenum stream, GLshort x, GLshort y))wglGetProcAddress("glVertexStream2sATI");
	glVertexStream2svATI = (void (*)(GLenum stream, const GLshort *coords))wglGetProcAddress("glVertexStream2svATI");
	glVertexStream2iATI = (void (*)(GLenum stream, GLint x, GLint y))wglGetProcAddress("glVertexStream2iATI");
	glVertexStream2ivATI = (void (*)(GLenum stream, const GLint *coords))wglGetProcAddress("glVertexStream2ivATI");
	glVertexStream2fATI = (void (*)(GLenum stream, GLfloat x, GLfloat y))wglGetProcAddress("glVertexStream2fATI");
	glVertexStream2fvATI = (void (*)(GLenum stream, const GLfloat *coords))wglGetProcAddress("glVertexStream2fvATI");
	glVertexStream2dATI = (void (*)(GLenum stream, GLdouble x, GLdouble y))wglGetProcAddress("glVertexStream2dATI");
	glVertexStream2dvATI = (void (*)(GLenum stream, const GLdouble *coords))wglGetProcAddress("glVertexStream2dvATI");
	glVertexStream3sATI = (void (*)(GLenum stream, GLshort x, GLshort y, GLshort z))wglGetProcAddress("glVertexStream3sATI");
	glVertexStream3svATI = (void (*)(GLenum stream, const GLshort *coords))wglGetProcAddress("glVertexStream3svATI");
	glVertexStream3iATI = (void (*)(GLenum stream, GLint x, GLint y, GLint z))wglGetProcAddress("glVertexStream3iATI");
	glVertexStream3ivATI = (void (*)(GLenum stream, const GLint *coords))wglGetProcAddress("glVertexStream3ivATI");
	glVertexStream3fATI = (void (*)(GLenum stream, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glVertexStream3fATI");
	glVertexStream3fvATI = (void (*)(GLenum stream, const GLfloat *coords))wglGetProcAddress("glVertexStream3fvATI");
	glVertexStream3dATI = (void (*)(GLenum stream, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glVertexStream3dATI");
	glVertexStream3dvATI = (void (*)(GLenum stream, const GLdouble *coords))wglGetProcAddress("glVertexStream3dvATI");
	glVertexStream4sATI = (void (*)(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w))wglGetProcAddress("glVertexStream4sATI");
	glVertexStream4svATI = (void (*)(GLenum stream, const GLshort *coords))wglGetProcAddress("glVertexStream4svATI");
	glVertexStream4iATI = (void (*)(GLenum stream, GLint x, GLint y, GLint z, GLint w))wglGetProcAddress("glVertexStream4iATI");
	glVertexStream4ivATI = (void (*)(GLenum stream, const GLint *coords))wglGetProcAddress("glVertexStream4ivATI");
	glVertexStream4fATI = (void (*)(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glVertexStream4fATI");
	glVertexStream4fvATI = (void (*)(GLenum stream, const GLfloat *coords))wglGetProcAddress("glVertexStream4fvATI");
	glVertexStream4dATI = (void (*)(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glVertexStream4dATI");
	glVertexStream4dvATI = (void (*)(GLenum stream, const GLdouble *coords))wglGetProcAddress("glVertexStream4dvATI");
	glNormalStream3bATI = (void (*)(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz))wglGetProcAddress("glNormalStream3bATI");
	glNormalStream3bvATI = (void (*)(GLenum stream, const GLbyte *coords))wglGetProcAddress("glNormalStream3bvATI");
	glNormalStream3sATI = (void (*)(GLenum stream, GLshort nx, GLshort ny, GLshort nz))wglGetProcAddress("glNormalStream3sATI");
	glNormalStream3svATI = (void (*)(GLenum stream, const GLshort *coords))wglGetProcAddress("glNormalStream3svATI");
	glNormalStream3iATI = (void (*)(GLenum stream, GLint nx, GLint ny, GLint nz))wglGetProcAddress("glNormalStream3iATI");
	glNormalStream3ivATI = (void (*)(GLenum stream, const GLint *coords))wglGetProcAddress("glNormalStream3ivATI");
	glNormalStream3fATI = (void (*)(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz))wglGetProcAddress("glNormalStream3fATI");
	glNormalStream3fvATI = (void (*)(GLenum stream, const GLfloat *coords))wglGetProcAddress("glNormalStream3fvATI");
	glNormalStream3dATI = (void (*)(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz))wglGetProcAddress("glNormalStream3dATI");
	glNormalStream3dvATI = (void (*)(GLenum stream, const GLdouble *coords))wglGetProcAddress("glNormalStream3dvATI");
	glClientActiveVertexStreamATI = (void (*)(GLenum stream))wglGetProcAddress("glClientActiveVertexStreamATI");
	glVertexBlendEnviATI = (void (*)(GLenum pname, GLint param))wglGetProcAddress("glVertexBlendEnviATI");
	glVertexBlendEnvfATI = (void (*)(GLenum pname, GLfloat param))wglGetProcAddress("glVertexBlendEnvfATI");
	glUniformBufferEXT = (void (*)(GLuint program, GLint location, GLuint buffer))wglGetProcAddress("glUniformBufferEXT");
	glGetUniformBufferSizeEXT = (GLint (*)(GLuint program, GLint location))wglGetProcAddress("glGetUniformBufferSizeEXT");
	glGetUniformOffsetEXT = (GLintptr (*)(GLuint program, GLint location))wglGetProcAddress("glGetUniformOffsetEXT");
	glBlendColorEXT = (void (*)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))wglGetProcAddress("glBlendColorEXT");
	glBlendEquationSeparateEXT = (void (*)(GLenum modeRGB, GLenum modeAlpha))wglGetProcAddress("glBlendEquationSeparateEXT");
	glBlendFuncSeparateEXT = (void (*)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))wglGetProcAddress("glBlendFuncSeparateEXT");
	glBlendEquationEXT = (void (*)(GLenum mode))wglGetProcAddress("glBlendEquationEXT");
	glColorSubTableEXT = (void (*)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data))wglGetProcAddress("glColorSubTableEXT");
	glCopyColorSubTableEXT = (void (*)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width))wglGetProcAddress("glCopyColorSubTableEXT");
	glLockArraysEXT = (void (*)(GLint first, GLsizei count))wglGetProcAddress("glLockArraysEXT");
	glUnlockArraysEXT = (void (*)(void))wglGetProcAddress("glUnlockArraysEXT");
	glConvolutionFilter1DEXT = (void (*)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image))wglGetProcAddress("glConvolutionFilter1DEXT");
	glConvolutionFilter2DEXT = (void (*)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image))wglGetProcAddress("glConvolutionFilter2DEXT");
	glConvolutionParameterfEXT = (void (*)(GLenum target, GLenum pname, GLfloat params))wglGetProcAddress("glConvolutionParameterfEXT");
	glConvolutionParameterfvEXT = (void (*)(GLenum target, GLenum pname, const GLfloat *params))wglGetProcAddress("glConvolutionParameterfvEXT");
	glConvolutionParameteriEXT = (void (*)(GLenum target, GLenum pname, GLint params))wglGetProcAddress("glConvolutionParameteriEXT");
	glConvolutionParameterivEXT = (void (*)(GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glConvolutionParameterivEXT");
	glCopyConvolutionFilter1DEXT = (void (*)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width))wglGetProcAddress("glCopyConvolutionFilter1DEXT");
	glCopyConvolutionFilter2DEXT = (void (*)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyConvolutionFilter2DEXT");
	glGetConvolutionFilterEXT = (void (*)(GLenum target, GLenum format, GLenum type, void *image))wglGetProcAddress("glGetConvolutionFilterEXT");
	glGetConvolutionParameterfvEXT = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetConvolutionParameterfvEXT");
	glGetConvolutionParameterivEXT = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetConvolutionParameterivEXT");
	glGetSeparableFilterEXT = (void (*)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span))wglGetProcAddress("glGetSeparableFilterEXT");
	glSeparableFilter2DEXT = (void (*)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column))wglGetProcAddress("glSeparableFilter2DEXT");
	glTangent3bEXT = (void (*)(GLbyte tx, GLbyte ty, GLbyte tz))wglGetProcAddress("glTangent3bEXT");
	glTangent3bvEXT = (void (*)(const GLbyte *v))wglGetProcAddress("glTangent3bvEXT");
	glTangent3dEXT = (void (*)(GLdouble tx, GLdouble ty, GLdouble tz))wglGetProcAddress("glTangent3dEXT");
	glTangent3dvEXT = (void (*)(const GLdouble *v))wglGetProcAddress("glTangent3dvEXT");
	glTangent3fEXT = (void (*)(GLfloat tx, GLfloat ty, GLfloat tz))wglGetProcAddress("glTangent3fEXT");
	glTangent3fvEXT = (void (*)(const GLfloat *v))wglGetProcAddress("glTangent3fvEXT");
	glTangent3iEXT = (void (*)(GLint tx, GLint ty, GLint tz))wglGetProcAddress("glTangent3iEXT");
	glTangent3ivEXT = (void (*)(const GLint *v))wglGetProcAddress("glTangent3ivEXT");
	glTangent3sEXT = (void (*)(GLshort tx, GLshort ty, GLshort tz))wglGetProcAddress("glTangent3sEXT");
	glTangent3svEXT = (void (*)(const GLshort *v))wglGetProcAddress("glTangent3svEXT");
	glBinormal3bEXT = (void (*)(GLbyte bx, GLbyte by, GLbyte bz))wglGetProcAddress("glBinormal3bEXT");
	glBinormal3bvEXT = (void (*)(const GLbyte *v))wglGetProcAddress("glBinormal3bvEXT");
	glBinormal3dEXT = (void (*)(GLdouble bx, GLdouble by, GLdouble bz))wglGetProcAddress("glBinormal3dEXT");
	glBinormal3dvEXT = (void (*)(const GLdouble *v))wglGetProcAddress("glBinormal3dvEXT");
	glBinormal3fEXT = (void (*)(GLfloat bx, GLfloat by, GLfloat bz))wglGetProcAddress("glBinormal3fEXT");
	glBinormal3fvEXT = (void (*)(const GLfloat *v))wglGetProcAddress("glBinormal3fvEXT");
	glBinormal3iEXT = (void (*)(GLint bx, GLint by, GLint bz))wglGetProcAddress("glBinormal3iEXT");
	glBinormal3ivEXT = (void (*)(const GLint *v))wglGetProcAddress("glBinormal3ivEXT");
	glBinormal3sEXT = (void (*)(GLshort bx, GLshort by, GLshort bz))wglGetProcAddress("glBinormal3sEXT");
	glBinormal3svEXT = (void (*)(const GLshort *v))wglGetProcAddress("glBinormal3svEXT");
	glTangentPointerEXT = (void (*)(GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glTangentPointerEXT");
	glBinormalPointerEXT = (void (*)(GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glBinormalPointerEXT");
	glCopyTexImage1DEXT = (void (*)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))wglGetProcAddress("glCopyTexImage1DEXT");
	glCopyTexImage2DEXT = (void (*)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))wglGetProcAddress("glCopyTexImage2DEXT");
	glCopyTexSubImage1DEXT = (void (*)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))wglGetProcAddress("glCopyTexSubImage1DEXT");
	glCopyTexSubImage2DEXT = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyTexSubImage2DEXT");
	glCopyTexSubImage3DEXT = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyTexSubImage3DEXT");
	glCullParameterdvEXT = (void (*)(GLenum pname, GLdouble *params))wglGetProcAddress("glCullParameterdvEXT");
	glCullParameterfvEXT = (void (*)(GLenum pname, GLfloat *params))wglGetProcAddress("glCullParameterfvEXT");
	glLabelObjectEXT = (void (*)(GLenum type, GLuint object, GLsizei length, const GLchar *label))wglGetProcAddress("glLabelObjectEXT");
	glGetObjectLabelEXT = (void (*)(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label))wglGetProcAddress("glGetObjectLabelEXT");
	glInsertEventMarkerEXT = (void (*)(GLsizei length, const GLchar *marker))wglGetProcAddress("glInsertEventMarkerEXT");
	glPushGroupMarkerEXT = (void (*)(GLsizei length, const GLchar *marker))wglGetProcAddress("glPushGroupMarkerEXT");
	glPopGroupMarkerEXT = (void (*)(void))wglGetProcAddress("glPopGroupMarkerEXT");
	glDepthBoundsEXT = (void (*)(GLclampd zmin, GLclampd zmax))wglGetProcAddress("glDepthBoundsEXT");
	glMatrixLoadfEXT = (void (*)(GLenum mode, const GLfloat *m))wglGetProcAddress("glMatrixLoadfEXT");
	glMatrixLoaddEXT = (void (*)(GLenum mode, const GLdouble *m))wglGetProcAddress("glMatrixLoaddEXT");
	glMatrixMultfEXT = (void (*)(GLenum mode, const GLfloat *m))wglGetProcAddress("glMatrixMultfEXT");
	glMatrixMultdEXT = (void (*)(GLenum mode, const GLdouble *m))wglGetProcAddress("glMatrixMultdEXT");
	glMatrixLoadIdentityEXT = (void (*)(GLenum mode))wglGetProcAddress("glMatrixLoadIdentityEXT");
	glMatrixRotatefEXT = (void (*)(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glMatrixRotatefEXT");
	glMatrixRotatedEXT = (void (*)(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glMatrixRotatedEXT");
	glMatrixScalefEXT = (void (*)(GLenum mode, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glMatrixScalefEXT");
	glMatrixScaledEXT = (void (*)(GLenum mode, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glMatrixScaledEXT");
	glMatrixTranslatefEXT = (void (*)(GLenum mode, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glMatrixTranslatefEXT");
	glMatrixTranslatedEXT = (void (*)(GLenum mode, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glMatrixTranslatedEXT");
	glMatrixFrustumEXT = (void (*)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar))wglGetProcAddress("glMatrixFrustumEXT");
	glMatrixOrthoEXT = (void (*)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar))wglGetProcAddress("glMatrixOrthoEXT");
	glMatrixPopEXT = (void (*)(GLenum mode))wglGetProcAddress("glMatrixPopEXT");
	glMatrixPushEXT = (void (*)(GLenum mode))wglGetProcAddress("glMatrixPushEXT");
	glClientAttribDefaultEXT = (void (*)(GLbitfield mask))wglGetProcAddress("glClientAttribDefaultEXT");
	glPushClientAttribDefaultEXT = (void (*)(GLbitfield mask))wglGetProcAddress("glPushClientAttribDefaultEXT");
	glTextureParameterfEXT = (void (*)(GLuint texture, GLenum target, GLenum pname, GLfloat param))wglGetProcAddress("glTextureParameterfEXT");
	glTextureParameterfvEXT = (void (*)(GLuint texture, GLenum target, GLenum pname, const GLfloat *params))wglGetProcAddress("glTextureParameterfvEXT");
	glTextureParameteriEXT = (void (*)(GLuint texture, GLenum target, GLenum pname, GLint param))wglGetProcAddress("glTextureParameteriEXT");
	glTextureParameterivEXT = (void (*)(GLuint texture, GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glTextureParameterivEXT");
	glTextureImage1DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTextureImage1DEXT");
	glTextureImage2DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTextureImage2DEXT");
	glTextureSubImage1DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTextureSubImage1DEXT");
	glTextureSubImage2DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTextureSubImage2DEXT");
	glCopyTextureImage1DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))wglGetProcAddress("glCopyTextureImage1DEXT");
	glCopyTextureImage2DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))wglGetProcAddress("glCopyTextureImage2DEXT");
	glCopyTextureSubImage1DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))wglGetProcAddress("glCopyTextureSubImage1DEXT");
	glCopyTextureSubImage2DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyTextureSubImage2DEXT");
	glGetTextureImageEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels))wglGetProcAddress("glGetTextureImageEXT");
	glGetTextureParameterfvEXT = (void (*)(GLuint texture, GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetTextureParameterfvEXT");
	glGetTextureParameterivEXT = (void (*)(GLuint texture, GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetTextureParameterivEXT");
	glGetTextureLevelParameterfvEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params))wglGetProcAddress("glGetTextureLevelParameterfvEXT");
	glGetTextureLevelParameterivEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params))wglGetProcAddress("glGetTextureLevelParameterivEXT");
	glTextureImage3DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTextureImage3DEXT");
	glTextureSubImage3DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTextureSubImage3DEXT");
	glCopyTextureSubImage3DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyTextureSubImage3DEXT");
	glBindMultiTextureEXT = (void (*)(GLenum texunit, GLenum target, GLuint texture))wglGetProcAddress("glBindMultiTextureEXT");
	glMultiTexCoordPointerEXT = (void (*)(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glMultiTexCoordPointerEXT");
	glMultiTexEnvfEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, GLfloat param))wglGetProcAddress("glMultiTexEnvfEXT");
	glMultiTexEnvfvEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params))wglGetProcAddress("glMultiTexEnvfvEXT");
	glMultiTexEnviEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, GLint param))wglGetProcAddress("glMultiTexEnviEXT");
	glMultiTexEnvivEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glMultiTexEnvivEXT");
	glMultiTexGendEXT = (void (*)(GLenum texunit, GLenum coord, GLenum pname, GLdouble param))wglGetProcAddress("glMultiTexGendEXT");
	glMultiTexGendvEXT = (void (*)(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params))wglGetProcAddress("glMultiTexGendvEXT");
	glMultiTexGenfEXT = (void (*)(GLenum texunit, GLenum coord, GLenum pname, GLfloat param))wglGetProcAddress("glMultiTexGenfEXT");
	glMultiTexGenfvEXT = (void (*)(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params))wglGetProcAddress("glMultiTexGenfvEXT");
	glMultiTexGeniEXT = (void (*)(GLenum texunit, GLenum coord, GLenum pname, GLint param))wglGetProcAddress("glMultiTexGeniEXT");
	glMultiTexGenivEXT = (void (*)(GLenum texunit, GLenum coord, GLenum pname, const GLint *params))wglGetProcAddress("glMultiTexGenivEXT");
	glGetMultiTexEnvfvEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetMultiTexEnvfvEXT");
	glGetMultiTexEnvivEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetMultiTexEnvivEXT");
	glGetMultiTexGendvEXT = (void (*)(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params))wglGetProcAddress("glGetMultiTexGendvEXT");
	glGetMultiTexGenfvEXT = (void (*)(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params))wglGetProcAddress("glGetMultiTexGenfvEXT");
	glGetMultiTexGenivEXT = (void (*)(GLenum texunit, GLenum coord, GLenum pname, GLint *params))wglGetProcAddress("glGetMultiTexGenivEXT");
	glMultiTexParameteriEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, GLint param))wglGetProcAddress("glMultiTexParameteriEXT");
	glMultiTexParameterivEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glMultiTexParameterivEXT");
	glMultiTexParameterfEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, GLfloat param))wglGetProcAddress("glMultiTexParameterfEXT");
	glMultiTexParameterfvEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params))wglGetProcAddress("glMultiTexParameterfvEXT");
	glMultiTexImage1DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glMultiTexImage1DEXT");
	glMultiTexImage2DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glMultiTexImage2DEXT");
	glMultiTexSubImage1DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glMultiTexSubImage1DEXT");
	glMultiTexSubImage2DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glMultiTexSubImage2DEXT");
	glCopyMultiTexImage1DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))wglGetProcAddress("glCopyMultiTexImage1DEXT");
	glCopyMultiTexImage2DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))wglGetProcAddress("glCopyMultiTexImage2DEXT");
	glCopyMultiTexSubImage1DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))wglGetProcAddress("glCopyMultiTexSubImage1DEXT");
	glCopyMultiTexSubImage2DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyMultiTexSubImage2DEXT");
	glGetMultiTexImageEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels))wglGetProcAddress("glGetMultiTexImageEXT");
	glGetMultiTexParameterfvEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetMultiTexParameterfvEXT");
	glGetMultiTexParameterivEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetMultiTexParameterivEXT");
	glGetMultiTexLevelParameterfvEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params))wglGetProcAddress("glGetMultiTexLevelParameterfvEXT");
	glGetMultiTexLevelParameterivEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params))wglGetProcAddress("glGetMultiTexLevelParameterivEXT");
	glMultiTexImage3DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glMultiTexImage3DEXT");
	glMultiTexSubImage3DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glMultiTexSubImage3DEXT");
	glCopyMultiTexSubImage3DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))wglGetProcAddress("glCopyMultiTexSubImage3DEXT");
	glEnableClientStateIndexedEXT = (void (*)(GLenum array, GLuint index))wglGetProcAddress("glEnableClientStateIndexedEXT");
	glDisableClientStateIndexedEXT = (void (*)(GLenum array, GLuint index))wglGetProcAddress("glDisableClientStateIndexedEXT");
	glGetFloatIndexedvEXT = (void (*)(GLenum target, GLuint index, GLfloat *data))wglGetProcAddress("glGetFloatIndexedvEXT");
	glGetDoubleIndexedvEXT = (void (*)(GLenum target, GLuint index, GLdouble *data))wglGetProcAddress("glGetDoubleIndexedvEXT");
	glGetPointerIndexedvEXT = (void (*)(GLenum target, GLuint index, void **data))wglGetProcAddress("glGetPointerIndexedvEXT");
	glEnableIndexedEXT = (void (*)(GLenum target, GLuint index))wglGetProcAddress("glEnableIndexedEXT");
	glDisableIndexedEXT = (void (*)(GLenum target, GLuint index))wglGetProcAddress("glDisableIndexedEXT");
	glIsEnabledIndexedEXT = (GLboolean (*)(GLenum target, GLuint index))wglGetProcAddress("glIsEnabledIndexedEXT");
	glGetIntegerIndexedvEXT = (void (*)(GLenum target, GLuint index, GLint *data))wglGetProcAddress("glGetIntegerIndexedvEXT");
	glGetBooleanIndexedvEXT = (void (*)(GLenum target, GLuint index, GLboolean *data))wglGetProcAddress("glGetBooleanIndexedvEXT");
	glCompressedTextureImage3DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedTextureImage3DEXT");
	glCompressedTextureImage2DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedTextureImage2DEXT");
	glCompressedTextureImage1DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedTextureImage1DEXT");
	glCompressedTextureSubImage3DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedTextureSubImage3DEXT");
	glCompressedTextureSubImage2DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedTextureSubImage2DEXT");
	glCompressedTextureSubImage1DEXT = (void (*)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedTextureSubImage1DEXT");
	glGetCompressedTextureImageEXT = (void (*)(GLuint texture, GLenum target, GLint lod, void *img))wglGetProcAddress("glGetCompressedTextureImageEXT");
	glCompressedMultiTexImage3DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedMultiTexImage3DEXT");
	glCompressedMultiTexImage2DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedMultiTexImage2DEXT");
	glCompressedMultiTexImage1DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedMultiTexImage1DEXT");
	glCompressedMultiTexSubImage3DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedMultiTexSubImage3DEXT");
	glCompressedMultiTexSubImage2DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedMultiTexSubImage2DEXT");
	glCompressedMultiTexSubImage1DEXT = (void (*)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits))wglGetProcAddress("glCompressedMultiTexSubImage1DEXT");
	glGetCompressedMultiTexImageEXT = (void (*)(GLenum texunit, GLenum target, GLint lod, void *img))wglGetProcAddress("glGetCompressedMultiTexImageEXT");
	glMatrixLoadTransposefEXT = (void (*)(GLenum mode, const GLfloat *m))wglGetProcAddress("glMatrixLoadTransposefEXT");
	glMatrixLoadTransposedEXT = (void (*)(GLenum mode, const GLdouble *m))wglGetProcAddress("glMatrixLoadTransposedEXT");
	glMatrixMultTransposefEXT = (void (*)(GLenum mode, const GLfloat *m))wglGetProcAddress("glMatrixMultTransposefEXT");
	glMatrixMultTransposedEXT = (void (*)(GLenum mode, const GLdouble *m))wglGetProcAddress("glMatrixMultTransposedEXT");
	glNamedBufferDataEXT = (void (*)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage))wglGetProcAddress("glNamedBufferDataEXT");
	glNamedBufferSubDataEXT = (void (*)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data))wglGetProcAddress("glNamedBufferSubDataEXT");
	glUnmapNamedBufferEXT = (GLboolean (*)(GLuint buffer))wglGetProcAddress("glUnmapNamedBufferEXT");
	glGetNamedBufferParameterivEXT = (void (*)(GLuint buffer, GLenum pname, GLint *params))wglGetProcAddress("glGetNamedBufferParameterivEXT");
	glGetNamedBufferPointervEXT = (void (*)(GLuint buffer, GLenum pname, void **params))wglGetProcAddress("glGetNamedBufferPointervEXT");
	glGetNamedBufferSubDataEXT = (void (*)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data))wglGetProcAddress("glGetNamedBufferSubDataEXT");
	glProgramUniform1fEXT = (void (*)(GLuint program, GLint location, GLfloat v0))wglGetProcAddress("glProgramUniform1fEXT");
	glProgramUniform2fEXT = (void (*)(GLuint program, GLint location, GLfloat v0, GLfloat v1))wglGetProcAddress("glProgramUniform2fEXT");
	glProgramUniform3fEXT = (void (*)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))wglGetProcAddress("glProgramUniform3fEXT");
	glProgramUniform4fEXT = (void (*)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))wglGetProcAddress("glProgramUniform4fEXT");
	glProgramUniform1iEXT = (void (*)(GLuint program, GLint location, GLint v0))wglGetProcAddress("glProgramUniform1iEXT");
	glProgramUniform2iEXT = (void (*)(GLuint program, GLint location, GLint v0, GLint v1))wglGetProcAddress("glProgramUniform2iEXT");
	glProgramUniform3iEXT = (void (*)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2))wglGetProcAddress("glProgramUniform3iEXT");
	glProgramUniform4iEXT = (void (*)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))wglGetProcAddress("glProgramUniform4iEXT");
	glProgramUniform1fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glProgramUniform1fvEXT");
	glProgramUniform2fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glProgramUniform2fvEXT");
	glProgramUniform3fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glProgramUniform3fvEXT");
	glProgramUniform4fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLfloat *value))wglGetProcAddress("glProgramUniform4fvEXT");
	glProgramUniform1ivEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glProgramUniform1ivEXT");
	glProgramUniform2ivEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glProgramUniform2ivEXT");
	glProgramUniform3ivEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glProgramUniform3ivEXT");
	glProgramUniform4ivEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLint *value))wglGetProcAddress("glProgramUniform4ivEXT");
	glProgramUniformMatrix2fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix2fvEXT");
	glProgramUniformMatrix3fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix3fvEXT");
	glProgramUniformMatrix4fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix4fvEXT");
	glProgramUniformMatrix2x3fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix2x3fvEXT");
	glProgramUniformMatrix3x2fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix3x2fvEXT");
	glProgramUniformMatrix2x4fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix2x4fvEXT");
	glProgramUniformMatrix4x2fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix4x2fvEXT");
	glProgramUniformMatrix3x4fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix3x4fvEXT");
	glProgramUniformMatrix4x3fvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))wglGetProcAddress("glProgramUniformMatrix4x3fvEXT");
	glTextureBufferEXT = (void (*)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer))wglGetProcAddress("glTextureBufferEXT");
	glMultiTexBufferEXT = (void (*)(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer))wglGetProcAddress("glMultiTexBufferEXT");
	glTextureParameterIivEXT = (void (*)(GLuint texture, GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glTextureParameterIivEXT");
	glTextureParameterIuivEXT = (void (*)(GLuint texture, GLenum target, GLenum pname, const GLuint *params))wglGetProcAddress("glTextureParameterIuivEXT");
	glGetTextureParameterIivEXT = (void (*)(GLuint texture, GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetTextureParameterIivEXT");
	glGetTextureParameterIuivEXT = (void (*)(GLuint texture, GLenum target, GLenum pname, GLuint *params))wglGetProcAddress("glGetTextureParameterIuivEXT");
	glMultiTexParameterIivEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glMultiTexParameterIivEXT");
	glMultiTexParameterIuivEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, const GLuint *params))wglGetProcAddress("glMultiTexParameterIuivEXT");
	glGetMultiTexParameterIivEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetMultiTexParameterIivEXT");
	glGetMultiTexParameterIuivEXT = (void (*)(GLenum texunit, GLenum target, GLenum pname, GLuint *params))wglGetProcAddress("glGetMultiTexParameterIuivEXT");
	glProgramUniform1uiEXT = (void (*)(GLuint program, GLint location, GLuint v0))wglGetProcAddress("glProgramUniform1uiEXT");
	glProgramUniform2uiEXT = (void (*)(GLuint program, GLint location, GLuint v0, GLuint v1))wglGetProcAddress("glProgramUniform2uiEXT");
	glProgramUniform3uiEXT = (void (*)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))wglGetProcAddress("glProgramUniform3uiEXT");
	glProgramUniform4uiEXT = (void (*)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))wglGetProcAddress("glProgramUniform4uiEXT");
	glProgramUniform1uivEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glProgramUniform1uivEXT");
	glProgramUniform2uivEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glProgramUniform2uivEXT");
	glProgramUniform3uivEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glProgramUniform3uivEXT");
	glProgramUniform4uivEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glProgramUniform4uivEXT");
	glNamedProgramLocalParameters4fvEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params))wglGetProcAddress("glNamedProgramLocalParameters4fvEXT");
	glNamedProgramLocalParameterI4iEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w))wglGetProcAddress("glNamedProgramLocalParameterI4iEXT");
	glNamedProgramLocalParameterI4ivEXT = (void (*)(GLuint program, GLenum target, GLuint index, const GLint *params))wglGetProcAddress("glNamedProgramLocalParameterI4ivEXT");
	glNamedProgramLocalParametersI4ivEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params))wglGetProcAddress("glNamedProgramLocalParametersI4ivEXT");
	glNamedProgramLocalParameterI4uiEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))wglGetProcAddress("glNamedProgramLocalParameterI4uiEXT");
	glNamedProgramLocalParameterI4uivEXT = (void (*)(GLuint program, GLenum target, GLuint index, const GLuint *params))wglGetProcAddress("glNamedProgramLocalParameterI4uivEXT");
	glNamedProgramLocalParametersI4uivEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params))wglGetProcAddress("glNamedProgramLocalParametersI4uivEXT");
	glGetNamedProgramLocalParameterIivEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLint *params))wglGetProcAddress("glGetNamedProgramLocalParameterIivEXT");
	glGetNamedProgramLocalParameterIuivEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLuint *params))wglGetProcAddress("glGetNamedProgramLocalParameterIuivEXT");
	glEnableClientStateiEXT = (void (*)(GLenum array, GLuint index))wglGetProcAddress("glEnableClientStateiEXT");
	glDisableClientStateiEXT = (void (*)(GLenum array, GLuint index))wglGetProcAddress("glDisableClientStateiEXT");
	glGetFloati_vEXT = (void (*)(GLenum pname, GLuint index, GLfloat *params))wglGetProcAddress("glGetFloati_vEXT");
	glGetDoublei_vEXT = (void (*)(GLenum pname, GLuint index, GLdouble *params))wglGetProcAddress("glGetDoublei_vEXT");
	glGetPointeri_vEXT = (void (*)(GLenum pname, GLuint index, void **params))wglGetProcAddress("glGetPointeri_vEXT");
	glNamedProgramStringEXT = (void (*)(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string))wglGetProcAddress("glNamedProgramStringEXT");
	glNamedProgramLocalParameter4dEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glNamedProgramLocalParameter4dEXT");
	glNamedProgramLocalParameter4dvEXT = (void (*)(GLuint program, GLenum target, GLuint index, const GLdouble *params))wglGetProcAddress("glNamedProgramLocalParameter4dvEXT");
	glNamedProgramLocalParameter4fEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glNamedProgramLocalParameter4fEXT");
	glNamedProgramLocalParameter4fvEXT = (void (*)(GLuint program, GLenum target, GLuint index, const GLfloat *params))wglGetProcAddress("glNamedProgramLocalParameter4fvEXT");
	glGetNamedProgramLocalParameterdvEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLdouble *params))wglGetProcAddress("glGetNamedProgramLocalParameterdvEXT");
	glGetNamedProgramLocalParameterfvEXT = (void (*)(GLuint program, GLenum target, GLuint index, GLfloat *params))wglGetProcAddress("glGetNamedProgramLocalParameterfvEXT");
	glGetNamedProgramivEXT = (void (*)(GLuint program, GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetNamedProgramivEXT");
	glGetNamedProgramStringEXT = (void (*)(GLuint program, GLenum target, GLenum pname, void *string))wglGetProcAddress("glGetNamedProgramStringEXT");
	glNamedRenderbufferStorageEXT = (void (*)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glNamedRenderbufferStorageEXT");
	glGetNamedRenderbufferParameterivEXT = (void (*)(GLuint renderbuffer, GLenum pname, GLint *params))wglGetProcAddress("glGetNamedRenderbufferParameterivEXT");
	glNamedRenderbufferStorageMultisampleEXT = (void (*)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glNamedRenderbufferStorageMultisampleEXT");
	glNamedRenderbufferStorageMultisampleCoverageEXT = (void (*)(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glNamedRenderbufferStorageMultisampleCoverageEXT");
	glCheckNamedFramebufferStatusEXT = (GLenum (*)(GLuint framebuffer, GLenum target))wglGetProcAddress("glCheckNamedFramebufferStatusEXT");
	glNamedFramebufferTexture1DEXT = (void (*)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level))wglGetProcAddress("glNamedFramebufferTexture1DEXT");
	glNamedFramebufferTexture2DEXT = (void (*)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level))wglGetProcAddress("glNamedFramebufferTexture2DEXT");
	glNamedFramebufferTexture3DEXT = (void (*)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))wglGetProcAddress("glNamedFramebufferTexture3DEXT");
	glNamedFramebufferRenderbufferEXT = (void (*)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))wglGetProcAddress("glNamedFramebufferRenderbufferEXT");
	glGetNamedFramebufferAttachmentParameterivEXT = (void (*)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params))wglGetProcAddress("glGetNamedFramebufferAttachmentParameterivEXT");
	glGenerateTextureMipmapEXT = (void (*)(GLuint texture, GLenum target))wglGetProcAddress("glGenerateTextureMipmapEXT");
	glGenerateMultiTexMipmapEXT = (void (*)(GLenum texunit, GLenum target))wglGetProcAddress("glGenerateMultiTexMipmapEXT");
	glFramebufferDrawBufferEXT = (void (*)(GLuint framebuffer, GLenum mode))wglGetProcAddress("glFramebufferDrawBufferEXT");
	glFramebufferDrawBuffersEXT = (void (*)(GLuint framebuffer, GLsizei n, const GLenum *bufs))wglGetProcAddress("glFramebufferDrawBuffersEXT");
	glFramebufferReadBufferEXT = (void (*)(GLuint framebuffer, GLenum mode))wglGetProcAddress("glFramebufferReadBufferEXT");
	glGetFramebufferParameterivEXT = (void (*)(GLuint framebuffer, GLenum pname, GLint *params))wglGetProcAddress("glGetFramebufferParameterivEXT");
	glNamedCopyBufferSubDataEXT = (void (*)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))wglGetProcAddress("glNamedCopyBufferSubDataEXT");
	glNamedFramebufferTextureEXT = (void (*)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level))wglGetProcAddress("glNamedFramebufferTextureEXT");
	glNamedFramebufferTextureLayerEXT = (void (*)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer))wglGetProcAddress("glNamedFramebufferTextureLayerEXT");
	glNamedFramebufferTextureFaceEXT = (void (*)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face))wglGetProcAddress("glNamedFramebufferTextureFaceEXT");
	glTextureRenderbufferEXT = (void (*)(GLuint texture, GLenum target, GLuint renderbuffer))wglGetProcAddress("glTextureRenderbufferEXT");
	glMultiTexRenderbufferEXT = (void (*)(GLenum texunit, GLenum target, GLuint renderbuffer))wglGetProcAddress("glMultiTexRenderbufferEXT");
	glVertexArrayVertexOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayVertexOffsetEXT");
	glVertexArrayColorOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayColorOffsetEXT");
	glVertexArrayEdgeFlagOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayEdgeFlagOffsetEXT");
	glVertexArrayIndexOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayIndexOffsetEXT");
	glVertexArrayNormalOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayNormalOffsetEXT");
	glVertexArrayTexCoordOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayTexCoordOffsetEXT");
	glVertexArrayMultiTexCoordOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayMultiTexCoordOffsetEXT");
	glVertexArrayFogCoordOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayFogCoordOffsetEXT");
	glVertexArraySecondaryColorOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArraySecondaryColorOffsetEXT");
	glVertexArrayVertexAttribOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayVertexAttribOffsetEXT");
	glVertexArrayVertexAttribIOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayVertexAttribIOffsetEXT");
	glEnableVertexArrayEXT = (void (*)(GLuint vaobj, GLenum array))wglGetProcAddress("glEnableVertexArrayEXT");
	glDisableVertexArrayEXT = (void (*)(GLuint vaobj, GLenum array))wglGetProcAddress("glDisableVertexArrayEXT");
	glEnableVertexArrayAttribEXT = (void (*)(GLuint vaobj, GLuint index))wglGetProcAddress("glEnableVertexArrayAttribEXT");
	glDisableVertexArrayAttribEXT = (void (*)(GLuint vaobj, GLuint index))wglGetProcAddress("glDisableVertexArrayAttribEXT");
	glGetVertexArrayIntegervEXT = (void (*)(GLuint vaobj, GLenum pname, GLint *param))wglGetProcAddress("glGetVertexArrayIntegervEXT");
	glGetVertexArrayPointervEXT = (void (*)(GLuint vaobj, GLenum pname, void **param))wglGetProcAddress("glGetVertexArrayPointervEXT");
	glGetVertexArrayIntegeri_vEXT = (void (*)(GLuint vaobj, GLuint index, GLenum pname, GLint *param))wglGetProcAddress("glGetVertexArrayIntegeri_vEXT");
	glGetVertexArrayPointeri_vEXT = (void (*)(GLuint vaobj, GLuint index, GLenum pname, void **param))wglGetProcAddress("glGetVertexArrayPointeri_vEXT");
	glFlushMappedNamedBufferRangeEXT = (void (*)(GLuint buffer, GLintptr offset, GLsizeiptr length))wglGetProcAddress("glFlushMappedNamedBufferRangeEXT");
	glNamedBufferStorageEXT = (void (*)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags))wglGetProcAddress("glNamedBufferStorageEXT");
	glClearNamedBufferDataEXT = (void (*)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data))wglGetProcAddress("glClearNamedBufferDataEXT");
	glClearNamedBufferSubDataEXT = (void (*)(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data))wglGetProcAddress("glClearNamedBufferSubDataEXT");
	glNamedFramebufferParameteriEXT = (void (*)(GLuint framebuffer, GLenum pname, GLint param))wglGetProcAddress("glNamedFramebufferParameteriEXT");
	glGetNamedFramebufferParameterivEXT = (void (*)(GLuint framebuffer, GLenum pname, GLint *params))wglGetProcAddress("glGetNamedFramebufferParameterivEXT");
	glProgramUniform1dEXT = (void (*)(GLuint program, GLint location, GLdouble x))wglGetProcAddress("glProgramUniform1dEXT");
	glProgramUniform2dEXT = (void (*)(GLuint program, GLint location, GLdouble x, GLdouble y))wglGetProcAddress("glProgramUniform2dEXT");
	glProgramUniform3dEXT = (void (*)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glProgramUniform3dEXT");
	glProgramUniform4dEXT = (void (*)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glProgramUniform4dEXT");
	glProgramUniform1dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glProgramUniform1dvEXT");
	glProgramUniform2dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glProgramUniform2dvEXT");
	glProgramUniform3dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glProgramUniform3dvEXT");
	glProgramUniform4dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, const GLdouble *value))wglGetProcAddress("glProgramUniform4dvEXT");
	glProgramUniformMatrix2dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix2dvEXT");
	glProgramUniformMatrix3dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix3dvEXT");
	glProgramUniformMatrix4dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix4dvEXT");
	glProgramUniformMatrix2x3dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix2x3dvEXT");
	glProgramUniformMatrix2x4dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix2x4dvEXT");
	glProgramUniformMatrix3x2dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix3x2dvEXT");
	glProgramUniformMatrix3x4dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix3x4dvEXT");
	glProgramUniformMatrix4x2dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix4x2dvEXT");
	glProgramUniformMatrix4x3dvEXT = (void (*)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))wglGetProcAddress("glProgramUniformMatrix4x3dvEXT");
	glTextureBufferRangeEXT = (void (*)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))wglGetProcAddress("glTextureBufferRangeEXT");
	glTextureStorage1DEXT = (void (*)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))wglGetProcAddress("glTextureStorage1DEXT");
	glTextureStorage2DEXT = (void (*)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glTextureStorage2DEXT");
	glTextureStorage3DEXT = (void (*)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))wglGetProcAddress("glTextureStorage3DEXT");
	glTextureStorage2DMultisampleEXT = (void (*)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))wglGetProcAddress("glTextureStorage2DMultisampleEXT");
	glTextureStorage3DMultisampleEXT = (void (*)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))wglGetProcAddress("glTextureStorage3DMultisampleEXT");
	glVertexArrayBindVertexBufferEXT = (void (*)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))wglGetProcAddress("glVertexArrayBindVertexBufferEXT");
	glVertexArrayVertexAttribFormatEXT = (void (*)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))wglGetProcAddress("glVertexArrayVertexAttribFormatEXT");
	glVertexArrayVertexAttribIFormatEXT = (void (*)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))wglGetProcAddress("glVertexArrayVertexAttribIFormatEXT");
	glVertexArrayVertexAttribLFormatEXT = (void (*)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))wglGetProcAddress("glVertexArrayVertexAttribLFormatEXT");
	glVertexArrayVertexAttribBindingEXT = (void (*)(GLuint vaobj, GLuint attribindex, GLuint bindingindex))wglGetProcAddress("glVertexArrayVertexAttribBindingEXT");
	glVertexArrayVertexBindingDivisorEXT = (void (*)(GLuint vaobj, GLuint bindingindex, GLuint divisor))wglGetProcAddress("glVertexArrayVertexBindingDivisorEXT");
	glVertexArrayVertexAttribLOffsetEXT = (void (*)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset))wglGetProcAddress("glVertexArrayVertexAttribLOffsetEXT");
	glTexturePageCommitmentEXT = (void (*)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident))wglGetProcAddress("glTexturePageCommitmentEXT");
	glVertexArrayVertexAttribDivisorEXT = (void (*)(GLuint vaobj, GLuint index, GLuint divisor))wglGetProcAddress("glVertexArrayVertexAttribDivisorEXT");
	glColorMaskIndexedEXT = (void (*)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))wglGetProcAddress("glColorMaskIndexedEXT");
	glDrawArraysInstancedEXT = (void (*)(GLenum mode, GLint start, GLsizei count, GLsizei primcount))wglGetProcAddress("glDrawArraysInstancedEXT");
	glDrawElementsInstancedEXT = (void (*)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))wglGetProcAddress("glDrawElementsInstancedEXT");
	glDrawRangeElementsEXT = (void (*)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))wglGetProcAddress("glDrawRangeElementsEXT");
	glFogCoordfEXT = (void (*)(GLfloat coord))wglGetProcAddress("glFogCoordfEXT");
	glFogCoordfvEXT = (void (*)(const GLfloat *coord))wglGetProcAddress("glFogCoordfvEXT");
	glFogCoorddEXT = (void (*)(GLdouble coord))wglGetProcAddress("glFogCoorddEXT");
	glFogCoorddvEXT = (void (*)(const GLdouble *coord))wglGetProcAddress("glFogCoorddvEXT");
	glFogCoordPointerEXT = (void (*)(GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glFogCoordPointerEXT");
	glBlitFramebufferEXT = (void (*)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))wglGetProcAddress("glBlitFramebufferEXT");
	glRenderbufferStorageMultisampleEXT = (void (*)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glRenderbufferStorageMultisampleEXT");
	glIsRenderbufferEXT = (GLboolean (*)(GLuint renderbuffer))wglGetProcAddress("glIsRenderbufferEXT");
	glBindRenderbufferEXT = (void (*)(GLenum target, GLuint renderbuffer))wglGetProcAddress("glBindRenderbufferEXT");
	glDeleteRenderbuffersEXT = (void (*)(GLsizei n, const GLuint *renderbuffers))wglGetProcAddress("glDeleteRenderbuffersEXT");
	glGenRenderbuffersEXT = (void (*)(GLsizei n, GLuint *renderbuffers))wglGetProcAddress("glGenRenderbuffersEXT");
	glRenderbufferStorageEXT = (void (*)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glRenderbufferStorageEXT");
	glGetRenderbufferParameterivEXT = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetRenderbufferParameterivEXT");
	glIsFramebufferEXT = (GLboolean (*)(GLuint framebuffer))wglGetProcAddress("glIsFramebufferEXT");
	glBindFramebufferEXT = (void (*)(GLenum target, GLuint framebuffer))wglGetProcAddress("glBindFramebufferEXT");
	glDeleteFramebuffersEXT = (void (*)(GLsizei n, const GLuint *framebuffers))wglGetProcAddress("glDeleteFramebuffersEXT");
	glGenFramebuffersEXT = (void (*)(GLsizei n, GLuint *framebuffers))wglGetProcAddress("glGenFramebuffersEXT");
	glCheckFramebufferStatusEXT = (GLenum (*)(GLenum target))wglGetProcAddress("glCheckFramebufferStatusEXT");
	glFramebufferTexture1DEXT = (void (*)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))wglGetProcAddress("glFramebufferTexture1DEXT");
	glFramebufferTexture2DEXT = (void (*)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))wglGetProcAddress("glFramebufferTexture2DEXT");
	glFramebufferTexture3DEXT = (void (*)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))wglGetProcAddress("glFramebufferTexture3DEXT");
	glFramebufferRenderbufferEXT = (void (*)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))wglGetProcAddress("glFramebufferRenderbufferEXT");
	glGetFramebufferAttachmentParameterivEXT = (void (*)(GLenum target, GLenum attachment, GLenum pname, GLint *params))wglGetProcAddress("glGetFramebufferAttachmentParameterivEXT");
	glGenerateMipmapEXT = (void (*)(GLenum target))wglGetProcAddress("glGenerateMipmapEXT");
	glProgramParameteriEXT = (void (*)(GLuint program, GLenum pname, GLint value))wglGetProcAddress("glProgramParameteriEXT");
	glProgramEnvParameters4fvEXT = (void (*)(GLenum target, GLuint index, GLsizei count, const GLfloat *params))wglGetProcAddress("glProgramEnvParameters4fvEXT");
	glProgramLocalParameters4fvEXT = (void (*)(GLenum target, GLuint index, GLsizei count, const GLfloat *params))wglGetProcAddress("glProgramLocalParameters4fvEXT");
	glGetUniformuivEXT = (void (*)(GLuint program, GLint location, GLuint *params))wglGetProcAddress("glGetUniformuivEXT");
	glBindFragDataLocationEXT = (void (*)(GLuint program, GLuint color, const GLchar *name))wglGetProcAddress("glBindFragDataLocationEXT");
	glGetFragDataLocationEXT = (GLint (*)(GLuint program, const GLchar *name))wglGetProcAddress("glGetFragDataLocationEXT");
	glUniform1uiEXT = (void (*)(GLint location, GLuint v0))wglGetProcAddress("glUniform1uiEXT");
	glUniform2uiEXT = (void (*)(GLint location, GLuint v0, GLuint v1))wglGetProcAddress("glUniform2uiEXT");
	glUniform3uiEXT = (void (*)(GLint location, GLuint v0, GLuint v1, GLuint v2))wglGetProcAddress("glUniform3uiEXT");
	glUniform4uiEXT = (void (*)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))wglGetProcAddress("glUniform4uiEXT");
	glUniform1uivEXT = (void (*)(GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glUniform1uivEXT");
	glUniform2uivEXT = (void (*)(GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glUniform2uivEXT");
	glUniform3uivEXT = (void (*)(GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glUniform3uivEXT");
	glUniform4uivEXT = (void (*)(GLint location, GLsizei count, const GLuint *value))wglGetProcAddress("glUniform4uivEXT");
	glGetHistogramEXT = (void (*)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values))wglGetProcAddress("glGetHistogramEXT");
	glGetHistogramParameterfvEXT = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetHistogramParameterfvEXT");
	glGetHistogramParameterivEXT = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetHistogramParameterivEXT");
	glGetMinmaxEXT = (void (*)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values))wglGetProcAddress("glGetMinmaxEXT");
	glGetMinmaxParameterfvEXT = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetMinmaxParameterfvEXT");
	glGetMinmaxParameterivEXT = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetMinmaxParameterivEXT");
	glHistogramEXT = (void (*)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink))wglGetProcAddress("glHistogramEXT");
	glMinmaxEXT = (void (*)(GLenum target, GLenum internalformat, GLboolean sink))wglGetProcAddress("glMinmaxEXT");
	glResetHistogramEXT = (void (*)(GLenum target))wglGetProcAddress("glResetHistogramEXT");
	glResetMinmaxEXT = (void (*)(GLenum target))wglGetProcAddress("glResetMinmaxEXT");
	glIndexFuncEXT = (void (*)(GLenum func, GLclampf ref))wglGetProcAddress("glIndexFuncEXT");
	glIndexMaterialEXT = (void (*)(GLenum face, GLenum mode))wglGetProcAddress("glIndexMaterialEXT");
	glApplyTextureEXT = (void (*)(GLenum mode))wglGetProcAddress("glApplyTextureEXT");
	glTextureLightEXT = (void (*)(GLenum pname))wglGetProcAddress("glTextureLightEXT");
	glTextureMaterialEXT = (void (*)(GLenum face, GLenum mode))wglGetProcAddress("glTextureMaterialEXT");
	glMultiDrawArraysEXT = (void (*)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount))wglGetProcAddress("glMultiDrawArraysEXT");
	glMultiDrawElementsEXT = (void (*)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount))wglGetProcAddress("glMultiDrawElementsEXT");
	glSampleMaskEXT = (void (*)(GLclampf value, GLboolean invert))wglGetProcAddress("glSampleMaskEXT");
	glSamplePatternEXT = (void (*)(GLenum pattern))wglGetProcAddress("glSamplePatternEXT");
	glColorTableEXT = (void (*)(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table))wglGetProcAddress("glColorTableEXT");
	glGetColorTableEXT = (void (*)(GLenum target, GLenum format, GLenum type, void *data))wglGetProcAddress("glGetColorTableEXT");
	glGetColorTableParameterivEXT = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetColorTableParameterivEXT");
	glGetColorTableParameterfvEXT = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetColorTableParameterfvEXT");
	glPixelTransformParameteriEXT = (void (*)(GLenum target, GLenum pname, GLint param))wglGetProcAddress("glPixelTransformParameteriEXT");
	glPixelTransformParameterfEXT = (void (*)(GLenum target, GLenum pname, GLfloat param))wglGetProcAddress("glPixelTransformParameterfEXT");
	glPixelTransformParameterivEXT = (void (*)(GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glPixelTransformParameterivEXT");
	glPixelTransformParameterfvEXT = (void (*)(GLenum target, GLenum pname, const GLfloat *params))wglGetProcAddress("glPixelTransformParameterfvEXT");
	glGetPixelTransformParameterivEXT = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetPixelTransformParameterivEXT");
	glGetPixelTransformParameterfvEXT = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetPixelTransformParameterfvEXT");
	glPointParameterfEXT = (void (*)(GLenum pname, GLfloat param))wglGetProcAddress("glPointParameterfEXT");
	glPointParameterfvEXT = (void (*)(GLenum pname, const GLfloat *params))wglGetProcAddress("glPointParameterfvEXT");
	glPolygonOffsetEXT = (void (*)(GLfloat factor, GLfloat bias))wglGetProcAddress("glPolygonOffsetEXT");
	glPolygonOffsetClampEXT = (void (*)(GLfloat factor, GLfloat units, GLfloat clamp))wglGetProcAddress("glPolygonOffsetClampEXT");
	glProvokingVertexEXT = (void (*)(GLenum mode))wglGetProcAddress("glProvokingVertexEXT");
	glRasterSamplesEXT = (void (*)(GLuint samples, GLboolean fixedsamplelocations))wglGetProcAddress("glRasterSamplesEXT");
	glSecondaryColor3bEXT = (void (*)(GLbyte red, GLbyte green, GLbyte blue))wglGetProcAddress("glSecondaryColor3bEXT");
	glSecondaryColor3bvEXT = (void (*)(const GLbyte *v))wglGetProcAddress("glSecondaryColor3bvEXT");
	glSecondaryColor3dEXT = (void (*)(GLdouble red, GLdouble green, GLdouble blue))wglGetProcAddress("glSecondaryColor3dEXT");
	glSecondaryColor3dvEXT = (void (*)(const GLdouble *v))wglGetProcAddress("glSecondaryColor3dvEXT");
	glSecondaryColor3fEXT = (void (*)(GLfloat red, GLfloat green, GLfloat blue))wglGetProcAddress("glSecondaryColor3fEXT");
	glSecondaryColor3fvEXT = (void (*)(const GLfloat *v))wglGetProcAddress("glSecondaryColor3fvEXT");
	glSecondaryColor3iEXT = (void (*)(GLint red, GLint green, GLint blue))wglGetProcAddress("glSecondaryColor3iEXT");
	glSecondaryColor3ivEXT = (void (*)(const GLint *v))wglGetProcAddress("glSecondaryColor3ivEXT");
	glSecondaryColor3sEXT = (void (*)(GLshort red, GLshort green, GLshort blue))wglGetProcAddress("glSecondaryColor3sEXT");
	glSecondaryColor3svEXT = (void (*)(const GLshort *v))wglGetProcAddress("glSecondaryColor3svEXT");
	glSecondaryColor3ubEXT = (void (*)(GLubyte red, GLubyte green, GLubyte blue))wglGetProcAddress("glSecondaryColor3ubEXT");
	glSecondaryColor3ubvEXT = (void (*)(const GLubyte *v))wglGetProcAddress("glSecondaryColor3ubvEXT");
	glSecondaryColor3uiEXT = (void (*)(GLuint red, GLuint green, GLuint blue))wglGetProcAddress("glSecondaryColor3uiEXT");
	glSecondaryColor3uivEXT = (void (*)(const GLuint *v))wglGetProcAddress("glSecondaryColor3uivEXT");
	glSecondaryColor3usEXT = (void (*)(GLushort red, GLushort green, GLushort blue))wglGetProcAddress("glSecondaryColor3usEXT");
	glSecondaryColor3usvEXT = (void (*)(const GLushort *v))wglGetProcAddress("glSecondaryColor3usvEXT");
	glSecondaryColorPointerEXT = (void (*)(GLint size, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glSecondaryColorPointerEXT");
	glUseShaderProgramEXT = (void (*)(GLenum type, GLuint program))wglGetProcAddress("glUseShaderProgramEXT");
	glActiveProgramEXT = (void (*)(GLuint program))wglGetProcAddress("glActiveProgramEXT");
	glCreateShaderProgramEXT = (GLuint (*)(GLenum type, const GLchar *string))wglGetProcAddress("glCreateShaderProgramEXT");
	glBindImageTextureEXT = (void (*)(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format))wglGetProcAddress("glBindImageTextureEXT");
	glMemoryBarrierEXT = (void (*)(GLbitfield barriers))wglGetProcAddress("glMemoryBarrierEXT");
	glStencilClearTagEXT = (void (*)(GLsizei stencilTagBits, GLuint stencilClearTag))wglGetProcAddress("glStencilClearTagEXT");
	glActiveStencilFaceEXT = (void (*)(GLenum face))wglGetProcAddress("glActiveStencilFaceEXT");
	glTexSubImage1DEXT = (void (*)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTexSubImage1DEXT");
	glTexSubImage2DEXT = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTexSubImage2DEXT");
	glTexImage3DEXT = (void (*)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTexImage3DEXT");
	glTexSubImage3DEXT = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTexSubImage3DEXT");
	glFramebufferTextureLayerEXT = (void (*)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))wglGetProcAddress("glFramebufferTextureLayerEXT");
	glTexBufferEXT = (void (*)(GLenum target, GLenum internalformat, GLuint buffer))wglGetProcAddress("glTexBufferEXT");
	glTexParameterIivEXT = (void (*)(GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glTexParameterIivEXT");
	glTexParameterIuivEXT = (void (*)(GLenum target, GLenum pname, const GLuint *params))wglGetProcAddress("glTexParameterIuivEXT");
	glGetTexParameterIivEXT = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetTexParameterIivEXT");
	glGetTexParameterIuivEXT = (void (*)(GLenum target, GLenum pname, GLuint *params))wglGetProcAddress("glGetTexParameterIuivEXT");
	glClearColorIiEXT = (void (*)(GLint red, GLint green, GLint blue, GLint alpha))wglGetProcAddress("glClearColorIiEXT");
	glClearColorIuiEXT = (void (*)(GLuint red, GLuint green, GLuint blue, GLuint alpha))wglGetProcAddress("glClearColorIuiEXT");
	glAreTexturesResidentEXT = (GLboolean (*)(GLsizei n, const GLuint *textures, GLboolean *residences))wglGetProcAddress("glAreTexturesResidentEXT");
	glBindTextureEXT = (void (*)(GLenum target, GLuint texture))wglGetProcAddress("glBindTextureEXT");
	glDeleteTexturesEXT = (void (*)(GLsizei n, const GLuint *textures))wglGetProcAddress("glDeleteTexturesEXT");
	glGenTexturesEXT = (void (*)(GLsizei n, GLuint *textures))wglGetProcAddress("glGenTexturesEXT");
	glIsTextureEXT = (GLboolean (*)(GLuint texture))wglGetProcAddress("glIsTextureEXT");
	glPrioritizeTexturesEXT = (void (*)(GLsizei n, const GLuint *textures, const GLclampf *priorities))wglGetProcAddress("glPrioritizeTexturesEXT");
	glTextureNormalEXT = (void (*)(GLenum mode))wglGetProcAddress("glTextureNormalEXT");
	glGetQueryObjecti64vEXT = (void (*)(GLuint id, GLenum pname, GLint64 *params))wglGetProcAddress("glGetQueryObjecti64vEXT");
	glGetQueryObjectui64vEXT = (void (*)(GLuint id, GLenum pname, GLuint64 *params))wglGetProcAddress("glGetQueryObjectui64vEXT");
	glBeginTransformFeedbackEXT = (void (*)(GLenum primitiveMode))wglGetProcAddress("glBeginTransformFeedbackEXT");
	glEndTransformFeedbackEXT = (void (*)(void))wglGetProcAddress("glEndTransformFeedbackEXT");
	glBindBufferRangeEXT = (void (*)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))wglGetProcAddress("glBindBufferRangeEXT");
	glBindBufferOffsetEXT = (void (*)(GLenum target, GLuint index, GLuint buffer, GLintptr offset))wglGetProcAddress("glBindBufferOffsetEXT");
	glBindBufferBaseEXT = (void (*)(GLenum target, GLuint index, GLuint buffer))wglGetProcAddress("glBindBufferBaseEXT");
	glTransformFeedbackVaryingsEXT = (void (*)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))wglGetProcAddress("glTransformFeedbackVaryingsEXT");
	glGetTransformFeedbackVaryingEXT = (void (*)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))wglGetProcAddress("glGetTransformFeedbackVaryingEXT");
	glArrayElementEXT = (void (*)(GLint i))wglGetProcAddress("glArrayElementEXT");
	glColorPointerEXT = (void (*)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer))wglGetProcAddress("glColorPointerEXT");
	glDrawArraysEXT = (void (*)(GLenum mode, GLint first, GLsizei count))wglGetProcAddress("glDrawArraysEXT");
	glEdgeFlagPointerEXT = (void (*)(GLsizei stride, GLsizei count, const GLboolean *pointer))wglGetProcAddress("glEdgeFlagPointerEXT");
	glGetPointervEXT = (void (*)(GLenum pname, void **params))wglGetProcAddress("glGetPointervEXT");
	glIndexPointerEXT = (void (*)(GLenum type, GLsizei stride, GLsizei count, const void *pointer))wglGetProcAddress("glIndexPointerEXT");
	glNormalPointerEXT = (void (*)(GLenum type, GLsizei stride, GLsizei count, const void *pointer))wglGetProcAddress("glNormalPointerEXT");
	glTexCoordPointerEXT = (void (*)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer))wglGetProcAddress("glTexCoordPointerEXT");
	glVertexPointerEXT = (void (*)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer))wglGetProcAddress("glVertexPointerEXT");
	glVertexAttribL1dEXT = (void (*)(GLuint index, GLdouble x))wglGetProcAddress("glVertexAttribL1dEXT");
	glVertexAttribL2dEXT = (void (*)(GLuint index, GLdouble x, GLdouble y))wglGetProcAddress("glVertexAttribL2dEXT");
	glVertexAttribL3dEXT = (void (*)(GLuint index, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glVertexAttribL3dEXT");
	glVertexAttribL4dEXT = (void (*)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glVertexAttribL4dEXT");
	glVertexAttribL1dvEXT = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttribL1dvEXT");
	glVertexAttribL2dvEXT = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttribL2dvEXT");
	glVertexAttribL3dvEXT = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttribL3dvEXT");
	glVertexAttribL4dvEXT = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttribL4dvEXT");
	glVertexAttribLPointerEXT = (void (*)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glVertexAttribLPointerEXT");
	glGetVertexAttribLdvEXT = (void (*)(GLuint index, GLenum pname, GLdouble *params))wglGetProcAddress("glGetVertexAttribLdvEXT");
	glBeginVertexShaderEXT = (void (*)(void))wglGetProcAddress("glBeginVertexShaderEXT");
	glEndVertexShaderEXT = (void (*)(void))wglGetProcAddress("glEndVertexShaderEXT");
	glBindVertexShaderEXT = (void (*)(GLuint id))wglGetProcAddress("glBindVertexShaderEXT");
	glGenVertexShadersEXT = (GLuint (*)(GLuint range))wglGetProcAddress("glGenVertexShadersEXT");
	glDeleteVertexShaderEXT = (void (*)(GLuint id))wglGetProcAddress("glDeleteVertexShaderEXT");
	glShaderOp1EXT = (void (*)(GLenum op, GLuint res, GLuint arg1))wglGetProcAddress("glShaderOp1EXT");
	glShaderOp2EXT = (void (*)(GLenum op, GLuint res, GLuint arg1, GLuint arg2))wglGetProcAddress("glShaderOp2EXT");
	glShaderOp3EXT = (void (*)(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3))wglGetProcAddress("glShaderOp3EXT");
	glSwizzleEXT = (void (*)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW))wglGetProcAddress("glSwizzleEXT");
	glWriteMaskEXT = (void (*)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW))wglGetProcAddress("glWriteMaskEXT");
	glInsertComponentEXT = (void (*)(GLuint res, GLuint src, GLuint num))wglGetProcAddress("glInsertComponentEXT");
	glExtractComponentEXT = (void (*)(GLuint res, GLuint src, GLuint num))wglGetProcAddress("glExtractComponentEXT");
	glGenSymbolsEXT = (GLuint (*)(GLenum datatype, GLenum storagetype, GLenum range, GLuint components))wglGetProcAddress("glGenSymbolsEXT");
	glSetInvariantEXT = (void (*)(GLuint id, GLenum type, const void *addr))wglGetProcAddress("glSetInvariantEXT");
	glSetLocalConstantEXT = (void (*)(GLuint id, GLenum type, const void *addr))wglGetProcAddress("glSetLocalConstantEXT");
	glVariantbvEXT = (void (*)(GLuint id, const GLbyte *addr))wglGetProcAddress("glVariantbvEXT");
	glVariantsvEXT = (void (*)(GLuint id, const GLshort *addr))wglGetProcAddress("glVariantsvEXT");
	glVariantivEXT = (void (*)(GLuint id, const GLint *addr))wglGetProcAddress("glVariantivEXT");
	glVariantfvEXT = (void (*)(GLuint id, const GLfloat *addr))wglGetProcAddress("glVariantfvEXT");
	glVariantdvEXT = (void (*)(GLuint id, const GLdouble *addr))wglGetProcAddress("glVariantdvEXT");
	glVariantubvEXT = (void (*)(GLuint id, const GLubyte *addr))wglGetProcAddress("glVariantubvEXT");
	glVariantusvEXT = (void (*)(GLuint id, const GLushort *addr))wglGetProcAddress("glVariantusvEXT");
	glVariantuivEXT = (void (*)(GLuint id, const GLuint *addr))wglGetProcAddress("glVariantuivEXT");
	glVariantPointerEXT = (void (*)(GLuint id, GLenum type, GLuint stride, const void *addr))wglGetProcAddress("glVariantPointerEXT");
	glEnableVariantClientStateEXT = (void (*)(GLuint id))wglGetProcAddress("glEnableVariantClientStateEXT");
	glDisableVariantClientStateEXT = (void (*)(GLuint id))wglGetProcAddress("glDisableVariantClientStateEXT");
	glBindLightParameterEXT = (GLuint (*)(GLenum light, GLenum value))wglGetProcAddress("glBindLightParameterEXT");
	glBindMaterialParameterEXT = (GLuint (*)(GLenum face, GLenum value))wglGetProcAddress("glBindMaterialParameterEXT");
	glBindTexGenParameterEXT = (GLuint (*)(GLenum unit, GLenum coord, GLenum value))wglGetProcAddress("glBindTexGenParameterEXT");
	glBindTextureUnitParameterEXT = (GLuint (*)(GLenum unit, GLenum value))wglGetProcAddress("glBindTextureUnitParameterEXT");
	glBindParameterEXT = (GLuint (*)(GLenum value))wglGetProcAddress("glBindParameterEXT");
	glIsVariantEnabledEXT = (GLboolean (*)(GLuint id, GLenum cap))wglGetProcAddress("glIsVariantEnabledEXT");
	glGetVariantBooleanvEXT = (void (*)(GLuint id, GLenum value, GLboolean *data))wglGetProcAddress("glGetVariantBooleanvEXT");
	glGetVariantIntegervEXT = (void (*)(GLuint id, GLenum value, GLint *data))wglGetProcAddress("glGetVariantIntegervEXT");
	glGetVariantFloatvEXT = (void (*)(GLuint id, GLenum value, GLfloat *data))wglGetProcAddress("glGetVariantFloatvEXT");
	glGetVariantPointervEXT = (void (*)(GLuint id, GLenum value, void **data))wglGetProcAddress("glGetVariantPointervEXT");
	glGetInvariantBooleanvEXT = (void (*)(GLuint id, GLenum value, GLboolean *data))wglGetProcAddress("glGetInvariantBooleanvEXT");
	glGetInvariantIntegervEXT = (void (*)(GLuint id, GLenum value, GLint *data))wglGetProcAddress("glGetInvariantIntegervEXT");
	glGetInvariantFloatvEXT = (void (*)(GLuint id, GLenum value, GLfloat *data))wglGetProcAddress("glGetInvariantFloatvEXT");
	glGetLocalConstantBooleanvEXT = (void (*)(GLuint id, GLenum value, GLboolean *data))wglGetProcAddress("glGetLocalConstantBooleanvEXT");
	glGetLocalConstantIntegervEXT = (void (*)(GLuint id, GLenum value, GLint *data))wglGetProcAddress("glGetLocalConstantIntegervEXT");
	glGetLocalConstantFloatvEXT = (void (*)(GLuint id, GLenum value, GLfloat *data))wglGetProcAddress("glGetLocalConstantFloatvEXT");
	glVertexWeightfEXT = (void (*)(GLfloat weight))wglGetProcAddress("glVertexWeightfEXT");
	glVertexWeightfvEXT = (void (*)(const GLfloat *weight))wglGetProcAddress("glVertexWeightfvEXT");
	glVertexWeightPointerEXT = (void (*)(GLint size, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glVertexWeightPointerEXT");
	glImportSyncEXT = (GLsync (*)(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags))wglGetProcAddress("glImportSyncEXT");
	glFrameTerminatorGREMEDY = (void (*)(void))wglGetProcAddress("glFrameTerminatorGREMEDY");
	glStringMarkerGREMEDY = (void (*)(GLsizei len, const void *string))wglGetProcAddress("glStringMarkerGREMEDY");
	glImageTransformParameteriHP = (void (*)(GLenum target, GLenum pname, GLint param))wglGetProcAddress("glImageTransformParameteriHP");
	glImageTransformParameterfHP = (void (*)(GLenum target, GLenum pname, GLfloat param))wglGetProcAddress("glImageTransformParameterfHP");
	glImageTransformParameterivHP = (void (*)(GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glImageTransformParameterivHP");
	glImageTransformParameterfvHP = (void (*)(GLenum target, GLenum pname, const GLfloat *params))wglGetProcAddress("glImageTransformParameterfvHP");
	glGetImageTransformParameterivHP = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetImageTransformParameterivHP");
	glGetImageTransformParameterfvHP = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetImageTransformParameterfvHP");
	glMultiModeDrawArraysIBM = (void (*)(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride))wglGetProcAddress("glMultiModeDrawArraysIBM");
	glMultiModeDrawElementsIBM = (void (*)(const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride))wglGetProcAddress("glMultiModeDrawElementsIBM");
	glFlushStaticDataIBM = (void (*)(GLenum target))wglGetProcAddress("glFlushStaticDataIBM");
	glColorPointerListIBM = (void (*)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride))wglGetProcAddress("glColorPointerListIBM");
	glSecondaryColorPointerListIBM = (void (*)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride))wglGetProcAddress("glSecondaryColorPointerListIBM");
	glEdgeFlagPointerListIBM = (void (*)(GLint stride, const GLboolean **pointer, GLint ptrstride))wglGetProcAddress("glEdgeFlagPointerListIBM");
	glFogCoordPointerListIBM = (void (*)(GLenum type, GLint stride, const void **pointer, GLint ptrstride))wglGetProcAddress("glFogCoordPointerListIBM");
	glIndexPointerListIBM = (void (*)(GLenum type, GLint stride, const void **pointer, GLint ptrstride))wglGetProcAddress("glIndexPointerListIBM");
	glNormalPointerListIBM = (void (*)(GLenum type, GLint stride, const void **pointer, GLint ptrstride))wglGetProcAddress("glNormalPointerListIBM");
	glTexCoordPointerListIBM = (void (*)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride))wglGetProcAddress("glTexCoordPointerListIBM");
	glVertexPointerListIBM = (void (*)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride))wglGetProcAddress("glVertexPointerListIBM");
	glBlendFuncSeparateINGR = (void (*)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))wglGetProcAddress("glBlendFuncSeparateINGR");
	glSyncTextureINTEL = (void (*)(GLuint texture))wglGetProcAddress("glSyncTextureINTEL");
	glUnmapTexture2DINTEL = (void (*)(GLuint texture, GLint level))wglGetProcAddress("glUnmapTexture2DINTEL");
	glVertexPointervINTEL = (void (*)(GLint size, GLenum type, const void **pointer))wglGetProcAddress("glVertexPointervINTEL");
	glNormalPointervINTEL = (void (*)(GLenum type, const void **pointer))wglGetProcAddress("glNormalPointervINTEL");
	glColorPointervINTEL = (void (*)(GLint size, GLenum type, const void **pointer))wglGetProcAddress("glColorPointervINTEL");
	glTexCoordPointervINTEL = (void (*)(GLint size, GLenum type, const void **pointer))wglGetProcAddress("glTexCoordPointervINTEL");
	glBeginPerfQueryINTEL = (void (*)(GLuint queryHandle))wglGetProcAddress("glBeginPerfQueryINTEL");
	glCreatePerfQueryINTEL = (void (*)(GLuint queryId, GLuint *queryHandle))wglGetProcAddress("glCreatePerfQueryINTEL");
	glDeletePerfQueryINTEL = (void (*)(GLuint queryHandle))wglGetProcAddress("glDeletePerfQueryINTEL");
	glEndPerfQueryINTEL = (void (*)(GLuint queryHandle))wglGetProcAddress("glEndPerfQueryINTEL");
	glGetFirstPerfQueryIdINTEL = (void (*)(GLuint *queryId))wglGetProcAddress("glGetFirstPerfQueryIdINTEL");
	glGetNextPerfQueryIdINTEL = (void (*)(GLuint queryId, GLuint *nextQueryId))wglGetProcAddress("glGetNextPerfQueryIdINTEL");
	glGetPerfCounterInfoINTEL = (void (*)(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue))wglGetProcAddress("glGetPerfCounterInfoINTEL");
	glGetPerfQueryDataINTEL = (void (*)(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten))wglGetProcAddress("glGetPerfQueryDataINTEL");
	glGetPerfQueryIdByNameINTEL = (void (*)(GLchar *queryName, GLuint *queryId))wglGetProcAddress("glGetPerfQueryIdByNameINTEL");
	glGetPerfQueryInfoINTEL = (void (*)(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask))wglGetProcAddress("glGetPerfQueryInfoINTEL");
	glResizeBuffersMESA = (void (*)(void))wglGetProcAddress("glResizeBuffersMESA");
	glWindowPos2dMESA = (void (*)(GLdouble x, GLdouble y))wglGetProcAddress("glWindowPos2dMESA");
	glWindowPos2dvMESA = (void (*)(const GLdouble *v))wglGetProcAddress("glWindowPos2dvMESA");
	glWindowPos2fMESA = (void (*)(GLfloat x, GLfloat y))wglGetProcAddress("glWindowPos2fMESA");
	glWindowPos2fvMESA = (void (*)(const GLfloat *v))wglGetProcAddress("glWindowPos2fvMESA");
	glWindowPos2iMESA = (void (*)(GLint x, GLint y))wglGetProcAddress("glWindowPos2iMESA");
	glWindowPos2ivMESA = (void (*)(const GLint *v))wglGetProcAddress("glWindowPos2ivMESA");
	glWindowPos2sMESA = (void (*)(GLshort x, GLshort y))wglGetProcAddress("glWindowPos2sMESA");
	glWindowPos2svMESA = (void (*)(const GLshort *v))wglGetProcAddress("glWindowPos2svMESA");
	glWindowPos3dMESA = (void (*)(GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glWindowPos3dMESA");
	glWindowPos3dvMESA = (void (*)(const GLdouble *v))wglGetProcAddress("glWindowPos3dvMESA");
	glWindowPos3fMESA = (void (*)(GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glWindowPos3fMESA");
	glWindowPos3fvMESA = (void (*)(const GLfloat *v))wglGetProcAddress("glWindowPos3fvMESA");
	glWindowPos3iMESA = (void (*)(GLint x, GLint y, GLint z))wglGetProcAddress("glWindowPos3iMESA");
	glWindowPos3ivMESA = (void (*)(const GLint *v))wglGetProcAddress("glWindowPos3ivMESA");
	glWindowPos3sMESA = (void (*)(GLshort x, GLshort y, GLshort z))wglGetProcAddress("glWindowPos3sMESA");
	glWindowPos3svMESA = (void (*)(const GLshort *v))wglGetProcAddress("glWindowPos3svMESA");
	glWindowPos4dMESA = (void (*)(GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glWindowPos4dMESA");
	glWindowPos4dvMESA = (void (*)(const GLdouble *v))wglGetProcAddress("glWindowPos4dvMESA");
	glWindowPos4fMESA = (void (*)(GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glWindowPos4fMESA");
	glWindowPos4fvMESA = (void (*)(const GLfloat *v))wglGetProcAddress("glWindowPos4fvMESA");
	glWindowPos4iMESA = (void (*)(GLint x, GLint y, GLint z, GLint w))wglGetProcAddress("glWindowPos4iMESA");
	glWindowPos4ivMESA = (void (*)(const GLint *v))wglGetProcAddress("glWindowPos4ivMESA");
	glWindowPos4sMESA = (void (*)(GLshort x, GLshort y, GLshort z, GLshort w))wglGetProcAddress("glWindowPos4sMESA");
	glWindowPos4svMESA = (void (*)(const GLshort *v))wglGetProcAddress("glWindowPos4svMESA");
	glBeginConditionalRenderNVX = (void (*)(GLuint id))wglGetProcAddress("glBeginConditionalRenderNVX");
	glEndConditionalRenderNVX = (void (*)(void))wglGetProcAddress("glEndConditionalRenderNVX");
	glMultiDrawArraysIndirectBindlessNV = (void (*)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount))wglGetProcAddress("glMultiDrawArraysIndirectBindlessNV");
	glMultiDrawElementsIndirectBindlessNV = (void (*)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount))wglGetProcAddress("glMultiDrawElementsIndirectBindlessNV");
	glMultiDrawArraysIndirectBindlessCountNV = (void (*)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount))wglGetProcAddress("glMultiDrawArraysIndirectBindlessCountNV");
	glMultiDrawElementsIndirectBindlessCountNV = (void (*)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount))wglGetProcAddress("glMultiDrawElementsIndirectBindlessCountNV");
	glGetTextureHandleNV = (GLuint64 (*)(GLuint texture))wglGetProcAddress("glGetTextureHandleNV");
	glGetTextureSamplerHandleNV = (GLuint64 (*)(GLuint texture, GLuint sampler))wglGetProcAddress("glGetTextureSamplerHandleNV");
	glMakeTextureHandleResidentNV = (void (*)(GLuint64 handle))wglGetProcAddress("glMakeTextureHandleResidentNV");
	glMakeTextureHandleNonResidentNV = (void (*)(GLuint64 handle))wglGetProcAddress("glMakeTextureHandleNonResidentNV");
	glGetImageHandleNV = (GLuint64 (*)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format))wglGetProcAddress("glGetImageHandleNV");
	glMakeImageHandleResidentNV = (void (*)(GLuint64 handle, GLenum access))wglGetProcAddress("glMakeImageHandleResidentNV");
	glMakeImageHandleNonResidentNV = (void (*)(GLuint64 handle))wglGetProcAddress("glMakeImageHandleNonResidentNV");
	glUniformHandleui64NV = (void (*)(GLint location, GLuint64 value))wglGetProcAddress("glUniformHandleui64NV");
	glUniformHandleui64vNV = (void (*)(GLint location, GLsizei count, const GLuint64 *value))wglGetProcAddress("glUniformHandleui64vNV");
	glProgramUniformHandleui64NV = (void (*)(GLuint program, GLint location, GLuint64 value))wglGetProcAddress("glProgramUniformHandleui64NV");
	glProgramUniformHandleui64vNV = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint64 *values))wglGetProcAddress("glProgramUniformHandleui64vNV");
	glIsTextureHandleResidentNV = (GLboolean (*)(GLuint64 handle))wglGetProcAddress("glIsTextureHandleResidentNV");
	glIsImageHandleResidentNV = (GLboolean (*)(GLuint64 handle))wglGetProcAddress("glIsImageHandleResidentNV");
	glBlendParameteriNV = (void (*)(GLenum pname, GLint value))wglGetProcAddress("glBlendParameteriNV");
	glBlendBarrierNV = (void (*)(void))wglGetProcAddress("glBlendBarrierNV");
	glBeginConditionalRenderNV = (void (*)(GLuint id, GLenum mode))wglGetProcAddress("glBeginConditionalRenderNV");
	glEndConditionalRenderNV = (void (*)(void))wglGetProcAddress("glEndConditionalRenderNV");
	glSubpixelPrecisionBiasNV = (void (*)(GLuint xbits, GLuint ybits))wglGetProcAddress("glSubpixelPrecisionBiasNV");
	glCopyImageSubDataNV = (void (*)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth))wglGetProcAddress("glCopyImageSubDataNV");
	glDepthRangedNV = (void (*)(GLdouble zNear, GLdouble zFar))wglGetProcAddress("glDepthRangedNV");
	glClearDepthdNV = (void (*)(GLdouble depth))wglGetProcAddress("glClearDepthdNV");
	glDepthBoundsdNV = (void (*)(GLdouble zmin, GLdouble zmax))wglGetProcAddress("glDepthBoundsdNV");
	glDrawTextureNV = (void (*)(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1))wglGetProcAddress("glDrawTextureNV");
	glMapControlPointsNV = (void (*)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points))wglGetProcAddress("glMapControlPointsNV");
	glMapParameterivNV = (void (*)(GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glMapParameterivNV");
	glMapParameterfvNV = (void (*)(GLenum target, GLenum pname, const GLfloat *params))wglGetProcAddress("glMapParameterfvNV");
	glGetMapControlPointsNV = (void (*)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points))wglGetProcAddress("glGetMapControlPointsNV");
	glGetMapParameterivNV = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetMapParameterivNV");
	glGetMapParameterfvNV = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetMapParameterfvNV");
	glGetMapAttribParameterivNV = (void (*)(GLenum target, GLuint index, GLenum pname, GLint *params))wglGetProcAddress("glGetMapAttribParameterivNV");
	glGetMapAttribParameterfvNV = (void (*)(GLenum target, GLuint index, GLenum pname, GLfloat *params))wglGetProcAddress("glGetMapAttribParameterfvNV");
	glEvalMapsNV = (void (*)(GLenum target, GLenum mode))wglGetProcAddress("glEvalMapsNV");
	glGetMultisamplefvNV = (void (*)(GLenum pname, GLuint index, GLfloat *val))wglGetProcAddress("glGetMultisamplefvNV");
	glSampleMaskIndexedNV = (void (*)(GLuint index, GLbitfield mask))wglGetProcAddress("glSampleMaskIndexedNV");
	glTexRenderbufferNV = (void (*)(GLenum target, GLuint renderbuffer))wglGetProcAddress("glTexRenderbufferNV");
	glDeleteFencesNV = (void (*)(GLsizei n, const GLuint *fences))wglGetProcAddress("glDeleteFencesNV");
	glGenFencesNV = (void (*)(GLsizei n, GLuint *fences))wglGetProcAddress("glGenFencesNV");
	glIsFenceNV = (GLboolean (*)(GLuint fence))wglGetProcAddress("glIsFenceNV");
	glTestFenceNV = (GLboolean (*)(GLuint fence))wglGetProcAddress("glTestFenceNV");
	glGetFenceivNV = (void (*)(GLuint fence, GLenum pname, GLint *params))wglGetProcAddress("glGetFenceivNV");
	glFinishFenceNV = (void (*)(GLuint fence))wglGetProcAddress("glFinishFenceNV");
	glSetFenceNV = (void (*)(GLuint fence, GLenum condition))wglGetProcAddress("glSetFenceNV");
	glFragmentCoverageColorNV = (void (*)(GLuint color))wglGetProcAddress("glFragmentCoverageColorNV");
	glProgramNamedParameter4fNV = (void (*)(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glProgramNamedParameter4fNV");
	glProgramNamedParameter4fvNV = (void (*)(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v))wglGetProcAddress("glProgramNamedParameter4fvNV");
	glProgramNamedParameter4dNV = (void (*)(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glProgramNamedParameter4dNV");
	glProgramNamedParameter4dvNV = (void (*)(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v))wglGetProcAddress("glProgramNamedParameter4dvNV");
	glGetProgramNamedParameterfvNV = (void (*)(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params))wglGetProcAddress("glGetProgramNamedParameterfvNV");
	glGetProgramNamedParameterdvNV = (void (*)(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params))wglGetProcAddress("glGetProgramNamedParameterdvNV");
	glCoverageModulationTableNV = (void (*)(GLsizei n, const GLfloat *v))wglGetProcAddress("glCoverageModulationTableNV");
	glGetCoverageModulationTableNV = (void (*)(GLsizei bufsize, GLfloat *v))wglGetProcAddress("glGetCoverageModulationTableNV");
	glCoverageModulationNV = (void (*)(GLenum components))wglGetProcAddress("glCoverageModulationNV");
	glRenderbufferStorageMultisampleCoverageNV = (void (*)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height))wglGetProcAddress("glRenderbufferStorageMultisampleCoverageNV");
	glProgramVertexLimitNV = (void (*)(GLenum target, GLint limit))wglGetProcAddress("glProgramVertexLimitNV");
	glFramebufferTextureEXT = (void (*)(GLenum target, GLenum attachment, GLuint texture, GLint level))wglGetProcAddress("glFramebufferTextureEXT");
	glFramebufferTextureFaceEXT = (void (*)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face))wglGetProcAddress("glFramebufferTextureFaceEXT");
	glProgramLocalParameterI4iNV = (void (*)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w))wglGetProcAddress("glProgramLocalParameterI4iNV");
	glProgramLocalParameterI4ivNV = (void (*)(GLenum target, GLuint index, const GLint *params))wglGetProcAddress("glProgramLocalParameterI4ivNV");
	glProgramLocalParametersI4ivNV = (void (*)(GLenum target, GLuint index, GLsizei count, const GLint *params))wglGetProcAddress("glProgramLocalParametersI4ivNV");
	glProgramLocalParameterI4uiNV = (void (*)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))wglGetProcAddress("glProgramLocalParameterI4uiNV");
	glProgramLocalParameterI4uivNV = (void (*)(GLenum target, GLuint index, const GLuint *params))wglGetProcAddress("glProgramLocalParameterI4uivNV");
	glProgramLocalParametersI4uivNV = (void (*)(GLenum target, GLuint index, GLsizei count, const GLuint *params))wglGetProcAddress("glProgramLocalParametersI4uivNV");
	glProgramEnvParameterI4iNV = (void (*)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w))wglGetProcAddress("glProgramEnvParameterI4iNV");
	glProgramEnvParameterI4ivNV = (void (*)(GLenum target, GLuint index, const GLint *params))wglGetProcAddress("glProgramEnvParameterI4ivNV");
	glProgramEnvParametersI4ivNV = (void (*)(GLenum target, GLuint index, GLsizei count, const GLint *params))wglGetProcAddress("glProgramEnvParametersI4ivNV");
	glProgramEnvParameterI4uiNV = (void (*)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))wglGetProcAddress("glProgramEnvParameterI4uiNV");
	glProgramEnvParameterI4uivNV = (void (*)(GLenum target, GLuint index, const GLuint *params))wglGetProcAddress("glProgramEnvParameterI4uivNV");
	glProgramEnvParametersI4uivNV = (void (*)(GLenum target, GLuint index, GLsizei count, const GLuint *params))wglGetProcAddress("glProgramEnvParametersI4uivNV");
	glGetProgramLocalParameterIivNV = (void (*)(GLenum target, GLuint index, GLint *params))wglGetProcAddress("glGetProgramLocalParameterIivNV");
	glGetProgramLocalParameterIuivNV = (void (*)(GLenum target, GLuint index, GLuint *params))wglGetProcAddress("glGetProgramLocalParameterIuivNV");
	glGetProgramEnvParameterIivNV = (void (*)(GLenum target, GLuint index, GLint *params))wglGetProcAddress("glGetProgramEnvParameterIivNV");
	glGetProgramEnvParameterIuivNV = (void (*)(GLenum target, GLuint index, GLuint *params))wglGetProcAddress("glGetProgramEnvParameterIuivNV");
	glProgramSubroutineParametersuivNV = (void (*)(GLenum target, GLsizei count, const GLuint *params))wglGetProcAddress("glProgramSubroutineParametersuivNV");
	glGetProgramSubroutineParameteruivNV = (void (*)(GLenum target, GLuint index, GLuint *param))wglGetProcAddress("glGetProgramSubroutineParameteruivNV");
	glVertex2hNV = (void (*)(GLhalfNV x, GLhalfNV y))wglGetProcAddress("glVertex2hNV");
	glVertex2hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glVertex2hvNV");
	glVertex3hNV = (void (*)(GLhalfNV x, GLhalfNV y, GLhalfNV z))wglGetProcAddress("glVertex3hNV");
	glVertex3hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glVertex3hvNV");
	glVertex4hNV = (void (*)(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w))wglGetProcAddress("glVertex4hNV");
	glVertex4hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glVertex4hvNV");
	glNormal3hNV = (void (*)(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz))wglGetProcAddress("glNormal3hNV");
	glNormal3hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glNormal3hvNV");
	glColor3hNV = (void (*)(GLhalfNV red, GLhalfNV green, GLhalfNV blue))wglGetProcAddress("glColor3hNV");
	glColor3hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glColor3hvNV");
	glColor4hNV = (void (*)(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha))wglGetProcAddress("glColor4hNV");
	glColor4hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glColor4hvNV");
	glTexCoord1hNV = (void (*)(GLhalfNV s))wglGetProcAddress("glTexCoord1hNV");
	glTexCoord1hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glTexCoord1hvNV");
	glTexCoord2hNV = (void (*)(GLhalfNV s, GLhalfNV t))wglGetProcAddress("glTexCoord2hNV");
	glTexCoord2hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glTexCoord2hvNV");
	glTexCoord3hNV = (void (*)(GLhalfNV s, GLhalfNV t, GLhalfNV r))wglGetProcAddress("glTexCoord3hNV");
	glTexCoord3hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glTexCoord3hvNV");
	glTexCoord4hNV = (void (*)(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q))wglGetProcAddress("glTexCoord4hNV");
	glTexCoord4hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glTexCoord4hvNV");
	glMultiTexCoord1hNV = (void (*)(GLenum target, GLhalfNV s))wglGetProcAddress("glMultiTexCoord1hNV");
	glMultiTexCoord1hvNV = (void (*)(GLenum target, const GLhalfNV *v))wglGetProcAddress("glMultiTexCoord1hvNV");
	glMultiTexCoord2hNV = (void (*)(GLenum target, GLhalfNV s, GLhalfNV t))wglGetProcAddress("glMultiTexCoord2hNV");
	glMultiTexCoord2hvNV = (void (*)(GLenum target, const GLhalfNV *v))wglGetProcAddress("glMultiTexCoord2hvNV");
	glMultiTexCoord3hNV = (void (*)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r))wglGetProcAddress("glMultiTexCoord3hNV");
	glMultiTexCoord3hvNV = (void (*)(GLenum target, const GLhalfNV *v))wglGetProcAddress("glMultiTexCoord3hvNV");
	glMultiTexCoord4hNV = (void (*)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q))wglGetProcAddress("glMultiTexCoord4hNV");
	glMultiTexCoord4hvNV = (void (*)(GLenum target, const GLhalfNV *v))wglGetProcAddress("glMultiTexCoord4hvNV");
	glFogCoordhNV = (void (*)(GLhalfNV fog))wglGetProcAddress("glFogCoordhNV");
	glFogCoordhvNV = (void (*)(const GLhalfNV *fog))wglGetProcAddress("glFogCoordhvNV");
	glSecondaryColor3hNV = (void (*)(GLhalfNV red, GLhalfNV green, GLhalfNV blue))wglGetProcAddress("glSecondaryColor3hNV");
	glSecondaryColor3hvNV = (void (*)(const GLhalfNV *v))wglGetProcAddress("glSecondaryColor3hvNV");
	glVertexWeighthNV = (void (*)(GLhalfNV weight))wglGetProcAddress("glVertexWeighthNV");
	glVertexWeighthvNV = (void (*)(const GLhalfNV *weight))wglGetProcAddress("glVertexWeighthvNV");
	glVertexAttrib1hNV = (void (*)(GLuint index, GLhalfNV x))wglGetProcAddress("glVertexAttrib1hNV");
	glVertexAttrib1hvNV = (void (*)(GLuint index, const GLhalfNV *v))wglGetProcAddress("glVertexAttrib1hvNV");
	glVertexAttrib2hNV = (void (*)(GLuint index, GLhalfNV x, GLhalfNV y))wglGetProcAddress("glVertexAttrib2hNV");
	glVertexAttrib2hvNV = (void (*)(GLuint index, const GLhalfNV *v))wglGetProcAddress("glVertexAttrib2hvNV");
	glVertexAttrib3hNV = (void (*)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z))wglGetProcAddress("glVertexAttrib3hNV");
	glVertexAttrib3hvNV = (void (*)(GLuint index, const GLhalfNV *v))wglGetProcAddress("glVertexAttrib3hvNV");
	glVertexAttrib4hNV = (void (*)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w))wglGetProcAddress("glVertexAttrib4hNV");
	glVertexAttrib4hvNV = (void (*)(GLuint index, const GLhalfNV *v))wglGetProcAddress("glVertexAttrib4hvNV");
	glVertexAttribs1hvNV = (void (*)(GLuint index, GLsizei n, const GLhalfNV *v))wglGetProcAddress("glVertexAttribs1hvNV");
	glVertexAttribs2hvNV = (void (*)(GLuint index, GLsizei n, const GLhalfNV *v))wglGetProcAddress("glVertexAttribs2hvNV");
	glVertexAttribs3hvNV = (void (*)(GLuint index, GLsizei n, const GLhalfNV *v))wglGetProcAddress("glVertexAttribs3hvNV");
	glVertexAttribs4hvNV = (void (*)(GLuint index, GLsizei n, const GLhalfNV *v))wglGetProcAddress("glVertexAttribs4hvNV");
	glGetInternalformatSampleivNV = (void (*)(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params))wglGetProcAddress("glGetInternalformatSampleivNV");
	glGenOcclusionQueriesNV = (void (*)(GLsizei n, GLuint *ids))wglGetProcAddress("glGenOcclusionQueriesNV");
	glDeleteOcclusionQueriesNV = (void (*)(GLsizei n, const GLuint *ids))wglGetProcAddress("glDeleteOcclusionQueriesNV");
	glIsOcclusionQueryNV = (GLboolean (*)(GLuint id))wglGetProcAddress("glIsOcclusionQueryNV");
	glBeginOcclusionQueryNV = (void (*)(GLuint id))wglGetProcAddress("glBeginOcclusionQueryNV");
	glEndOcclusionQueryNV = (void (*)(void))wglGetProcAddress("glEndOcclusionQueryNV");
	glGetOcclusionQueryivNV = (void (*)(GLuint id, GLenum pname, GLint *params))wglGetProcAddress("glGetOcclusionQueryivNV");
	glGetOcclusionQueryuivNV = (void (*)(GLuint id, GLenum pname, GLuint *params))wglGetProcAddress("glGetOcclusionQueryuivNV");
	glProgramBufferParametersfvNV = (void (*)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params))wglGetProcAddress("glProgramBufferParametersfvNV");
	glProgramBufferParametersIivNV = (void (*)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params))wglGetProcAddress("glProgramBufferParametersIivNV");
	glProgramBufferParametersIuivNV = (void (*)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params))wglGetProcAddress("glProgramBufferParametersIuivNV");
	glGenPathsNV = (GLuint (*)(GLsizei range))wglGetProcAddress("glGenPathsNV");
	glDeletePathsNV = (void (*)(GLuint path, GLsizei range))wglGetProcAddress("glDeletePathsNV");
	glIsPathNV = (GLboolean (*)(GLuint path))wglGetProcAddress("glIsPathNV");
	glPathCommandsNV = (void (*)(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords))wglGetProcAddress("glPathCommandsNV");
	glPathCoordsNV = (void (*)(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords))wglGetProcAddress("glPathCoordsNV");
	glPathSubCommandsNV = (void (*)(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords))wglGetProcAddress("glPathSubCommandsNV");
	glPathSubCoordsNV = (void (*)(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords))wglGetProcAddress("glPathSubCoordsNV");
	glPathStringNV = (void (*)(GLuint path, GLenum format, GLsizei length, const void *pathString))wglGetProcAddress("glPathStringNV");
	glPathGlyphsNV = (void (*)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale))wglGetProcAddress("glPathGlyphsNV");
	glPathGlyphRangeNV = (void (*)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale))wglGetProcAddress("glPathGlyphRangeNV");
	glWeightPathsNV = (void (*)(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights))wglGetProcAddress("glWeightPathsNV");
	glCopyPathNV = (void (*)(GLuint resultPath, GLuint srcPath))wglGetProcAddress("glCopyPathNV");
	glInterpolatePathsNV = (void (*)(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight))wglGetProcAddress("glInterpolatePathsNV");
	glTransformPathNV = (void (*)(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues))wglGetProcAddress("glTransformPathNV");
	glPathParameterivNV = (void (*)(GLuint path, GLenum pname, const GLint *value))wglGetProcAddress("glPathParameterivNV");
	glPathParameteriNV = (void (*)(GLuint path, GLenum pname, GLint value))wglGetProcAddress("glPathParameteriNV");
	glPathParameterfvNV = (void (*)(GLuint path, GLenum pname, const GLfloat *value))wglGetProcAddress("glPathParameterfvNV");
	glPathParameterfNV = (void (*)(GLuint path, GLenum pname, GLfloat value))wglGetProcAddress("glPathParameterfNV");
	glPathDashArrayNV = (void (*)(GLuint path, GLsizei dashCount, const GLfloat *dashArray))wglGetProcAddress("glPathDashArrayNV");
	glPathStencilFuncNV = (void (*)(GLenum func, GLint ref, GLuint mask))wglGetProcAddress("glPathStencilFuncNV");
	glPathStencilDepthOffsetNV = (void (*)(GLfloat factor, GLfloat units))wglGetProcAddress("glPathStencilDepthOffsetNV");
	glStencilFillPathNV = (void (*)(GLuint path, GLenum fillMode, GLuint mask))wglGetProcAddress("glStencilFillPathNV");
	glStencilStrokePathNV = (void (*)(GLuint path, GLint reference, GLuint mask))wglGetProcAddress("glStencilStrokePathNV");
	glStencilFillPathInstancedNV = (void (*)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues))wglGetProcAddress("glStencilFillPathInstancedNV");
	glStencilStrokePathInstancedNV = (void (*)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues))wglGetProcAddress("glStencilStrokePathInstancedNV");
	glPathCoverDepthFuncNV = (void (*)(GLenum func))wglGetProcAddress("glPathCoverDepthFuncNV");
	glCoverFillPathNV = (void (*)(GLuint path, GLenum coverMode))wglGetProcAddress("glCoverFillPathNV");
	glCoverStrokePathNV = (void (*)(GLuint path, GLenum coverMode))wglGetProcAddress("glCoverStrokePathNV");
	glCoverFillPathInstancedNV = (void (*)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))wglGetProcAddress("glCoverFillPathInstancedNV");
	glCoverStrokePathInstancedNV = (void (*)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))wglGetProcAddress("glCoverStrokePathInstancedNV");
	glGetPathParameterivNV = (void (*)(GLuint path, GLenum pname, GLint *value))wglGetProcAddress("glGetPathParameterivNV");
	glGetPathParameterfvNV = (void (*)(GLuint path, GLenum pname, GLfloat *value))wglGetProcAddress("glGetPathParameterfvNV");
	glGetPathCommandsNV = (void (*)(GLuint path, GLubyte *commands))wglGetProcAddress("glGetPathCommandsNV");
	glGetPathCoordsNV = (void (*)(GLuint path, GLfloat *coords))wglGetProcAddress("glGetPathCoordsNV");
	glGetPathDashArrayNV = (void (*)(GLuint path, GLfloat *dashArray))wglGetProcAddress("glGetPathDashArrayNV");
	glGetPathMetricsNV = (void (*)(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics))wglGetProcAddress("glGetPathMetricsNV");
	glGetPathMetricRangeNV = (void (*)(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics))wglGetProcAddress("glGetPathMetricRangeNV");
	glGetPathSpacingNV = (void (*)(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing))wglGetProcAddress("glGetPathSpacingNV");
	glIsPointInFillPathNV = (GLboolean (*)(GLuint path, GLuint mask, GLfloat x, GLfloat y))wglGetProcAddress("glIsPointInFillPathNV");
	glIsPointInStrokePathNV = (GLboolean (*)(GLuint path, GLfloat x, GLfloat y))wglGetProcAddress("glIsPointInStrokePathNV");
	glGetPathLengthNV = (GLfloat (*)(GLuint path, GLsizei startSegment, GLsizei numSegments))wglGetProcAddress("glGetPathLengthNV");
	glPointAlongPathNV = (GLboolean (*)(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY))wglGetProcAddress("glPointAlongPathNV");
	glMatrixLoad3x2fNV = (void (*)(GLenum matrixMode, const GLfloat *m))wglGetProcAddress("glMatrixLoad3x2fNV");
	glMatrixLoad3x3fNV = (void (*)(GLenum matrixMode, const GLfloat *m))wglGetProcAddress("glMatrixLoad3x3fNV");
	glMatrixLoadTranspose3x3fNV = (void (*)(GLenum matrixMode, const GLfloat *m))wglGetProcAddress("glMatrixLoadTranspose3x3fNV");
	glMatrixMult3x2fNV = (void (*)(GLenum matrixMode, const GLfloat *m))wglGetProcAddress("glMatrixMult3x2fNV");
	glMatrixMult3x3fNV = (void (*)(GLenum matrixMode, const GLfloat *m))wglGetProcAddress("glMatrixMult3x3fNV");
	glMatrixMultTranspose3x3fNV = (void (*)(GLenum matrixMode, const GLfloat *m))wglGetProcAddress("glMatrixMultTranspose3x3fNV");
	glStencilThenCoverFillPathNV = (void (*)(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode))wglGetProcAddress("glStencilThenCoverFillPathNV");
	glStencilThenCoverStrokePathNV = (void (*)(GLuint path, GLint reference, GLuint mask, GLenum coverMode))wglGetProcAddress("glStencilThenCoverStrokePathNV");
	glStencilThenCoverFillPathInstancedNV = (void (*)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))wglGetProcAddress("glStencilThenCoverFillPathInstancedNV");
	glStencilThenCoverStrokePathInstancedNV = (void (*)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))wglGetProcAddress("glStencilThenCoverStrokePathInstancedNV");
	glPathGlyphIndexRangeNV = (GLenum (*)(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]))wglGetProcAddress("glPathGlyphIndexRangeNV");
	glPathGlyphIndexArrayNV = (GLenum (*)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale))wglGetProcAddress("glPathGlyphIndexArrayNV");
	glPathMemoryGlyphIndexArrayNV = (GLenum (*)(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale))wglGetProcAddress("glPathMemoryGlyphIndexArrayNV");
	glProgramPathFragmentInputGenNV = (void (*)(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs))wglGetProcAddress("glProgramPathFragmentInputGenNV");
	glGetProgramResourcefvNV = (void (*)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params))wglGetProcAddress("glGetProgramResourcefvNV");
	glPathColorGenNV = (void (*)(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs))wglGetProcAddress("glPathColorGenNV");
	glPathTexGenNV = (void (*)(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs))wglGetProcAddress("glPathTexGenNV");
	glPathFogGenNV = (void (*)(GLenum genMode))wglGetProcAddress("glPathFogGenNV");
	glGetPathColorGenivNV = (void (*)(GLenum color, GLenum pname, GLint *value))wglGetProcAddress("glGetPathColorGenivNV");
	glGetPathColorGenfvNV = (void (*)(GLenum color, GLenum pname, GLfloat *value))wglGetProcAddress("glGetPathColorGenfvNV");
	glGetPathTexGenivNV = (void (*)(GLenum texCoordSet, GLenum pname, GLint *value))wglGetProcAddress("glGetPathTexGenivNV");
	glGetPathTexGenfvNV = (void (*)(GLenum texCoordSet, GLenum pname, GLfloat *value))wglGetProcAddress("glGetPathTexGenfvNV");
	glPixelDataRangeNV = (void (*)(GLenum target, GLsizei length, const void *pointer))wglGetProcAddress("glPixelDataRangeNV");
	glFlushPixelDataRangeNV = (void (*)(GLenum target))wglGetProcAddress("glFlushPixelDataRangeNV");
	glPointParameteriNV = (void (*)(GLenum pname, GLint param))wglGetProcAddress("glPointParameteriNV");
	glPointParameterivNV = (void (*)(GLenum pname, const GLint *params))wglGetProcAddress("glPointParameterivNV");
	glPresentFrameKeyedNV = (void (*)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1))wglGetProcAddress("glPresentFrameKeyedNV");
	glPresentFrameDualFillNV = (void (*)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3))wglGetProcAddress("glPresentFrameDualFillNV");
	glGetVideoivNV = (void (*)(GLuint video_slot, GLenum pname, GLint *params))wglGetProcAddress("glGetVideoivNV");
	glGetVideouivNV = (void (*)(GLuint video_slot, GLenum pname, GLuint *params))wglGetProcAddress("glGetVideouivNV");
	glGetVideoi64vNV = (void (*)(GLuint video_slot, GLenum pname, GLint64EXT *params))wglGetProcAddress("glGetVideoi64vNV");
	glGetVideoui64vNV = (void (*)(GLuint video_slot, GLenum pname, GLuint64EXT *params))wglGetProcAddress("glGetVideoui64vNV");
	glPrimitiveRestartNV = (void (*)(void))wglGetProcAddress("glPrimitiveRestartNV");
	glPrimitiveRestartIndexNV = (void (*)(GLuint index))wglGetProcAddress("glPrimitiveRestartIndexNV");
	glCombinerParameterfvNV = (void (*)(GLenum pname, const GLfloat *params))wglGetProcAddress("glCombinerParameterfvNV");
	glCombinerParameterfNV = (void (*)(GLenum pname, GLfloat param))wglGetProcAddress("glCombinerParameterfNV");
	glCombinerParameterivNV = (void (*)(GLenum pname, const GLint *params))wglGetProcAddress("glCombinerParameterivNV");
	glCombinerParameteriNV = (void (*)(GLenum pname, GLint param))wglGetProcAddress("glCombinerParameteriNV");
	glCombinerInputNV = (void (*)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage))wglGetProcAddress("glCombinerInputNV");
	glCombinerOutputNV = (void (*)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum))wglGetProcAddress("glCombinerOutputNV");
	glFinalCombinerInputNV = (void (*)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage))wglGetProcAddress("glFinalCombinerInputNV");
	glGetCombinerInputParameterfvNV = (void (*)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params))wglGetProcAddress("glGetCombinerInputParameterfvNV");
	glGetCombinerInputParameterivNV = (void (*)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params))wglGetProcAddress("glGetCombinerInputParameterivNV");
	glGetCombinerOutputParameterfvNV = (void (*)(GLenum stage, GLenum portion, GLenum pname, GLfloat *params))wglGetProcAddress("glGetCombinerOutputParameterfvNV");
	glGetCombinerOutputParameterivNV = (void (*)(GLenum stage, GLenum portion, GLenum pname, GLint *params))wglGetProcAddress("glGetCombinerOutputParameterivNV");
	glGetFinalCombinerInputParameterfvNV = (void (*)(GLenum variable, GLenum pname, GLfloat *params))wglGetProcAddress("glGetFinalCombinerInputParameterfvNV");
	glGetFinalCombinerInputParameterivNV = (void (*)(GLenum variable, GLenum pname, GLint *params))wglGetProcAddress("glGetFinalCombinerInputParameterivNV");
	glCombinerStageParameterfvNV = (void (*)(GLenum stage, GLenum pname, const GLfloat *params))wglGetProcAddress("glCombinerStageParameterfvNV");
	glGetCombinerStageParameterfvNV = (void (*)(GLenum stage, GLenum pname, GLfloat *params))wglGetProcAddress("glGetCombinerStageParameterfvNV");
	glFramebufferSampleLocationsfvNV = (void (*)(GLenum target, GLuint start, GLsizei count, const GLfloat *v))wglGetProcAddress("glFramebufferSampleLocationsfvNV");
	glNamedFramebufferSampleLocationsfvNV = (void (*)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v))wglGetProcAddress("glNamedFramebufferSampleLocationsfvNV");
	glResolveDepthValuesNV = (void (*)(void))wglGetProcAddress("glResolveDepthValuesNV");
	glMakeBufferResidentNV = (void (*)(GLenum target, GLenum access))wglGetProcAddress("glMakeBufferResidentNV");
	glMakeBufferNonResidentNV = (void (*)(GLenum target))wglGetProcAddress("glMakeBufferNonResidentNV");
	glIsBufferResidentNV = (GLboolean (*)(GLenum target))wglGetProcAddress("glIsBufferResidentNV");
	glMakeNamedBufferResidentNV = (void (*)(GLuint buffer, GLenum access))wglGetProcAddress("glMakeNamedBufferResidentNV");
	glMakeNamedBufferNonResidentNV = (void (*)(GLuint buffer))wglGetProcAddress("glMakeNamedBufferNonResidentNV");
	glIsNamedBufferResidentNV = (GLboolean (*)(GLuint buffer))wglGetProcAddress("glIsNamedBufferResidentNV");
	glGetBufferParameterui64vNV = (void (*)(GLenum target, GLenum pname, GLuint64EXT *params))wglGetProcAddress("glGetBufferParameterui64vNV");
	glGetNamedBufferParameterui64vNV = (void (*)(GLuint buffer, GLenum pname, GLuint64EXT *params))wglGetProcAddress("glGetNamedBufferParameterui64vNV");
	glGetIntegerui64vNV = (void (*)(GLenum value, GLuint64EXT *result))wglGetProcAddress("glGetIntegerui64vNV");
	glUniformui64NV = (void (*)(GLint location, GLuint64EXT value))wglGetProcAddress("glUniformui64NV");
	glUniformui64vNV = (void (*)(GLint location, GLsizei count, const GLuint64EXT *value))wglGetProcAddress("glUniformui64vNV");
	glProgramUniformui64NV = (void (*)(GLuint program, GLint location, GLuint64EXT value))wglGetProcAddress("glProgramUniformui64NV");
	glProgramUniformui64vNV = (void (*)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))wglGetProcAddress("glProgramUniformui64vNV");
	glTextureBarrierNV = (void (*)(void))wglGetProcAddress("glTextureBarrierNV");
	glTexImage2DMultisampleCoverageNV = (void (*)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations))wglGetProcAddress("glTexImage2DMultisampleCoverageNV");
	glTexImage3DMultisampleCoverageNV = (void (*)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations))wglGetProcAddress("glTexImage3DMultisampleCoverageNV");
	glTextureImage2DMultisampleNV = (void (*)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations))wglGetProcAddress("glTextureImage2DMultisampleNV");
	glTextureImage3DMultisampleNV = (void (*)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations))wglGetProcAddress("glTextureImage3DMultisampleNV");
	glTextureImage2DMultisampleCoverageNV = (void (*)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations))wglGetProcAddress("glTextureImage2DMultisampleCoverageNV");
	glTextureImage3DMultisampleCoverageNV = (void (*)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations))wglGetProcAddress("glTextureImage3DMultisampleCoverageNV");
	glBeginTransformFeedbackNV = (void (*)(GLenum primitiveMode))wglGetProcAddress("glBeginTransformFeedbackNV");
	glEndTransformFeedbackNV = (void (*)(void))wglGetProcAddress("glEndTransformFeedbackNV");
	glTransformFeedbackAttribsNV = (void (*)(GLsizei count, const GLint *attribs, GLenum bufferMode))wglGetProcAddress("glTransformFeedbackAttribsNV");
	glBindBufferRangeNV = (void (*)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))wglGetProcAddress("glBindBufferRangeNV");
	glBindBufferOffsetNV = (void (*)(GLenum target, GLuint index, GLuint buffer, GLintptr offset))wglGetProcAddress("glBindBufferOffsetNV");
	glBindBufferBaseNV = (void (*)(GLenum target, GLuint index, GLuint buffer))wglGetProcAddress("glBindBufferBaseNV");
	glTransformFeedbackVaryingsNV = (void (*)(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode))wglGetProcAddress("glTransformFeedbackVaryingsNV");
	glActiveVaryingNV = (void (*)(GLuint program, const GLchar *name))wglGetProcAddress("glActiveVaryingNV");
	glGetVaryingLocationNV = (GLint (*)(GLuint program, const GLchar *name))wglGetProcAddress("glGetVaryingLocationNV");
	glGetActiveVaryingNV = (void (*)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))wglGetProcAddress("glGetActiveVaryingNV");
	glGetTransformFeedbackVaryingNV = (void (*)(GLuint program, GLuint index, GLint *location))wglGetProcAddress("glGetTransformFeedbackVaryingNV");
	glTransformFeedbackStreamAttribsNV = (void (*)(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode))wglGetProcAddress("glTransformFeedbackStreamAttribsNV");
	glBindTransformFeedbackNV = (void (*)(GLenum target, GLuint id))wglGetProcAddress("glBindTransformFeedbackNV");
	glDeleteTransformFeedbacksNV = (void (*)(GLsizei n, const GLuint *ids))wglGetProcAddress("glDeleteTransformFeedbacksNV");
	glGenTransformFeedbacksNV = (void (*)(GLsizei n, GLuint *ids))wglGetProcAddress("glGenTransformFeedbacksNV");
	glIsTransformFeedbackNV = (GLboolean (*)(GLuint id))wglGetProcAddress("glIsTransformFeedbackNV");
	glPauseTransformFeedbackNV = (void (*)(void))wglGetProcAddress("glPauseTransformFeedbackNV");
	glResumeTransformFeedbackNV = (void (*)(void))wglGetProcAddress("glResumeTransformFeedbackNV");
	glDrawTransformFeedbackNV = (void (*)(GLenum mode, GLuint id))wglGetProcAddress("glDrawTransformFeedbackNV");
	glVDPAUInitNV = (void (*)(const void *vdpDevice, const void *getProcAddress))wglGetProcAddress("glVDPAUInitNV");
	glVDPAUFiniNV = (void (*)(void))wglGetProcAddress("glVDPAUFiniNV");
	glVDPAURegisterVideoSurfaceNV = (GLvdpauSurfaceNV (*)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames))wglGetProcAddress("glVDPAURegisterVideoSurfaceNV");
	glVDPAURegisterOutputSurfaceNV = (GLvdpauSurfaceNV (*)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames))wglGetProcAddress("glVDPAURegisterOutputSurfaceNV");
	glVDPAUIsSurfaceNV = (GLboolean (*)(GLvdpauSurfaceNV surface))wglGetProcAddress("glVDPAUIsSurfaceNV");
	glVDPAUUnregisterSurfaceNV = (void (*)(GLvdpauSurfaceNV surface))wglGetProcAddress("glVDPAUUnregisterSurfaceNV");
	glVDPAUGetSurfaceivNV = (void (*)(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))wglGetProcAddress("glVDPAUGetSurfaceivNV");
	glVDPAUSurfaceAccessNV = (void (*)(GLvdpauSurfaceNV surface, GLenum access))wglGetProcAddress("glVDPAUSurfaceAccessNV");
	glVDPAUMapSurfacesNV = (void (*)(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces))wglGetProcAddress("glVDPAUMapSurfacesNV");
	glVDPAUUnmapSurfacesNV = (void (*)(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces))wglGetProcAddress("glVDPAUUnmapSurfacesNV");
	glFlushVertexArrayRangeNV = (void (*)(void))wglGetProcAddress("glFlushVertexArrayRangeNV");
	glVertexArrayRangeNV = (void (*)(GLsizei length, const void *pointer))wglGetProcAddress("glVertexArrayRangeNV");
	glVertexAttribL1i64NV = (void (*)(GLuint index, GLint64EXT x))wglGetProcAddress("glVertexAttribL1i64NV");
	glVertexAttribL2i64NV = (void (*)(GLuint index, GLint64EXT x, GLint64EXT y))wglGetProcAddress("glVertexAttribL2i64NV");
	glVertexAttribL3i64NV = (void (*)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z))wglGetProcAddress("glVertexAttribL3i64NV");
	glVertexAttribL4i64NV = (void (*)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))wglGetProcAddress("glVertexAttribL4i64NV");
	glVertexAttribL1i64vNV = (void (*)(GLuint index, const GLint64EXT *v))wglGetProcAddress("glVertexAttribL1i64vNV");
	glVertexAttribL2i64vNV = (void (*)(GLuint index, const GLint64EXT *v))wglGetProcAddress("glVertexAttribL2i64vNV");
	glVertexAttribL3i64vNV = (void (*)(GLuint index, const GLint64EXT *v))wglGetProcAddress("glVertexAttribL3i64vNV");
	glVertexAttribL4i64vNV = (void (*)(GLuint index, const GLint64EXT *v))wglGetProcAddress("glVertexAttribL4i64vNV");
	glVertexAttribL1ui64NV = (void (*)(GLuint index, GLuint64EXT x))wglGetProcAddress("glVertexAttribL1ui64NV");
	glVertexAttribL2ui64NV = (void (*)(GLuint index, GLuint64EXT x, GLuint64EXT y))wglGetProcAddress("glVertexAttribL2ui64NV");
	glVertexAttribL3ui64NV = (void (*)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))wglGetProcAddress("glVertexAttribL3ui64NV");
	glVertexAttribL4ui64NV = (void (*)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))wglGetProcAddress("glVertexAttribL4ui64NV");
	glVertexAttribL1ui64vNV = (void (*)(GLuint index, const GLuint64EXT *v))wglGetProcAddress("glVertexAttribL1ui64vNV");
	glVertexAttribL2ui64vNV = (void (*)(GLuint index, const GLuint64EXT *v))wglGetProcAddress("glVertexAttribL2ui64vNV");
	glVertexAttribL3ui64vNV = (void (*)(GLuint index, const GLuint64EXT *v))wglGetProcAddress("glVertexAttribL3ui64vNV");
	glVertexAttribL4ui64vNV = (void (*)(GLuint index, const GLuint64EXT *v))wglGetProcAddress("glVertexAttribL4ui64vNV");
	glGetVertexAttribLi64vNV = (void (*)(GLuint index, GLenum pname, GLint64EXT *params))wglGetProcAddress("glGetVertexAttribLi64vNV");
	glGetVertexAttribLui64vNV = (void (*)(GLuint index, GLenum pname, GLuint64EXT *params))wglGetProcAddress("glGetVertexAttribLui64vNV");
	glVertexAttribLFormatNV = (void (*)(GLuint index, GLint size, GLenum type, GLsizei stride))wglGetProcAddress("glVertexAttribLFormatNV");
	glBufferAddressRangeNV = (void (*)(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length))wglGetProcAddress("glBufferAddressRangeNV");
	glVertexFormatNV = (void (*)(GLint size, GLenum type, GLsizei stride))wglGetProcAddress("glVertexFormatNV");
	glNormalFormatNV = (void (*)(GLenum type, GLsizei stride))wglGetProcAddress("glNormalFormatNV");
	glColorFormatNV = (void (*)(GLint size, GLenum type, GLsizei stride))wglGetProcAddress("glColorFormatNV");
	glIndexFormatNV = (void (*)(GLenum type, GLsizei stride))wglGetProcAddress("glIndexFormatNV");
	glTexCoordFormatNV = (void (*)(GLint size, GLenum type, GLsizei stride))wglGetProcAddress("glTexCoordFormatNV");
	glEdgeFlagFormatNV = (void (*)(GLsizei stride))wglGetProcAddress("glEdgeFlagFormatNV");
	glSecondaryColorFormatNV = (void (*)(GLint size, GLenum type, GLsizei stride))wglGetProcAddress("glSecondaryColorFormatNV");
	glFogCoordFormatNV = (void (*)(GLenum type, GLsizei stride))wglGetProcAddress("glFogCoordFormatNV");
	glVertexAttribFormatNV = (void (*)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride))wglGetProcAddress("glVertexAttribFormatNV");
	glVertexAttribIFormatNV = (void (*)(GLuint index, GLint size, GLenum type, GLsizei stride))wglGetProcAddress("glVertexAttribIFormatNV");
	glGetIntegerui64i_vNV = (void (*)(GLenum value, GLuint index, GLuint64EXT *result))wglGetProcAddress("glGetIntegerui64i_vNV");
	glAreProgramsResidentNV = (GLboolean (*)(GLsizei n, const GLuint *programs, GLboolean *residences))wglGetProcAddress("glAreProgramsResidentNV");
	glBindProgramNV = (void (*)(GLenum target, GLuint id))wglGetProcAddress("glBindProgramNV");
	glDeleteProgramsNV = (void (*)(GLsizei n, const GLuint *programs))wglGetProcAddress("glDeleteProgramsNV");
	glExecuteProgramNV = (void (*)(GLenum target, GLuint id, const GLfloat *params))wglGetProcAddress("glExecuteProgramNV");
	glGenProgramsNV = (void (*)(GLsizei n, GLuint *programs))wglGetProcAddress("glGenProgramsNV");
	glGetProgramParameterdvNV = (void (*)(GLenum target, GLuint index, GLenum pname, GLdouble *params))wglGetProcAddress("glGetProgramParameterdvNV");
	glGetProgramParameterfvNV = (void (*)(GLenum target, GLuint index, GLenum pname, GLfloat *params))wglGetProcAddress("glGetProgramParameterfvNV");
	glGetProgramivNV = (void (*)(GLuint id, GLenum pname, GLint *params))wglGetProcAddress("glGetProgramivNV");
	glGetProgramStringNV = (void (*)(GLuint id, GLenum pname, GLubyte *program))wglGetProcAddress("glGetProgramStringNV");
	glGetTrackMatrixivNV = (void (*)(GLenum target, GLuint address, GLenum pname, GLint *params))wglGetProcAddress("glGetTrackMatrixivNV");
	glGetVertexAttribdvNV = (void (*)(GLuint index, GLenum pname, GLdouble *params))wglGetProcAddress("glGetVertexAttribdvNV");
	glGetVertexAttribfvNV = (void (*)(GLuint index, GLenum pname, GLfloat *params))wglGetProcAddress("glGetVertexAttribfvNV");
	glGetVertexAttribivNV = (void (*)(GLuint index, GLenum pname, GLint *params))wglGetProcAddress("glGetVertexAttribivNV");
	glGetVertexAttribPointervNV = (void (*)(GLuint index, GLenum pname, void **pointer))wglGetProcAddress("glGetVertexAttribPointervNV");
	glIsProgramNV = (GLboolean (*)(GLuint id))wglGetProcAddress("glIsProgramNV");
	glLoadProgramNV = (void (*)(GLenum target, GLuint id, GLsizei len, const GLubyte *program))wglGetProcAddress("glLoadProgramNV");
	glProgramParameter4dNV = (void (*)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glProgramParameter4dNV");
	glProgramParameter4dvNV = (void (*)(GLenum target, GLuint index, const GLdouble *v))wglGetProcAddress("glProgramParameter4dvNV");
	glProgramParameter4fNV = (void (*)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glProgramParameter4fNV");
	glProgramParameter4fvNV = (void (*)(GLenum target, GLuint index, const GLfloat *v))wglGetProcAddress("glProgramParameter4fvNV");
	glProgramParameters4dvNV = (void (*)(GLenum target, GLuint index, GLsizei count, const GLdouble *v))wglGetProcAddress("glProgramParameters4dvNV");
	glProgramParameters4fvNV = (void (*)(GLenum target, GLuint index, GLsizei count, const GLfloat *v))wglGetProcAddress("glProgramParameters4fvNV");
	glRequestResidentProgramsNV = (void (*)(GLsizei n, const GLuint *programs))wglGetProcAddress("glRequestResidentProgramsNV");
	glTrackMatrixNV = (void (*)(GLenum target, GLuint address, GLenum matrix, GLenum transform))wglGetProcAddress("glTrackMatrixNV");
	glVertexAttribPointerNV = (void (*)(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glVertexAttribPointerNV");
	glVertexAttrib1dNV = (void (*)(GLuint index, GLdouble x))wglGetProcAddress("glVertexAttrib1dNV");
	glVertexAttrib1dvNV = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib1dvNV");
	glVertexAttrib1fNV = (void (*)(GLuint index, GLfloat x))wglGetProcAddress("glVertexAttrib1fNV");
	glVertexAttrib1fvNV = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib1fvNV");
	glVertexAttrib1sNV = (void (*)(GLuint index, GLshort x))wglGetProcAddress("glVertexAttrib1sNV");
	glVertexAttrib1svNV = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib1svNV");
	glVertexAttrib2dNV = (void (*)(GLuint index, GLdouble x, GLdouble y))wglGetProcAddress("glVertexAttrib2dNV");
	glVertexAttrib2dvNV = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib2dvNV");
	glVertexAttrib2fNV = (void (*)(GLuint index, GLfloat x, GLfloat y))wglGetProcAddress("glVertexAttrib2fNV");
	glVertexAttrib2fvNV = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib2fvNV");
	glVertexAttrib2sNV = (void (*)(GLuint index, GLshort x, GLshort y))wglGetProcAddress("glVertexAttrib2sNV");
	glVertexAttrib2svNV = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib2svNV");
	glVertexAttrib3dNV = (void (*)(GLuint index, GLdouble x, GLdouble y, GLdouble z))wglGetProcAddress("glVertexAttrib3dNV");
	glVertexAttrib3dvNV = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib3dvNV");
	glVertexAttrib3fNV = (void (*)(GLuint index, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glVertexAttrib3fNV");
	glVertexAttrib3fvNV = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib3fvNV");
	glVertexAttrib3sNV = (void (*)(GLuint index, GLshort x, GLshort y, GLshort z))wglGetProcAddress("glVertexAttrib3sNV");
	glVertexAttrib3svNV = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib3svNV");
	glVertexAttrib4dNV = (void (*)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))wglGetProcAddress("glVertexAttrib4dNV");
	glVertexAttrib4dvNV = (void (*)(GLuint index, const GLdouble *v))wglGetProcAddress("glVertexAttrib4dvNV");
	glVertexAttrib4fNV = (void (*)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glVertexAttrib4fNV");
	glVertexAttrib4fvNV = (void (*)(GLuint index, const GLfloat *v))wglGetProcAddress("glVertexAttrib4fvNV");
	glVertexAttrib4sNV = (void (*)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w))wglGetProcAddress("glVertexAttrib4sNV");
	glVertexAttrib4svNV = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttrib4svNV");
	glVertexAttrib4ubNV = (void (*)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w))wglGetProcAddress("glVertexAttrib4ubNV");
	glVertexAttrib4ubvNV = (void (*)(GLuint index, const GLubyte *v))wglGetProcAddress("glVertexAttrib4ubvNV");
	glVertexAttribs1dvNV = (void (*)(GLuint index, GLsizei count, const GLdouble *v))wglGetProcAddress("glVertexAttribs1dvNV");
	glVertexAttribs1fvNV = (void (*)(GLuint index, GLsizei count, const GLfloat *v))wglGetProcAddress("glVertexAttribs1fvNV");
	glVertexAttribs1svNV = (void (*)(GLuint index, GLsizei count, const GLshort *v))wglGetProcAddress("glVertexAttribs1svNV");
	glVertexAttribs2dvNV = (void (*)(GLuint index, GLsizei count, const GLdouble *v))wglGetProcAddress("glVertexAttribs2dvNV");
	glVertexAttribs2fvNV = (void (*)(GLuint index, GLsizei count, const GLfloat *v))wglGetProcAddress("glVertexAttribs2fvNV");
	glVertexAttribs2svNV = (void (*)(GLuint index, GLsizei count, const GLshort *v))wglGetProcAddress("glVertexAttribs2svNV");
	glVertexAttribs3dvNV = (void (*)(GLuint index, GLsizei count, const GLdouble *v))wglGetProcAddress("glVertexAttribs3dvNV");
	glVertexAttribs3fvNV = (void (*)(GLuint index, GLsizei count, const GLfloat *v))wglGetProcAddress("glVertexAttribs3fvNV");
	glVertexAttribs3svNV = (void (*)(GLuint index, GLsizei count, const GLshort *v))wglGetProcAddress("glVertexAttribs3svNV");
	glVertexAttribs4dvNV = (void (*)(GLuint index, GLsizei count, const GLdouble *v))wglGetProcAddress("glVertexAttribs4dvNV");
	glVertexAttribs4fvNV = (void (*)(GLuint index, GLsizei count, const GLfloat *v))wglGetProcAddress("glVertexAttribs4fvNV");
	glVertexAttribs4svNV = (void (*)(GLuint index, GLsizei count, const GLshort *v))wglGetProcAddress("glVertexAttribs4svNV");
	glVertexAttribs4ubvNV = (void (*)(GLuint index, GLsizei count, const GLubyte *v))wglGetProcAddress("glVertexAttribs4ubvNV");
	glVertexAttribI1iEXT = (void (*)(GLuint index, GLint x))wglGetProcAddress("glVertexAttribI1iEXT");
	glVertexAttribI2iEXT = (void (*)(GLuint index, GLint x, GLint y))wglGetProcAddress("glVertexAttribI2iEXT");
	glVertexAttribI3iEXT = (void (*)(GLuint index, GLint x, GLint y, GLint z))wglGetProcAddress("glVertexAttribI3iEXT");
	glVertexAttribI4iEXT = (void (*)(GLuint index, GLint x, GLint y, GLint z, GLint w))wglGetProcAddress("glVertexAttribI4iEXT");
	glVertexAttribI1uiEXT = (void (*)(GLuint index, GLuint x))wglGetProcAddress("glVertexAttribI1uiEXT");
	glVertexAttribI2uiEXT = (void (*)(GLuint index, GLuint x, GLuint y))wglGetProcAddress("glVertexAttribI2uiEXT");
	glVertexAttribI3uiEXT = (void (*)(GLuint index, GLuint x, GLuint y, GLuint z))wglGetProcAddress("glVertexAttribI3uiEXT");
	glVertexAttribI4uiEXT = (void (*)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))wglGetProcAddress("glVertexAttribI4uiEXT");
	glVertexAttribI1ivEXT = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttribI1ivEXT");
	glVertexAttribI2ivEXT = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttribI2ivEXT");
	glVertexAttribI3ivEXT = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttribI3ivEXT");
	glVertexAttribI4ivEXT = (void (*)(GLuint index, const GLint *v))wglGetProcAddress("glVertexAttribI4ivEXT");
	glVertexAttribI1uivEXT = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttribI1uivEXT");
	glVertexAttribI2uivEXT = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttribI2uivEXT");
	glVertexAttribI3uivEXT = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttribI3uivEXT");
	glVertexAttribI4uivEXT = (void (*)(GLuint index, const GLuint *v))wglGetProcAddress("glVertexAttribI4uivEXT");
	glVertexAttribI4bvEXT = (void (*)(GLuint index, const GLbyte *v))wglGetProcAddress("glVertexAttribI4bvEXT");
	glVertexAttribI4svEXT = (void (*)(GLuint index, const GLshort *v))wglGetProcAddress("glVertexAttribI4svEXT");
	glVertexAttribI4ubvEXT = (void (*)(GLuint index, const GLubyte *v))wglGetProcAddress("glVertexAttribI4ubvEXT");
	glVertexAttribI4usvEXT = (void (*)(GLuint index, const GLushort *v))wglGetProcAddress("glVertexAttribI4usvEXT");
	glVertexAttribIPointerEXT = (void (*)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))wglGetProcAddress("glVertexAttribIPointerEXT");
	glGetVertexAttribIivEXT = (void (*)(GLuint index, GLenum pname, GLint *params))wglGetProcAddress("glGetVertexAttribIivEXT");
	glGetVertexAttribIuivEXT = (void (*)(GLuint index, GLenum pname, GLuint *params))wglGetProcAddress("glGetVertexAttribIuivEXT");
	glBeginVideoCaptureNV = (void (*)(GLuint video_capture_slot))wglGetProcAddress("glBeginVideoCaptureNV");
	glBindVideoCaptureStreamBufferNV = (void (*)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset))wglGetProcAddress("glBindVideoCaptureStreamBufferNV");
	glBindVideoCaptureStreamTextureNV = (void (*)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture))wglGetProcAddress("glBindVideoCaptureStreamTextureNV");
	glEndVideoCaptureNV = (void (*)(GLuint video_capture_slot))wglGetProcAddress("glEndVideoCaptureNV");
	glGetVideoCaptureivNV = (void (*)(GLuint video_capture_slot, GLenum pname, GLint *params))wglGetProcAddress("glGetVideoCaptureivNV");
	glGetVideoCaptureStreamivNV = (void (*)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params))wglGetProcAddress("glGetVideoCaptureStreamivNV");
	glGetVideoCaptureStreamfvNV = (void (*)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params))wglGetProcAddress("glGetVideoCaptureStreamfvNV");
	glGetVideoCaptureStreamdvNV = (void (*)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params))wglGetProcAddress("glGetVideoCaptureStreamdvNV");
	glVideoCaptureNV = (GLenum (*)(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time))wglGetProcAddress("glVideoCaptureNV");
	glVideoCaptureStreamParameterivNV = (void (*)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params))wglGetProcAddress("glVideoCaptureStreamParameterivNV");
	glVideoCaptureStreamParameterfvNV = (void (*)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params))wglGetProcAddress("glVideoCaptureStreamParameterfvNV");
	glVideoCaptureStreamParameterdvNV = (void (*)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params))wglGetProcAddress("glVideoCaptureStreamParameterdvNV");
	glHintPGI = (void (*)(GLenum target, GLint mode))wglGetProcAddress("glHintPGI");
	glDetailTexFuncSGIS = (void (*)(GLenum target, GLsizei n, const GLfloat *points))wglGetProcAddress("glDetailTexFuncSGIS");
	glGetDetailTexFuncSGIS = (void (*)(GLenum target, GLfloat *points))wglGetProcAddress("glGetDetailTexFuncSGIS");
	glFogFuncSGIS = (void (*)(GLsizei n, const GLfloat *points))wglGetProcAddress("glFogFuncSGIS");
	glGetFogFuncSGIS = (void (*)(GLfloat *points))wglGetProcAddress("glGetFogFuncSGIS");
	glSampleMaskSGIS = (void (*)(GLclampf value, GLboolean invert))wglGetProcAddress("glSampleMaskSGIS");
	glSamplePatternSGIS = (void (*)(GLenum pattern))wglGetProcAddress("glSamplePatternSGIS");
	glPixelTexGenParameteriSGIS = (void (*)(GLenum pname, GLint param))wglGetProcAddress("glPixelTexGenParameteriSGIS");
	glPixelTexGenParameterivSGIS = (void (*)(GLenum pname, const GLint *params))wglGetProcAddress("glPixelTexGenParameterivSGIS");
	glPixelTexGenParameterfSGIS = (void (*)(GLenum pname, GLfloat param))wglGetProcAddress("glPixelTexGenParameterfSGIS");
	glPixelTexGenParameterfvSGIS = (void (*)(GLenum pname, const GLfloat *params))wglGetProcAddress("glPixelTexGenParameterfvSGIS");
	glGetPixelTexGenParameterivSGIS = (void (*)(GLenum pname, GLint *params))wglGetProcAddress("glGetPixelTexGenParameterivSGIS");
	glGetPixelTexGenParameterfvSGIS = (void (*)(GLenum pname, GLfloat *params))wglGetProcAddress("glGetPixelTexGenParameterfvSGIS");
	glPointParameterfSGIS = (void (*)(GLenum pname, GLfloat param))wglGetProcAddress("glPointParameterfSGIS");
	glPointParameterfvSGIS = (void (*)(GLenum pname, const GLfloat *params))wglGetProcAddress("glPointParameterfvSGIS");
	glSharpenTexFuncSGIS = (void (*)(GLenum target, GLsizei n, const GLfloat *points))wglGetProcAddress("glSharpenTexFuncSGIS");
	glGetSharpenTexFuncSGIS = (void (*)(GLenum target, GLfloat *points))wglGetProcAddress("glGetSharpenTexFuncSGIS");
	glTexImage4DSGIS = (void (*)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTexImage4DSGIS");
	glTexSubImage4DSGIS = (void (*)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels))wglGetProcAddress("glTexSubImage4DSGIS");
	glTextureColorMaskSGIS = (void (*)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))wglGetProcAddress("glTextureColorMaskSGIS");
	glGetTexFilterFuncSGIS = (void (*)(GLenum target, GLenum filter, GLfloat *weights))wglGetProcAddress("glGetTexFilterFuncSGIS");
	glTexFilterFuncSGIS = (void (*)(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights))wglGetProcAddress("glTexFilterFuncSGIS");
	glAsyncMarkerSGIX = (void (*)(GLuint marker))wglGetProcAddress("glAsyncMarkerSGIX");
	glFinishAsyncSGIX = (GLint (*)(GLuint *markerp))wglGetProcAddress("glFinishAsyncSGIX");
	glPollAsyncSGIX = (GLint (*)(GLuint *markerp))wglGetProcAddress("glPollAsyncSGIX");
	glGenAsyncMarkersSGIX = (GLuint (*)(GLsizei range))wglGetProcAddress("glGenAsyncMarkersSGIX");
	glDeleteAsyncMarkersSGIX = (void (*)(GLuint marker, GLsizei range))wglGetProcAddress("glDeleteAsyncMarkersSGIX");
	glIsAsyncMarkerSGIX = (GLboolean (*)(GLuint marker))wglGetProcAddress("glIsAsyncMarkerSGIX");
	glFlushRasterSGIX = (void (*)(void))wglGetProcAddress("glFlushRasterSGIX");
	glFragmentColorMaterialSGIX = (void (*)(GLenum face, GLenum mode))wglGetProcAddress("glFragmentColorMaterialSGIX");
	glFragmentLightfSGIX = (void (*)(GLenum light, GLenum pname, GLfloat param))wglGetProcAddress("glFragmentLightfSGIX");
	glFragmentLightfvSGIX = (void (*)(GLenum light, GLenum pname, const GLfloat *params))wglGetProcAddress("glFragmentLightfvSGIX");
	glFragmentLightiSGIX = (void (*)(GLenum light, GLenum pname, GLint param))wglGetProcAddress("glFragmentLightiSGIX");
	glFragmentLightivSGIX = (void (*)(GLenum light, GLenum pname, const GLint *params))wglGetProcAddress("glFragmentLightivSGIX");
	glFragmentLightModelfSGIX = (void (*)(GLenum pname, GLfloat param))wglGetProcAddress("glFragmentLightModelfSGIX");
	glFragmentLightModelfvSGIX = (void (*)(GLenum pname, const GLfloat *params))wglGetProcAddress("glFragmentLightModelfvSGIX");
	glFragmentLightModeliSGIX = (void (*)(GLenum pname, GLint param))wglGetProcAddress("glFragmentLightModeliSGIX");
	glFragmentLightModelivSGIX = (void (*)(GLenum pname, const GLint *params))wglGetProcAddress("glFragmentLightModelivSGIX");
	glFragmentMaterialfSGIX = (void (*)(GLenum face, GLenum pname, GLfloat param))wglGetProcAddress("glFragmentMaterialfSGIX");
	glFragmentMaterialfvSGIX = (void (*)(GLenum face, GLenum pname, const GLfloat *params))wglGetProcAddress("glFragmentMaterialfvSGIX");
	glFragmentMaterialiSGIX = (void (*)(GLenum face, GLenum pname, GLint param))wglGetProcAddress("glFragmentMaterialiSGIX");
	glFragmentMaterialivSGIX = (void (*)(GLenum face, GLenum pname, const GLint *params))wglGetProcAddress("glFragmentMaterialivSGIX");
	glGetFragmentLightfvSGIX = (void (*)(GLenum light, GLenum pname, GLfloat *params))wglGetProcAddress("glGetFragmentLightfvSGIX");
	glGetFragmentLightivSGIX = (void (*)(GLenum light, GLenum pname, GLint *params))wglGetProcAddress("glGetFragmentLightivSGIX");
	glGetFragmentMaterialfvSGIX = (void (*)(GLenum face, GLenum pname, GLfloat *params))wglGetProcAddress("glGetFragmentMaterialfvSGIX");
	glGetFragmentMaterialivSGIX = (void (*)(GLenum face, GLenum pname, GLint *params))wglGetProcAddress("glGetFragmentMaterialivSGIX");
	glLightEnviSGIX = (void (*)(GLenum pname, GLint param))wglGetProcAddress("glLightEnviSGIX");
	glFrameZoomSGIX = (void (*)(GLint factor))wglGetProcAddress("glFrameZoomSGIX");
	glIglooInterfaceSGIX = (void (*)(GLenum pname, const void *params))wglGetProcAddress("glIglooInterfaceSGIX");
	glGetInstrumentsSGIX = (GLint (*)(void))wglGetProcAddress("glGetInstrumentsSGIX");
	glInstrumentsBufferSGIX = (void (*)(GLsizei size, GLint *buffer))wglGetProcAddress("glInstrumentsBufferSGIX");
	glPollInstrumentsSGIX = (GLint (*)(GLint *marker_p))wglGetProcAddress("glPollInstrumentsSGIX");
	glReadInstrumentsSGIX = (void (*)(GLint marker))wglGetProcAddress("glReadInstrumentsSGIX");
	glStartInstrumentsSGIX = (void (*)(void))wglGetProcAddress("glStartInstrumentsSGIX");
	glStopInstrumentsSGIX = (void (*)(GLint marker))wglGetProcAddress("glStopInstrumentsSGIX");
	glGetListParameterfvSGIX = (void (*)(GLuint list, GLenum pname, GLfloat *params))wglGetProcAddress("glGetListParameterfvSGIX");
	glGetListParameterivSGIX = (void (*)(GLuint list, GLenum pname, GLint *params))wglGetProcAddress("glGetListParameterivSGIX");
	glListParameterfSGIX = (void (*)(GLuint list, GLenum pname, GLfloat param))wglGetProcAddress("glListParameterfSGIX");
	glListParameterfvSGIX = (void (*)(GLuint list, GLenum pname, const GLfloat *params))wglGetProcAddress("glListParameterfvSGIX");
	glListParameteriSGIX = (void (*)(GLuint list, GLenum pname, GLint param))wglGetProcAddress("glListParameteriSGIX");
	glListParameterivSGIX = (void (*)(GLuint list, GLenum pname, const GLint *params))wglGetProcAddress("glListParameterivSGIX");
	glPixelTexGenSGIX = (void (*)(GLenum mode))wglGetProcAddress("glPixelTexGenSGIX");
	glDeformationMap3dSGIX = (void (*)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points))wglGetProcAddress("glDeformationMap3dSGIX");
	glDeformationMap3fSGIX = (void (*)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points))wglGetProcAddress("glDeformationMap3fSGIX");
	glDeformSGIX = (void (*)(GLbitfield mask))wglGetProcAddress("glDeformSGIX");
	glLoadIdentityDeformationMapSGIX = (void (*)(GLbitfield mask))wglGetProcAddress("glLoadIdentityDeformationMapSGIX");
	glReferencePlaneSGIX = (void (*)(const GLdouble *equation))wglGetProcAddress("glReferencePlaneSGIX");
	glSpriteParameterfSGIX = (void (*)(GLenum pname, GLfloat param))wglGetProcAddress("glSpriteParameterfSGIX");
	glSpriteParameterfvSGIX = (void (*)(GLenum pname, const GLfloat *params))wglGetProcAddress("glSpriteParameterfvSGIX");
	glSpriteParameteriSGIX = (void (*)(GLenum pname, GLint param))wglGetProcAddress("glSpriteParameteriSGIX");
	glSpriteParameterivSGIX = (void (*)(GLenum pname, const GLint *params))wglGetProcAddress("glSpriteParameterivSGIX");
	glTagSampleBufferSGIX = (void (*)(void))wglGetProcAddress("glTagSampleBufferSGIX");
	glColorTableSGI = (void (*)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table))wglGetProcAddress("glColorTableSGI");
	glColorTableParameterfvSGI = (void (*)(GLenum target, GLenum pname, const GLfloat *params))wglGetProcAddress("glColorTableParameterfvSGI");
	glColorTableParameterivSGI = (void (*)(GLenum target, GLenum pname, const GLint *params))wglGetProcAddress("glColorTableParameterivSGI");
	glCopyColorTableSGI = (void (*)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width))wglGetProcAddress("glCopyColorTableSGI");
	glGetColorTableSGI = (void (*)(GLenum target, GLenum format, GLenum type, void *table))wglGetProcAddress("glGetColorTableSGI");
	glGetColorTableParameterfvSGI = (void (*)(GLenum target, GLenum pname, GLfloat *params))wglGetProcAddress("glGetColorTableParameterfvSGI");
	glGetColorTableParameterivSGI = (void (*)(GLenum target, GLenum pname, GLint *params))wglGetProcAddress("glGetColorTableParameterivSGI");
	glFinishTextureSUNX = (void (*)(void))wglGetProcAddress("glFinishTextureSUNX");
	glGlobalAlphaFactorbSUN = (void (*)(GLbyte factor))wglGetProcAddress("glGlobalAlphaFactorbSUN");
	glGlobalAlphaFactorsSUN = (void (*)(GLshort factor))wglGetProcAddress("glGlobalAlphaFactorsSUN");
	glGlobalAlphaFactoriSUN = (void (*)(GLint factor))wglGetProcAddress("glGlobalAlphaFactoriSUN");
	glGlobalAlphaFactorfSUN = (void (*)(GLfloat factor))wglGetProcAddress("glGlobalAlphaFactorfSUN");
	glGlobalAlphaFactordSUN = (void (*)(GLdouble factor))wglGetProcAddress("glGlobalAlphaFactordSUN");
	glGlobalAlphaFactorubSUN = (void (*)(GLubyte factor))wglGetProcAddress("glGlobalAlphaFactorubSUN");
	glGlobalAlphaFactorusSUN = (void (*)(GLushort factor))wglGetProcAddress("glGlobalAlphaFactorusSUN");
	glGlobalAlphaFactoruiSUN = (void (*)(GLuint factor))wglGetProcAddress("glGlobalAlphaFactoruiSUN");
	glDrawMeshArraysSUN = (void (*)(GLenum mode, GLint first, GLsizei count, GLsizei width))wglGetProcAddress("glDrawMeshArraysSUN");
	glReplacementCodeuiSUN = (void (*)(GLuint code))wglGetProcAddress("glReplacementCodeuiSUN");
	glReplacementCodeusSUN = (void (*)(GLushort code))wglGetProcAddress("glReplacementCodeusSUN");
	glReplacementCodeubSUN = (void (*)(GLubyte code))wglGetProcAddress("glReplacementCodeubSUN");
	glReplacementCodeuivSUN = (void (*)(const GLuint *code))wglGetProcAddress("glReplacementCodeuivSUN");
	glReplacementCodeusvSUN = (void (*)(const GLushort *code))wglGetProcAddress("glReplacementCodeusvSUN");
	glReplacementCodeubvSUN = (void (*)(const GLubyte *code))wglGetProcAddress("glReplacementCodeubvSUN");
	glReplacementCodePointerSUN = (void (*)(GLenum type, GLsizei stride, const void **pointer))wglGetProcAddress("glReplacementCodePointerSUN");
	glColor4ubVertex2fSUN = (void (*)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y))wglGetProcAddress("glColor4ubVertex2fSUN");
	glColor4ubVertex2fvSUN = (void (*)(const GLubyte *c, const GLfloat *v))wglGetProcAddress("glColor4ubVertex2fvSUN");
	glColor4ubVertex3fSUN = (void (*)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glColor4ubVertex3fSUN");
	glColor4ubVertex3fvSUN = (void (*)(const GLubyte *c, const GLfloat *v))wglGetProcAddress("glColor4ubVertex3fvSUN");
	glColor3fVertex3fSUN = (void (*)(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glColor3fVertex3fSUN");
	glColor3fVertex3fvSUN = (void (*)(const GLfloat *c, const GLfloat *v))wglGetProcAddress("glColor3fVertex3fvSUN");
	glNormal3fVertex3fSUN = (void (*)(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glNormal3fVertex3fSUN");
	glNormal3fVertex3fvSUN = (void (*)(const GLfloat *n, const GLfloat *v))wglGetProcAddress("glNormal3fVertex3fvSUN");
	glColor4fNormal3fVertex3fSUN = (void (*)(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glColor4fNormal3fVertex3fSUN");
	glColor4fNormal3fVertex3fvSUN = (void (*)(const GLfloat *c, const GLfloat *n, const GLfloat *v))wglGetProcAddress("glColor4fNormal3fVertex3fvSUN");
	glTexCoord2fVertex3fSUN = (void (*)(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glTexCoord2fVertex3fSUN");
	glTexCoord2fVertex3fvSUN = (void (*)(const GLfloat *tc, const GLfloat *v))wglGetProcAddress("glTexCoord2fVertex3fvSUN");
	glTexCoord4fVertex4fSUN = (void (*)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glTexCoord4fVertex4fSUN");
	glTexCoord4fVertex4fvSUN = (void (*)(const GLfloat *tc, const GLfloat *v))wglGetProcAddress("glTexCoord4fVertex4fvSUN");
	glTexCoord2fColor4ubVertex3fSUN = (void (*)(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glTexCoord2fColor4ubVertex3fSUN");
	glTexCoord2fColor4ubVertex3fvSUN = (void (*)(const GLfloat *tc, const GLubyte *c, const GLfloat *v))wglGetProcAddress("glTexCoord2fColor4ubVertex3fvSUN");
	glTexCoord2fColor3fVertex3fSUN = (void (*)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glTexCoord2fColor3fVertex3fSUN");
	glTexCoord2fColor3fVertex3fvSUN = (void (*)(const GLfloat *tc, const GLfloat *c, const GLfloat *v))wglGetProcAddress("glTexCoord2fColor3fVertex3fvSUN");
	glTexCoord2fNormal3fVertex3fSUN = (void (*)(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glTexCoord2fNormal3fVertex3fSUN");
	glTexCoord2fNormal3fVertex3fvSUN = (void (*)(const GLfloat *tc, const GLfloat *n, const GLfloat *v))wglGetProcAddress("glTexCoord2fNormal3fVertex3fvSUN");
	glTexCoord2fColor4fNormal3fVertex3fSUN = (void (*)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glTexCoord2fColor4fNormal3fVertex3fSUN");
	glTexCoord2fColor4fNormal3fVertex3fvSUN = (void (*)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v))wglGetProcAddress("glTexCoord2fColor4fNormal3fVertex3fvSUN");
	glTexCoord4fColor4fNormal3fVertex4fSUN = (void (*)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w))wglGetProcAddress("glTexCoord4fColor4fNormal3fVertex4fSUN");
	glTexCoord4fColor4fNormal3fVertex4fvSUN = (void (*)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v))wglGetProcAddress("glTexCoord4fColor4fNormal3fVertex4fvSUN");
	glReplacementCodeuiVertex3fSUN = (void (*)(GLuint rc, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glReplacementCodeuiVertex3fSUN");
	glReplacementCodeuiVertex3fvSUN = (void (*)(const GLuint *rc, const GLfloat *v))wglGetProcAddress("glReplacementCodeuiVertex3fvSUN");
	glReplacementCodeuiColor4ubVertex3fSUN = (void (*)(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glReplacementCodeuiColor4ubVertex3fSUN");
	glReplacementCodeuiColor4ubVertex3fvSUN = (void (*)(const GLuint *rc, const GLubyte *c, const GLfloat *v))wglGetProcAddress("glReplacementCodeuiColor4ubVertex3fvSUN");
	glReplacementCodeuiColor3fVertex3fSUN = (void (*)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glReplacementCodeuiColor3fVertex3fSUN");
	glReplacementCodeuiColor3fVertex3fvSUN = (void (*)(const GLuint *rc, const GLfloat *c, const GLfloat *v))wglGetProcAddress("glReplacementCodeuiColor3fVertex3fvSUN");
	glReplacementCodeuiNormal3fVertex3fSUN = (void (*)(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glReplacementCodeuiNormal3fVertex3fSUN");
	glReplacementCodeuiNormal3fVertex3fvSUN = (void (*)(const GLuint *rc, const GLfloat *n, const GLfloat *v))wglGetProcAddress("glReplacementCodeuiNormal3fVertex3fvSUN");
	glReplacementCodeuiColor4fNormal3fVertex3fSUN = (void (*)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glReplacementCodeuiColor4fNormal3fVertex3fSUN");
	glReplacementCodeuiColor4fNormal3fVertex3fvSUN = (void (*)(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v))wglGetProcAddress("glReplacementCodeuiColor4fNormal3fVertex3fvSUN");
	glReplacementCodeuiTexCoord2fVertex3fSUN = (void (*)(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glReplacementCodeuiTexCoord2fVertex3fSUN");
	glReplacementCodeuiTexCoord2fVertex3fvSUN = (void (*)(const GLuint *rc, const GLfloat *tc, const GLfloat *v))wglGetProcAddress("glReplacementCodeuiTexCoord2fVertex3fvSUN");
	glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = (void (*)(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN");
	glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = (void (*)(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v))wglGetProcAddress("glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN");
	glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = (void (*)(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))wglGetProcAddress("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN");
	glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = (void (*)(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v))wglGetProcAddress("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN");
}
